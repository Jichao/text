// Warning! This file is autogenerated.
#ifndef BOOST_TEXT_DATA_SK_HPP
#define BOOST_TEXT_DATA_SK_HPP

#include <boost/text/string_view.hpp>


namespace boost { namespace text { namespace data { namespace sk {

inline string_view search_collation_tailoring()
{
    return string_view(
"  \n"
"  \n"
"[normalization on]\n"
"[suppressContractions [\xe0\xb9\x80-\xe0\xb9\x84 \xe0\xbb\x80-\xe0\xbb\x84 \xea\xaa\xb5 \xea\xaa\xb6 \xea\xaa\xb9 \xea\xaa\xbb \xea\xaa\xbc\\u19B5-\\u19B7\\u19BA]]\n"
"&'='<'\xe2\x89\xa0'\n"
"&\xd8\xa7\n"
"  <<<\xef\xba\x8e<<<\xef\xba\x8d\n"
"  <<\xd8\xa2\n"
"  <<<\xef\xba\x82<<<\xef\xba\x81\n"
"  <<\xd8\xa3\n"
"  <<<\xef\xba\x84<<<\xef\xba\x83\n"
"  <<\xd8\xa5\n"
"  <<<\xef\xba\x88<<<\xef\xba\x87\n"
"&\xd9\x88\n"
"  <<<\xdb\xa5\n"
"  <<<\xef\xbb\xae<<<\xef\xbb\xad\n"
"  <<\xd8\xa4\n"
"  <<<\xef\xba\x86<<<\xef\xba\x85\n"
"&\xd9\x8a\n"
"  <<<\xdb\xa6\n"
"  <<<\xef\xbb\xb3<<<\xef\xbb\xb4<<<\xef\xbb\xb2<<<\xef\xbb\xb1\n"
"  <<\xd8\xa6\n"
"  <<<\xef\xba\x8b<<<\xef\xba\x8c<<<\xef\xba\x8a<<<\xef\xba\x89\n"
"  <<\xd9\x89\n"
"  <<<\xef\xaf\xa8<<<\xef\xaf\xa9\n"
"  <<<\xef\xbb\xb0<<<\xef\xbb\xaf\n"
"&\xd9\x87\n"
"  <<<\xef\xbb\xab<<<\xef\xbb\xac<<<\xef\xbb\xaa<<<\xef\xbb\xa9\n"
"  <<\xd8\xa9\n"
"  <<<\xef\xba\x94<<<\xef\xba\x93\n"
"&[last primary ignorable]<<\xd7\xb3\n"
"  <<\xd7\xb4\n"
"  <<\xd9\x80\n"
"  <<\xe0\xb8\xba\n"
"&\xe1\x84\x80\n"
"  =\xe1\x86\xa8\n"
"&\xe1\x84\x80\xe1\x84\x80\n"
"  =\xe1\x84\x81=\xe1\x86\xa9\n"
"&\xe1\x84\x80\xe1\x84\x89\n"
"  =\xe1\x86\xaa\n"
"&\xe1\x84\x82\n"
"  =\xe1\x86\xab\n"
"&\xe1\x84\x82\xe1\x84\x8c\n"
"  =\xe1\x86\xac\n"
"&\xe1\x84\x82\xe1\x84\x92\n"
"  =\xe1\x86\xad\n"
"&\xe1\x84\x83\n"
"  =\xe1\x86\xae\n"
"&\xe1\x84\x83\xe1\x84\x83\n"
"  =\xe1\x84\x84\n"
"&\xe1\x84\x85\n"
"  =\xe1\x86\xaf\n"
"&\xe1\x84\x85\xe1\x84\x80\n"
"  =\xe1\x86\xb0\n"
"&\xe1\x84\x85\xe1\x84\x86\n"
"  =\xe1\x86\xb1\n"
"&\xe1\x84\x85\xe1\x84\x87\n"
"  =\xe1\x86\xb2\n"
"&\xe1\x84\x85\xe1\x84\x89\n"
"  =\xe1\x86\xb3\n"
"&\xe1\x84\x85\xe1\x84\x90\n"
"  =\xe1\x86\xb4\n"
"&\xe1\x84\x85\xe1\x84\x91\n"
"  =\xe1\x86\xb5\n"
"&\xe1\x84\x85\xe1\x84\x92\n"
"  =\xe1\x86\xb6\n"
"&\xe1\x84\x86\n"
"  =\xe1\x86\xb7\n"
"&\xe1\x84\x87\n"
"  =\xe1\x86\xb8\n"
"&\xe1\x84\x87\xe1\x84\x87\n"
"  =\xe1\x84\x88\n"
"&\xe1\x84\x87\xe1\x84\x89\n"
"  =\xe1\x86\xb9\n"
"&\xe1\x84\x89\n"
"  =\xe1\x86\xba\n"
"&\xe1\x84\x89\xe1\x84\x89\n"
"  =\xe1\x84\x8a=\xe1\x86\xbb\n"
"&\xe1\x84\x8b\n"
"  =\xe1\x86\xbc\n"
"&\xe1\x84\x8c\n"
"  =\xe1\x86\xbd\n"
"&\xe1\x84\x8c\xe1\x84\x8c\n"
"  =\xe1\x84\x8d\n"
"&\xe1\x84\x8e\n"
"  =\xe1\x86\xbe\n"
"&\xe1\x84\x8f\n"
"  =\xe1\x86\xbf\n"
"&\xe1\x84\x90\n"
"  =\xe1\x87\x80\n"
"&\xe1\x84\x91\n"
"  =\xe1\x87\x81\n"
"&\xe1\x84\x92\n"
"  =\xe1\x87\x82\n"
"&\xe1\x85\xa1\xe1\x85\xb5\n"
"  =\xe1\x85\xa2\n"
"&\xe1\x85\xa3\xe1\x85\xb5\n"
"  =\xe1\x85\xa4\n"
"&\xe1\x85\xa5\xe1\x85\xb5\n"
"  =\xe1\x85\xa6\n"
"&\xe1\x85\xa7\xe1\x85\xb5\n"
"  =\xe1\x85\xa8\n"
"&\xe1\x85\xa9\xe1\x85\xa1\n"
"  =\xe1\x85\xaa\n"
"&\xe1\x85\xa9\xe1\x85\xa1\xe1\x85\xb5\n"
"  =\xe1\x85\xab\n"
"&\xe1\x85\xa9\xe1\x85\xb5\n"
"  =\xe1\x85\xac\n"
"&\xe1\x85\xae\xe1\x85\xa5\n"
"  =\xe1\x85\xaf\n"
"&\xe1\x85\xae\xe1\x85\xa5\xe1\x85\xb5\n"
"  =\xe1\x85\xb0\n"
"&\xe1\x85\xae\xe1\x85\xb5\n"
"  =\xe1\x85\xb1\n"
"&\xe1\x85\xb3\xe1\x85\xb5\n"
"  =\xe1\x85\xb4\n"
"  \n"
"&A<\xc3\xa1<<<\xc3\x81<\xc3\xa4<<<\xc3\x84\n"
"&C<\xc4\x8d<<<\xc4\x8c\n"
"&D<\xc4\x8f<<<\xc4\x8e\n"
"&E<\xc3\xa9<<<\xc3\x89<\xc4\x9b<<<\xc4\x9a\n"
"&I<\xc3\xad<<<\xc3\x8d\n"
"&L<\xc4\xba<<<\xc4\xb9<\xc4\xbe<<<\xc4\xbd\n"
"&N<\xc5\x88<<<\xc5\x87\n"
"&O<\xc3\xb3<<<\xc3\x93<\xc3\xb4<<<\xc3\x94\n"
"&R<\xc5\x95<<<\xc5\x94<\xc5\x99<<<\xc5\x98\n"
"&S<\xc5\xa1<<<\xc5\xa0\n"
"&T<\xc5\xa5<<<\xc5\xa4\n"
"&U<\xc3\xba<<<\xc3\x9a<\xc5\xaf<<<\xc5\xae\n"
"&Y<\xc3\xbd<<<\xc3\x9d\n"
"&Z<\xc5\xbe<<<\xc5\xbd\n"
"  \n");
}

inline string_view standard_collation_tailoring()
{
    return string_view(
"  \n"
"&A<a\xcc\x88<<<A\xcc\x88\n"
"&C<c\xcc\x8c<<<C\xcc\x8c\n"
"&H<ch<<<cH<<<Ch<<<CH\n"
"&O<o\xcc\x82<<<O\xcc\x82\n"
"&R<r\xcc\x8c<<<R\xcc\x8c\n"
"&S<s\xcc\x8c<<<S\xcc\x8c\n"
"&Z<z\xcc\x8c<<<Z\xcc\x8c\n"
"  \n");
}


}}}}

#endif
