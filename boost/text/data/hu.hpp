// Warning! This file is autogenerated.
#ifndef BOOST_TEXT_DATA_HU_HPP
#define BOOST_TEXT_DATA_HU_HPP

#include<boost/text/string_view.hpp>


namespace boost { namespace text { namespace data { namespace hu {

inline string_view standard_collation_tailoring()
{
    return string_view(
"  \n"
"&C<cs<<<Cs<<<CS\n"
"&D<dz<<<Dz<<<DZ\n"
"&DZ<dzs<<<Dzs<<<DZS\n"
"&G<gy<<<Gy<<<GY\n"
"&L<ly<<<Ly<<<LY\n"
"&N<ny<<<Ny<<<NY\n"
"&S<sz<<<Sz<<<SZ\n"
"&T<ty<<<Ty<<<TY\n"
"&Z<zs<<<Zs<<<ZS\n"
"&O<ö<<<Ö<<ő<<<Ő\n"
"&U<ü<<<Ü<<ű<<<Ű\n"
"&cs<<<ccs/cs\n"
"&Cs<<<Ccs/cs\n"
"&CS<<<CCS/CS\n"
"&dz<<<ddz/dz\n"
"&Dz<<<Ddz/dz\n"
"&DZ<<<DDZ/DZ\n"
"&dzs<<<ddzs/dzs\n"
"&Dzs<<<Ddzs/dzs\n"
"&DZS<<<DDZS/DZS\n"
"&gy<<<ggy/gy\n"
"&Gy<<<Ggy/gy\n"
"&GY<<<GGY/GY\n"
"&ly<<<lly/ly\n"
"&Ly<<<Lly/ly\n"
"&LY<<<LLY/LY\n"
"&ny<<<nny/ny\n"
"&Ny<<<Nny/ny\n"
"&NY<<<NNY/NY\n"
"&sz<<<ssz/sz\n"
"&Sz<<<Ssz/sz\n"
"&SZ<<<SSZ/SZ\n"
"&ty<<<tty/ty\n"
"&Ty<<<Tty/ty\n"
"&TY<<<TTY/TY\n"
"&zs<<<zzs/zs\n"
"&Zs<<<Zzs/zs\n"
"&ZS<<<ZZS/ZS\n"
"  \n");
}


}}}}

#endif
