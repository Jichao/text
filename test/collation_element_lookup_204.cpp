// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_204_000)
{
    // 2F8AE ; [.FB40.0020.0002][.E1AF.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8AE

    uint32_t const cps[1] = { 0x2f8ae };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe1af), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_001)
{
    // 2F8AF ; [.FB40.0020.0002][.E1DE.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8AF

    uint32_t const cps[1] = { 0x2f8af };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe1de), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_002)
{
    // 2F8B0 ; [.FB40.0020.0002][.E1F2.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B0

    uint32_t const cps[1] = { 0x2f8b0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe1f2), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_003)
{
    // 2F8B1 ; [.FB40.0020.0002][.E1F6.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B1

    uint32_t const cps[1] = { 0x2f8b1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe1f6), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_004)
{
    // 2F8B2 ; [.FB40.0020.0002][.E210.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B2

    uint32_t const cps[1] = { 0x2f8b2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe210), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_005)
{
    // 2F8B3 ; [.FB40.0020.0002][.E21B.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B3

    uint32_t const cps[1] = { 0x2f8b3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe21b), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_006)
{
    // 2F8B4 ; [.FB40.0020.0002][.E25D.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B4

    uint32_t const cps[1] = { 0x2f8b4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe25d), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_007)
{
    // 2F8B5 ; [.FB40.0020.0002][.E2B1.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B5

    uint32_t const cps[1] = { 0x2f8b5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe2b1), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_008)
{
    // 2F8B6 ; [.FB40.0020.0002][.E2D4.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B6

    uint32_t const cps[1] = { 0x2f8b6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe2d4), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_009)
{
    // 2F8B7 ; [.FB40.0020.0002][.E350.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B7

    uint32_t const cps[1] = { 0x2f8b7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe350), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_010)
{
    // 2F8B8 ; [.FB84.0020.0002][.AB0C.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B8

    uint32_t const cps[1] = { 0x2f8b8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xab0c), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_011)
{
    // 2F8B9 ; [.FB40.0020.0002][.E33D.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8B9

    uint32_t const cps[1] = { 0x2f8b9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe33d), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_012)
{
    // 2F8BA ; [.FB40.0020.0002][.E2FC.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8BA

    uint32_t const cps[1] = { 0x2f8ba };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe2fc), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_013)
{
    // 2F8BB ; [.FB40.0020.0002][.E368.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8BB

    uint32_t const cps[1] = { 0x2f8bb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe368), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_014)
{
    // 2F8BC ; [.FB40.0020.0002][.E383.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8BC

    uint32_t const cps[1] = { 0x2f8bc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe383), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_015)
{
    // 2F8BD ; [.FB40.0020.0002][.E3E4.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8BD

    uint32_t const cps[1] = { 0x2f8bd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe3e4), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_016)
{
    // 2F8BE ; [.FB84.0020.0002][.ABF1.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8BE

    uint32_t const cps[1] = { 0x2f8be };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xabf1), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_017)
{
    // 2F8BF ; [.FB40.0020.0002][.E422.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8BF

    uint32_t const cps[1] = { 0x2f8bf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe422), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_018)
{
    // 2F8C0 ; [.FB40.0020.0002][.E3C5.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C0

    uint32_t const cps[1] = { 0x2f8c0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe3c5), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_019)
{
    // 2F8C1 ; [.FB40.0020.0002][.E3A9.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C1

    uint32_t const cps[1] = { 0x2f8c1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe3a9), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_020)
{
    // 2F8C2 ; [.FB80.0020.0002][.BA2E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C2

    uint32_t const cps[1] = { 0x2f8c2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xba2e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_021)
{
    // 2F8C3 ; [.FB40.0020.0002][.E469.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C3

    uint32_t const cps[1] = { 0x2f8c3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe469), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_022)
{
    // 2F8C4 ; [.FB40.0020.0002][.E47E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C4

    uint32_t const cps[1] = { 0x2f8c4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe47e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_023)
{
    // 2F8C5 ; [.FB40.0020.0002][.E49D.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C5

    uint32_t const cps[1] = { 0x2f8c5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe49d), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_024)
{
    // 2F8C6 ; [.FB40.0020.0002][.E477.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C6

    uint32_t const cps[1] = { 0x2f8c6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe477), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_025)
{
    // 2F8C7 ; [.FB80.0020.0002][.BA6C.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C7

    uint32_t const cps[1] = { 0x2f8c7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xba6c), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_026)
{
    // 2F8C8 ; [.FB40.0020.0002][.E54F.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C8

    uint32_t const cps[1] = { 0x2f8c8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe54f), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_027)
{
    // 2F8C9 ; [.FB40.0020.0002][.E56C.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8C9

    uint32_t const cps[1] = { 0x2f8c9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe56c), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_028)
{
    // 2F8CA ; [.FB84.0020.0002][.B00A.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8CA

    uint32_t const cps[1] = { 0x2f8ca };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xb00a), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_029)
{
    // 2F8CB ; [.FB40.0020.0002][.E5E3.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8CB

    uint32_t const cps[1] = { 0x2f8cb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe5e3), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_030)
{
    // 2F8CC ; [.FB40.0020.0002][.E6F8.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8CC

    uint32_t const cps[1] = { 0x2f8cc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe6f8), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_031)
{
    // 2F8CD ; [.FB40.0020.0002][.E649.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8CD

    uint32_t const cps[1] = { 0x2f8cd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe649), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_032)
{
    // 2F8CE ; [.FB80.0020.0002][.BB19.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8CE

    uint32_t const cps[1] = { 0x2f8ce };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbb19), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_033)
{
    // 2F8CF ; [.FB40.0020.0002][.E691.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8CF

    uint32_t const cps[1] = { 0x2f8cf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe691), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_034)
{
    // 2F8D0 ; [.FB80.0020.0002][.BB08.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D0

    uint32_t const cps[1] = { 0x2f8d0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbb08), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_035)
{
    // 2F8D1 ; [.FB80.0020.0002][.BAE4.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D1

    uint32_t const cps[1] = { 0x2f8d1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbae4), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_036)
{
    // 2F8D2 ; [.FB40.0020.0002][.D192.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D2

    uint32_t const cps[1] = { 0x2f8d2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xd192), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_037)
{
    // 2F8D3 ; [.FB40.0020.0002][.D195.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D3

    uint32_t const cps[1] = { 0x2f8d3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xd195), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_038)
{
    // 2F8D4 ; [.FB40.0020.0002][.E700.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D4

    uint32_t const cps[1] = { 0x2f8d4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe700), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_039)
{
    // 2F8D5 ; [.FB40.0020.0002][.E69C.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D5

    uint32_t const cps[1] = { 0x2f8d5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe69c), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_040)
{
    // 2F8D6 ; [.FB41.0020.0002][.80AD.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D6

    uint32_t const cps[1] = { 0x2f8d6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb41), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x80ad), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_041)
{
    // 2F8D7 ; [.FB80.0020.0002][.C3D9.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D7

    uint32_t const cps[1] = { 0x2f8d7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xc3d9), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_042)
{
    // 2F8D8 ; [.FB40.0020.0002][.E717.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D8

    uint32_t const cps[1] = { 0x2f8d8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe717), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_043)
{
    // 2F8D9 ; [.FB40.0020.0002][.E71B.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8D9

    uint32_t const cps[1] = { 0x2f8d9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe71b), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_044)
{
    // 2F8DA ; [.FB40.0020.0002][.E721.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8DA

    uint32_t const cps[1] = { 0x2f8da };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe721), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_045)
{
    // 2F8DB ; [.FB40.0020.0002][.E75E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8DB

    uint32_t const cps[1] = { 0x2f8db };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe75e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_046)
{
    // 2F8DC ; [.FB40.0020.0002][.E753.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8DC

    uint32_t const cps[1] = { 0x2f8dc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe753), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_047)
{
    // 2F8DD ; [.FB84.0020.0002][.B3C3.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8DD

    uint32_t const cps[1] = { 0x2f8dd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xb3c3), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_048)
{
    // 2F8DE ; [.FB80.0020.0002][.BB49.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8DE

    uint32_t const cps[1] = { 0x2f8de };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbb49), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_049)
{
    // 2F8DF ; [.FB40.0020.0002][.E7FA.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8DF

    uint32_t const cps[1] = { 0x2f8df };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe7fa), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_050)
{
    // 2F8E0 ; [.FB40.0020.0002][.E785.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E0

    uint32_t const cps[1] = { 0x2f8e0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe785), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_051)
{
    // 2F8E1 ; [.FB40.0020.0002][.E852.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E1

    uint32_t const cps[1] = { 0x2f8e1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe852), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_052)
{
    // 2F8E2 ; [.FB40.0020.0002][.E885.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E2

    uint32_t const cps[1] = { 0x2f8e2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe885), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_053)
{
    // 2F8E3 ; [.FB84.0020.0002][.B46D.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E3

    uint32_t const cps[1] = { 0x2f8e3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xb46d), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_054)
{
    // 2F8E4 ; [.FB40.0020.0002][.E88E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E4

    uint32_t const cps[1] = { 0x2f8e4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe88e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_055)
{
    // 2F8E5 ; [.FB40.0020.0002][.E81F.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E5

    uint32_t const cps[1] = { 0x2f8e5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe81f), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_056)
{
    // 2F8E6 ; [.FB40.0020.0002][.E914.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E6

    uint32_t const cps[1] = { 0x2f8e6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe914), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_057)
{
    // 2F8E7 ; [.FB80.0020.0002][.BB9D.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E7

    uint32_t const cps[1] = { 0x2f8e7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbb9d), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_058)
{
    // 2F8E8 ; [.FB40.0020.0002][.E942.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E8

    uint32_t const cps[1] = { 0x2f8e8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe942), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_059)
{
    // 2F8E9 ; [.FB40.0020.0002][.E9A3.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8E9

    uint32_t const cps[1] = { 0x2f8e9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe9a3), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_060)
{
    // 2F8EA ; [.FB40.0020.0002][.E9EA.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8EA

    uint32_t const cps[1] = { 0x2f8ea };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xe9ea), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_061)
{
    // 2F8EB ; [.FB40.0020.0002][.EAA8.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8EB

    uint32_t const cps[1] = { 0x2f8eb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeaa8), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_062)
{
    // 2F8EC ; [.FB84.0020.0002][.B6A3.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8EC

    uint32_t const cps[1] = { 0x2f8ec };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xb6a3), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_063)
{
    // 2F8ED ; [.FB40.0020.0002][.EADB.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8ED

    uint32_t const cps[1] = { 0x2f8ed };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeadb), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_064)
{
    // 2F8EE ; [.FB80.0020.0002][.BC18.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8EE

    uint32_t const cps[1] = { 0x2f8ee };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbc18), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_065)
{
    // 2F8EF ; [.FB40.0020.0002][.EB21.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8EF

    uint32_t const cps[1] = { 0x2f8ef };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeb21), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_066)
{
    // 2F8F0 ; [.FB84.0020.0002][.B8A7.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F0

    uint32_t const cps[1] = { 0x2f8f0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xb8a7), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_067)
{
    // 2F8F1 ; [.FB40.0020.0002][.EB54.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F1

    uint32_t const cps[1] = { 0x2f8f1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeb54), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_068)
{
    // 2F8F2 ; [.FB80.0020.0002][.BC4E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F2

    uint32_t const cps[1] = { 0x2f8f2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbc4e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_069)
{
    // 2F8F3 ; [.FB40.0020.0002][.EB72.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F3

    uint32_t const cps[1] = { 0x2f8f3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeb72), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_070)
{
    // 2F8F4 ; [.FB40.0020.0002][.EB9F.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F4

    uint32_t const cps[1] = { 0x2f8f4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeb9f), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_071)
{
    // 2F8F5 ; [.FB40.0020.0002][.EBBA.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F5

    uint32_t const cps[1] = { 0x2f8f5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xebba), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_072)
{
    // 2F8F6 ; [.FB40.0020.0002][.EBBB.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F6

    uint32_t const cps[1] = { 0x2f8f6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xebbb), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_073)
{
    // 2F8F7 ; [.FB84.0020.0002][.BA8D.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F7

    uint32_t const cps[1] = { 0x2f8f7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xba8d), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_074)
{
    // 2F8F8 ; [.FB84.0020.0002][.9D0B.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F8

    uint32_t const cps[1] = { 0x2f8f8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x9d0b), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_075)
{
    // 2F8F9 ; [.FB84.0020.0002][.BAFA.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8F9

    uint32_t const cps[1] = { 0x2f8f9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbafa), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_076)
{
    // 2F8FA ; [.FB40.0020.0002][.EC4E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8FA

    uint32_t const cps[1] = { 0x2f8fa };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xec4e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_077)
{
    // 2F8FB ; [.FB84.0020.0002][.BCBC.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8FB

    uint32_t const cps[1] = { 0x2f8fb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbcbc), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_078)
{
    // 2F8FC ; [.FB40.0020.0002][.ECBF.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8FC

    uint32_t const cps[1] = { 0x2f8fc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xecbf), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_079)
{
    // 2F8FD ; [.FB40.0020.0002][.ECCD.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8FD

    uint32_t const cps[1] = { 0x2f8fd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeccd), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_080)
{
    // 2F8FE ; [.FB40.0020.0002][.EC67.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8FE

    uint32_t const cps[1] = { 0x2f8fe };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xec67), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_081)
{
    // 2F8FF ; [.FB40.0020.0002][.ED16.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F8FF

    uint32_t const cps[1] = { 0x2f8ff };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed16), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_082)
{
    // 2F900 ; [.FB40.0020.0002][.ED3E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F900

    uint32_t const cps[1] = { 0x2f900 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed3e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_083)
{
    // 2F901 ; [.FB40.0020.0002][.ED77.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F901

    uint32_t const cps[1] = { 0x2f901 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed77), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_084)
{
    // 2F902 ; [.FB40.0020.0002][.ED41.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F902

    uint32_t const cps[1] = { 0x2f902 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed41), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_085)
{
    // 2F903 ; [.FB40.0020.0002][.ED69.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F903

    uint32_t const cps[1] = { 0x2f903 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed69), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_086)
{
    // 2F904 ; [.FB40.0020.0002][.ED78.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F904

    uint32_t const cps[1] = { 0x2f904 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed78), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_087)
{
    // 2F905 ; [.FB40.0020.0002][.ED85.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F905

    uint32_t const cps[1] = { 0x2f905 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed85), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_088)
{
    // 2F906 ; [.FB84.0020.0002][.BD1E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F906

    uint32_t const cps[1] = { 0x2f906 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbd1e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_089)
{
    // 2F907 ; [.FB40.0020.0002][.ED34.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F907

    uint32_t const cps[1] = { 0x2f907 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xed34), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_090)
{
    // 2F908 ; [.FB40.0020.0002][.EE2F.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F908

    uint32_t const cps[1] = { 0x2f908 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xee2f), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_091)
{
    // 2F909 ; [.FB40.0020.0002][.EE6E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F909

    uint32_t const cps[1] = { 0x2f909 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xee6e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_092)
{
    // 2F90A ; [.FB80.0020.0002][.BD33.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F90A

    uint32_t const cps[1] = { 0x2f90a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbd33), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_093)
{
    // 2F90B ; [.FB40.0020.0002][.EECB.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F90B

    uint32_t const cps[1] = { 0x2f90b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeecb), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_094)
{
    // 2F90C ; [.FB40.0020.0002][.EEC7.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F90C

    uint32_t const cps[1] = { 0x2f90c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xeec7), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_095)
{
    // 2F90D ; [.FB84.0020.0002][.BED1.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F90D

    uint32_t const cps[1] = { 0x2f90d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbed1), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_096)
{
    // 2F90E ; [.FB40.0020.0002][.EDF9.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F90E

    uint32_t const cps[1] = { 0x2f90e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xedf9), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_097)
{
    // 2F90F ; [.FB40.0020.0002][.EF6E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F90F

    uint32_t const cps[1] = { 0x2f90f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xef6e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_098)
{
    // 2F910 ; [.FB84.0020.0002][.BF5E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F910

    uint32_t const cps[1] = { 0x2f910 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbf5e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_099)
{
    // 2F911 ; [.FB84.0020.0002][.BF8E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F911

    uint32_t const cps[1] = { 0x2f911 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbf8e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_100)
{
    // 2F912 ; [.FB40.0020.0002][.EFC6.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F912

    uint32_t const cps[1] = { 0x2f912 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xefc6), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_101)
{
    // 2F913 ; [.FB40.0020.0002][.F039.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F913

    uint32_t const cps[1] = { 0x2f913 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf039), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_102)
{
    // 2F914 ; [.FB40.0020.0002][.F01E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F914

    uint32_t const cps[1] = { 0x2f914 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf01e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_103)
{
    // 2F915 ; [.FB40.0020.0002][.F01B.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F915

    uint32_t const cps[1] = { 0x2f915 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf01b), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_104)
{
    // 2F916 ; [.FB80.0020.0002][.BD96.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F916

    uint32_t const cps[1] = { 0x2f916 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbd96), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_105)
{
    // 2F917 ; [.FB40.0020.0002][.F04A.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F917

    uint32_t const cps[1] = { 0x2f917 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf04a), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_106)
{
    // 2F918 ; [.FB40.0020.0002][.F07D.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F918

    uint32_t const cps[1] = { 0x2f918 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf07d), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_107)
{
    // 2F919 ; [.FB40.0020.0002][.F077.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F919

    uint32_t const cps[1] = { 0x2f919 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf077), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_108)
{
    // 2F91A ; [.FB40.0020.0002][.F0AD.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F91A

    uint32_t const cps[1] = { 0x2f91a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf0ad), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_109)
{
    // 2F91B ; [.FB84.0020.0002][.8525.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F91B

    uint32_t const cps[1] = { 0x2f91b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x8525), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_110)
{
    // 2F91C ; [.FB40.0020.0002][.F145.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F91C

    uint32_t const cps[1] = { 0x2f91c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf145), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_111)
{
    // 2F91D ; [.FB84.0020.0002][.C263.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F91D

    uint32_t const cps[1] = { 0x2f91d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xc263), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_112)
{
    // 2F91E ; [.FB40.0020.0002][.F19C.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F91E

    uint32_t const cps[1] = { 0x2f91e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf19c), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_113)
{
    // 2F91F ; [.FB84.0020.0002][.C3AB.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F91F

    uint32_t const cps[1] = { 0x2f91f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xc3ab), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_114)
{
    // 2F920 ; [.FB40.0020.0002][.F228.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F920

    uint32_t const cps[1] = { 0x2f920 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf228), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_115)
{
    // 2F921 ; [.FB40.0020.0002][.F235.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F921

    uint32_t const cps[1] = { 0x2f921 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf235), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_116)
{
    // 2F922 ; [.FB40.0020.0002][.F250.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F922

    uint32_t const cps[1] = { 0x2f922 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf250), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_117)
{
    // 2F923 ; [.FB84.0020.0002][.C608.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F923

    uint32_t const cps[1] = { 0x2f923 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xc608), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_118)
{
    // 2F924 ; [.FB40.0020.0002][.F280.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F924

    uint32_t const cps[1] = { 0x2f924 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf280), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_119)
{
    // 2F925 ; [.FB40.0020.0002][.F295.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F925

    uint32_t const cps[1] = { 0x2f925 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf295), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_120)
{
    // 2F926 ; [.FB84.0020.0002][.C735.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F926

    uint32_t const cps[1] = { 0x2f926 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xc735), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_121)
{
    // 2F927 ; [.FB84.0020.0002][.C814.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F927

    uint32_t const cps[1] = { 0x2f927 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xc814), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_122)
{
    // 2F928 ; [.FB40.0020.0002][.F37A.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F928

    uint32_t const cps[1] = { 0x2f928 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf37a), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_123)
{
    // 2F929 ; [.FB40.0020.0002][.F38B.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F929

    uint32_t const cps[1] = { 0x2f929 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf38b), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_124)
{
    // 2F92A ; [.FB80.0020.0002][.BEAC.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F92A

    uint32_t const cps[1] = { 0x2f92a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbeac), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_125)
{
    // 2F92B ; [.FB40.0020.0002][.F3A5.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F92B

    uint32_t const cps[1] = { 0x2f92b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf3a5), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_126)
{
    // 2F92C ; [.FB80.0020.0002][.BEB8.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F92C

    uint32_t const cps[1] = { 0x2f92c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbeb8), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_127)
{
    // 2F92D ; [.FB80.0020.0002][.BEB8.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F92D

    uint32_t const cps[1] = { 0x2f92d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbeb8), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_128)
{
    // 2F92E ; [.FB40.0020.0002][.F447.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F92E

    uint32_t const cps[1] = { 0x2f92e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf447), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_129)
{
    // 2F92F ; [.FB40.0020.0002][.F45C.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F92F

    uint32_t const cps[1] = { 0x2f92f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf45c), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_130)
{
    // 2F930 ; [.FB40.0020.0002][.F471.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F930

    uint32_t const cps[1] = { 0x2f930 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf471), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_131)
{
    // 2F931 ; [.FB40.0020.0002][.F485.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F931

    uint32_t const cps[1] = { 0x2f931 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf485), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_132)
{
    // 2F932 ; [.FB40.0020.0002][.F4CA.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F932

    uint32_t const cps[1] = { 0x2f932 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf4ca), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_133)
{
    // 2F933 ; [.FB80.0020.0002][.BF1B.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F933

    uint32_t const cps[1] = { 0x2f933 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbf1b), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_134)
{
    // 2F934 ; [.FB40.0020.0002][.F524.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F934

    uint32_t const cps[1] = { 0x2f934 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf524), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_135)
{
    // 2F935 ; [.FB84.0020.0002][.CC36.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F935

    uint32_t const cps[1] = { 0x2f935 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xcc36), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_136)
{
    // 2F936 ; [.FB40.0020.0002][.F53E.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F936

    uint32_t const cps[1] = { 0x2f936 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf53e), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_137)
{
    // 2F937 ; [.FB84.0020.0002][.CC92.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F937

    uint32_t const cps[1] = { 0x2f937 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xcc92), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_138)
{
    // 2F938 ; [.FB40.0020.0002][.F570.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F938

    uint32_t const cps[1] = { 0x2f938 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf570), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_139)
{
    // 2F939 ; [.FB84.0020.0002][.A19F.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F939

    uint32_t const cps[1] = { 0x2f939 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xa19f), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_140)
{
    // 2F93A ; [.FB40.0020.0002][.F610.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F93A

    uint32_t const cps[1] = { 0x2f93a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf610), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_141)
{
    // 2F93B ; [.FB84.0020.0002][.CFA1.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F93B

    uint32_t const cps[1] = { 0x2f93b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xcfa1), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_142)
{
    // 2F93C ; [.FB84.0020.0002][.CFB8.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F93C

    uint32_t const cps[1] = { 0x2f93c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xcfb8), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_143)
{
    // 2F93D ; [.FB84.0020.0002][.D044.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F93D

    uint32_t const cps[1] = { 0x2f93d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xd044), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_144)
{
    // 2F93E ; [.FB80.0020.0002][.BFFC.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F93E

    uint32_t const cps[1] = { 0x2f93e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xbffc), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_145)
{
    // 2F93F ; [.FB80.0020.0002][.C008.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F93F

    uint32_t const cps[1] = { 0x2f93f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb80), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xc008), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_146)
{
    // 2F940 ; [.FB40.0020.0002][.F6F4.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F940

    uint32_t const cps[1] = { 0x2f940 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xf6f4), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_147)
{
    // 2F941 ; [.FB84.0020.0002][.D0F3.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F941

    uint32_t const cps[1] = { 0x2f941 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xd0f3), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_148)
{
    // 2F942 ; [.FB84.0020.0002][.D0F2.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F942

    uint32_t const cps[1] = { 0x2f942 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xd0f2), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_204_149)
{
    // 2F943 ; [.FB84.0020.0002][.D119.0000.0000] 
    // CJK COMPATIBILITY IDEOGRAPH-2F943

    uint32_t const cps[1] = { 0x2f943 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0xfb84), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0xd119), uint8_t(0xe0), uint8_t(0x0)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

