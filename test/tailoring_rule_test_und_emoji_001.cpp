
// Warning! This file is autogenerated.
#include <boost/text/collation_tailoring.hpp>
#include <boost/text/collate.hpp>
#include <boost/text/data/all.hpp>

#include <gtest/gtest.h>

using namespace boost::text;

auto const error = [](string const & s) { std::cout << s; };
auto const warning = [](string const & s) {};

tailored_collation_element_table const & table()
{
    static tailored_collation_element_table retval =
        make_tailored_collation_element_table(
            data::und::emoji_collation_tailoring(),
            "und::emoji_collation_tailoring()", error, warning);
    return retval;
}
TEST(tailoring, und_emoji_000_000)
{
}

TEST(tailoring, und_emoji_001_001)
{
}

TEST(tailoring, und_emoji_001_002)
{
}

TEST(tailoring, und_emoji_001_003)
{
}

TEST(tailoring, und_emoji_001_004)
{
}

TEST(tailoring, und_emoji_001_005)
{
}

TEST(tailoring, und_emoji_001_006)
{
}

TEST(tailoring, und_emoji_001_007)
{
}

TEST(tailoring, und_emoji_001_008)
{
}

TEST(tailoring, und_emoji_001_009)
{
}

TEST(tailoring, und_emoji_001_010)
{
}

TEST(tailoring, und_emoji_001_011)
{
}

TEST(tailoring, und_emoji_001_012)
{
}

TEST(tailoring, und_emoji_001_013)
{
}

TEST(tailoring, und_emoji_001_014)
{
}

TEST(tailoring, und_emoji_001_015)
{
}

TEST(tailoring, und_emoji_001_016)
{
}

TEST(tailoring, und_emoji_001_017)
{
}

TEST(tailoring, und_emoji_001_018)
{
}

TEST(tailoring, und_emoji_001_019)
{
}

