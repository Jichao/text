// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_160_000)
{
    // 1451B ; [.55AF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A249

    uint32_t const cps[1] = { 0x1451b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55af), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_001)
{
    // 1451C ; [.55B0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A250

    uint32_t const cps[1] = { 0x1451c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_002)
{
    // 1451D ; [.55B1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A251

    uint32_t const cps[1] = { 0x1451d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_003)
{
    // 1451E ; [.55B2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A252

    uint32_t const cps[1] = { 0x1451e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_004)
{
    // 1451F ; [.55B3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A253

    uint32_t const cps[1] = { 0x1451f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_005)
{
    // 14520 ; [.55B4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A254

    uint32_t const cps[1] = { 0x14520 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_006)
{
    // 14521 ; [.55B5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A255

    uint32_t const cps[1] = { 0x14521 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_007)
{
    // 14522 ; [.55B6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A256

    uint32_t const cps[1] = { 0x14522 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_008)
{
    // 14523 ; [.55B7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A257

    uint32_t const cps[1] = { 0x14523 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_009)
{
    // 14524 ; [.55B8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A258

    uint32_t const cps[1] = { 0x14524 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_010)
{
    // 14525 ; [.55B9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A259

    uint32_t const cps[1] = { 0x14525 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55b9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_011)
{
    // 14526 ; [.55BA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A260

    uint32_t const cps[1] = { 0x14526 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ba), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_012)
{
    // 14527 ; [.55BB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A261

    uint32_t const cps[1] = { 0x14527 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55bb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_013)
{
    // 14528 ; [.55BC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A262

    uint32_t const cps[1] = { 0x14528 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55bc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_014)
{
    // 14529 ; [.55BD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A263

    uint32_t const cps[1] = { 0x14529 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55bd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_015)
{
    // 1452A ; [.55BE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A264

    uint32_t const cps[1] = { 0x1452a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55be), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_016)
{
    // 1452B ; [.55BF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A265

    uint32_t const cps[1] = { 0x1452b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55bf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_017)
{
    // 1452C ; [.55C0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A266

    uint32_t const cps[1] = { 0x1452c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_018)
{
    // 1452D ; [.55C1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A267

    uint32_t const cps[1] = { 0x1452d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_019)
{
    // 1452E ; [.55C2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A267A

    uint32_t const cps[1] = { 0x1452e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_020)
{
    // 1452F ; [.55C3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A268

    uint32_t const cps[1] = { 0x1452f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_021)
{
    // 14530 ; [.55C4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A269

    uint32_t const cps[1] = { 0x14530 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_022)
{
    // 14531 ; [.55C5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A270

    uint32_t const cps[1] = { 0x14531 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_023)
{
    // 14532 ; [.55C6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A271

    uint32_t const cps[1] = { 0x14532 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_024)
{
    // 14533 ; [.55C7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A272

    uint32_t const cps[1] = { 0x14533 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_025)
{
    // 14534 ; [.55C8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A273

    uint32_t const cps[1] = { 0x14534 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_026)
{
    // 14535 ; [.55C9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A274

    uint32_t const cps[1] = { 0x14535 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55c9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_027)
{
    // 14536 ; [.55CA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A275

    uint32_t const cps[1] = { 0x14536 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ca), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_028)
{
    // 14537 ; [.55CB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A276

    uint32_t const cps[1] = { 0x14537 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55cb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_029)
{
    // 14538 ; [.55CC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A277

    uint32_t const cps[1] = { 0x14538 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55cc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_030)
{
    // 14539 ; [.55CD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A278

    uint32_t const cps[1] = { 0x14539 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55cd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_031)
{
    // 1453A ; [.55CE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A279

    uint32_t const cps[1] = { 0x1453a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ce), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_032)
{
    // 1453B ; [.55CF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A280

    uint32_t const cps[1] = { 0x1453b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55cf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_033)
{
    // 1453C ; [.55D0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A281

    uint32_t const cps[1] = { 0x1453c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_034)
{
    // 1453D ; [.55D1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A282

    uint32_t const cps[1] = { 0x1453d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_035)
{
    // 1453E ; [.55D2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A283

    uint32_t const cps[1] = { 0x1453e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_036)
{
    // 1453F ; [.55D3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A284

    uint32_t const cps[1] = { 0x1453f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_037)
{
    // 14540 ; [.55D4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A285

    uint32_t const cps[1] = { 0x14540 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_038)
{
    // 14541 ; [.55D5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A286

    uint32_t const cps[1] = { 0x14541 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_039)
{
    // 14542 ; [.55D6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A287

    uint32_t const cps[1] = { 0x14542 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_040)
{
    // 14543 ; [.55D7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A288

    uint32_t const cps[1] = { 0x14543 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_041)
{
    // 14544 ; [.55D8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A289

    uint32_t const cps[1] = { 0x14544 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_042)
{
    // 14545 ; [.55D9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A289A

    uint32_t const cps[1] = { 0x14545 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55d9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_043)
{
    // 14546 ; [.55DA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A290

    uint32_t const cps[1] = { 0x14546 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55da), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_044)
{
    // 14547 ; [.55DB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A291

    uint32_t const cps[1] = { 0x14547 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55db), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_045)
{
    // 14548 ; [.55DC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A292

    uint32_t const cps[1] = { 0x14548 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55dc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_046)
{
    // 14549 ; [.55DD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A293

    uint32_t const cps[1] = { 0x14549 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55dd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_047)
{
    // 1454A ; [.55DE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A294

    uint32_t const cps[1] = { 0x1454a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55de), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_048)
{
    // 1454B ; [.55DF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A294A

    uint32_t const cps[1] = { 0x1454b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55df), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_049)
{
    // 1454C ; [.55E0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A295

    uint32_t const cps[1] = { 0x1454c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_050)
{
    // 1454D ; [.55E1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A296

    uint32_t const cps[1] = { 0x1454d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_051)
{
    // 1454E ; [.55E2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A297

    uint32_t const cps[1] = { 0x1454e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_052)
{
    // 1454F ; [.55E3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A298

    uint32_t const cps[1] = { 0x1454f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_053)
{
    // 14550 ; [.55E4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A299

    uint32_t const cps[1] = { 0x14550 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_054)
{
    // 14551 ; [.55E5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A299A

    uint32_t const cps[1] = { 0x14551 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_055)
{
    // 14552 ; [.55E6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A300

    uint32_t const cps[1] = { 0x14552 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_056)
{
    // 14553 ; [.55E7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A301

    uint32_t const cps[1] = { 0x14553 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_057)
{
    // 14554 ; [.55E8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A302

    uint32_t const cps[1] = { 0x14554 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_058)
{
    // 14555 ; [.55E9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A303

    uint32_t const cps[1] = { 0x14555 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55e9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_059)
{
    // 14556 ; [.55EA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A304

    uint32_t const cps[1] = { 0x14556 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ea), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_060)
{
    // 14557 ; [.55EB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A305

    uint32_t const cps[1] = { 0x14557 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55eb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_061)
{
    // 14558 ; [.55EC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A306

    uint32_t const cps[1] = { 0x14558 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ec), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_062)
{
    // 14559 ; [.55ED.0020.0002] 
    // ANATOLIAN HIEROGLYPH A307

    uint32_t const cps[1] = { 0x14559 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ed), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_063)
{
    // 1455A ; [.55EE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A308

    uint32_t const cps[1] = { 0x1455a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ee), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_064)
{
    // 1455B ; [.55EF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A309

    uint32_t const cps[1] = { 0x1455b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ef), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_065)
{
    // 1455C ; [.55F0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A309A

    uint32_t const cps[1] = { 0x1455c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_066)
{
    // 1455D ; [.55F1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A310

    uint32_t const cps[1] = { 0x1455d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_067)
{
    // 1455E ; [.55F2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A311

    uint32_t const cps[1] = { 0x1455e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_068)
{
    // 1455F ; [.55F3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A312

    uint32_t const cps[1] = { 0x1455f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_069)
{
    // 14560 ; [.55F4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A313

    uint32_t const cps[1] = { 0x14560 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_070)
{
    // 14561 ; [.55F5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A314

    uint32_t const cps[1] = { 0x14561 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_071)
{
    // 14562 ; [.55F6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A315

    uint32_t const cps[1] = { 0x14562 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_072)
{
    // 14563 ; [.55F7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A316

    uint32_t const cps[1] = { 0x14563 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_073)
{
    // 14564 ; [.55F8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A317

    uint32_t const cps[1] = { 0x14564 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_074)
{
    // 14565 ; [.55F9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A318

    uint32_t const cps[1] = { 0x14565 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55f9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_075)
{
    // 14566 ; [.55FA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A319

    uint32_t const cps[1] = { 0x14566 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55fa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_076)
{
    // 14567 ; [.55FB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A320

    uint32_t const cps[1] = { 0x14567 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55fb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_077)
{
    // 14568 ; [.55FC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A321

    uint32_t const cps[1] = { 0x14568 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55fc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_078)
{
    // 14569 ; [.55FD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A322

    uint32_t const cps[1] = { 0x14569 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55fd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_079)
{
    // 1456A ; [.55FE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A323

    uint32_t const cps[1] = { 0x1456a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55fe), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_080)
{
    // 1456B ; [.55FF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A324

    uint32_t const cps[1] = { 0x1456b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x55ff), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_081)
{
    // 1456C ; [.5600.0020.0002] 
    // ANATOLIAN HIEROGLYPH A325

    uint32_t const cps[1] = { 0x1456c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5600), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_082)
{
    // 1456D ; [.5601.0020.0002] 
    // ANATOLIAN HIEROGLYPH A326

    uint32_t const cps[1] = { 0x1456d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5601), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_083)
{
    // 1456E ; [.5602.0020.0002] 
    // ANATOLIAN HIEROGLYPH A327

    uint32_t const cps[1] = { 0x1456e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5602), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_084)
{
    // 1456F ; [.5603.0020.0002] 
    // ANATOLIAN HIEROGLYPH A328

    uint32_t const cps[1] = { 0x1456f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5603), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_085)
{
    // 14570 ; [.5604.0020.0002] 
    // ANATOLIAN HIEROGLYPH A329

    uint32_t const cps[1] = { 0x14570 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5604), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_086)
{
    // 14571 ; [.5605.0020.0002] 
    // ANATOLIAN HIEROGLYPH A329A

    uint32_t const cps[1] = { 0x14571 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5605), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_087)
{
    // 14572 ; [.5606.0020.0002] 
    // ANATOLIAN HIEROGLYPH A330

    uint32_t const cps[1] = { 0x14572 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5606), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_088)
{
    // 14573 ; [.5607.0020.0002] 
    // ANATOLIAN HIEROGLYPH A331

    uint32_t const cps[1] = { 0x14573 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5607), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_089)
{
    // 14574 ; [.5608.0020.0002] 
    // ANATOLIAN HIEROGLYPH A332A

    uint32_t const cps[1] = { 0x14574 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5608), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_090)
{
    // 14575 ; [.5609.0020.0002] 
    // ANATOLIAN HIEROGLYPH A332B

    uint32_t const cps[1] = { 0x14575 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5609), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_091)
{
    // 14576 ; [.560A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A332C

    uint32_t const cps[1] = { 0x14576 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x560a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_092)
{
    // 14577 ; [.560B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A333

    uint32_t const cps[1] = { 0x14577 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x560b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_093)
{
    // 14578 ; [.560C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A334

    uint32_t const cps[1] = { 0x14578 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x560c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_094)
{
    // 14579 ; [.560D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A335

    uint32_t const cps[1] = { 0x14579 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x560d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_095)
{
    // 1457A ; [.560E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A336

    uint32_t const cps[1] = { 0x1457a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x560e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_096)
{
    // 1457B ; [.560F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A336A

    uint32_t const cps[1] = { 0x1457b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x560f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_097)
{
    // 1457C ; [.5610.0020.0002] 
    // ANATOLIAN HIEROGLYPH A336B

    uint32_t const cps[1] = { 0x1457c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5610), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_098)
{
    // 1457D ; [.5611.0020.0002] 
    // ANATOLIAN HIEROGLYPH A336C

    uint32_t const cps[1] = { 0x1457d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5611), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_099)
{
    // 1457E ; [.5612.0020.0002] 
    // ANATOLIAN HIEROGLYPH A337

    uint32_t const cps[1] = { 0x1457e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5612), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_100)
{
    // 1457F ; [.5613.0020.0002] 
    // ANATOLIAN HIEROGLYPH A338

    uint32_t const cps[1] = { 0x1457f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5613), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_101)
{
    // 14580 ; [.5614.0020.0002] 
    // ANATOLIAN HIEROGLYPH A339

    uint32_t const cps[1] = { 0x14580 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5614), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_102)
{
    // 14581 ; [.5615.0020.0002] 
    // ANATOLIAN HIEROGLYPH A340

    uint32_t const cps[1] = { 0x14581 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5615), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_103)
{
    // 14582 ; [.5616.0020.0002] 
    // ANATOLIAN HIEROGLYPH A341

    uint32_t const cps[1] = { 0x14582 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5616), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_104)
{
    // 14583 ; [.5617.0020.0002] 
    // ANATOLIAN HIEROGLYPH A342

    uint32_t const cps[1] = { 0x14583 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5617), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_105)
{
    // 14584 ; [.5618.0020.0002] 
    // ANATOLIAN HIEROGLYPH A343

    uint32_t const cps[1] = { 0x14584 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5618), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_106)
{
    // 14585 ; [.5619.0020.0002] 
    // ANATOLIAN HIEROGLYPH A344

    uint32_t const cps[1] = { 0x14585 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5619), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_107)
{
    // 14586 ; [.561A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A345

    uint32_t const cps[1] = { 0x14586 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x561a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_108)
{
    // 14587 ; [.561B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A346

    uint32_t const cps[1] = { 0x14587 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x561b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_109)
{
    // 14588 ; [.561C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A347

    uint32_t const cps[1] = { 0x14588 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x561c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_110)
{
    // 14589 ; [.561D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A348

    uint32_t const cps[1] = { 0x14589 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x561d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_111)
{
    // 1458A ; [.561E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A349

    uint32_t const cps[1] = { 0x1458a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x561e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_112)
{
    // 1458B ; [.561F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A350

    uint32_t const cps[1] = { 0x1458b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x561f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_113)
{
    // 1458C ; [.5620.0020.0002] 
    // ANATOLIAN HIEROGLYPH A351

    uint32_t const cps[1] = { 0x1458c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5620), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_114)
{
    // 1458D ; [.5621.0020.0002] 
    // ANATOLIAN HIEROGLYPH A352

    uint32_t const cps[1] = { 0x1458d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5621), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_115)
{
    // 1458E ; [.5622.0020.0002] 
    // ANATOLIAN HIEROGLYPH A353

    uint32_t const cps[1] = { 0x1458e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5622), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_116)
{
    // 1458F ; [.5623.0020.0002] 
    // ANATOLIAN HIEROGLYPH A354

    uint32_t const cps[1] = { 0x1458f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5623), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_117)
{
    // 14590 ; [.5624.0020.0002] 
    // ANATOLIAN HIEROGLYPH A355

    uint32_t const cps[1] = { 0x14590 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5624), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_118)
{
    // 14591 ; [.5625.0020.0002] 
    // ANATOLIAN HIEROGLYPH A356

    uint32_t const cps[1] = { 0x14591 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5625), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_119)
{
    // 14592 ; [.5626.0020.0002] 
    // ANATOLIAN HIEROGLYPH A357

    uint32_t const cps[1] = { 0x14592 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5626), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_120)
{
    // 14593 ; [.5627.0020.0002] 
    // ANATOLIAN HIEROGLYPH A358

    uint32_t const cps[1] = { 0x14593 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5627), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_121)
{
    // 14594 ; [.5628.0020.0002] 
    // ANATOLIAN HIEROGLYPH A359

    uint32_t const cps[1] = { 0x14594 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5628), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_122)
{
    // 14595 ; [.5629.0020.0002] 
    // ANATOLIAN HIEROGLYPH A359A

    uint32_t const cps[1] = { 0x14595 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5629), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_123)
{
    // 14596 ; [.562A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A360

    uint32_t const cps[1] = { 0x14596 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x562a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_124)
{
    // 14597 ; [.562B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A361

    uint32_t const cps[1] = { 0x14597 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x562b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_125)
{
    // 14598 ; [.562C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A362

    uint32_t const cps[1] = { 0x14598 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x562c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_126)
{
    // 14599 ; [.562D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A363

    uint32_t const cps[1] = { 0x14599 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x562d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_127)
{
    // 1459A ; [.562E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A364

    uint32_t const cps[1] = { 0x1459a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x562e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_128)
{
    // 1459B ; [.562F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A364A

    uint32_t const cps[1] = { 0x1459b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x562f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_129)
{
    // 1459C ; [.5630.0020.0002] 
    // ANATOLIAN HIEROGLYPH A365

    uint32_t const cps[1] = { 0x1459c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5630), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_130)
{
    // 1459D ; [.5631.0020.0002] 
    // ANATOLIAN HIEROGLYPH A366

    uint32_t const cps[1] = { 0x1459d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5631), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_131)
{
    // 1459E ; [.5632.0020.0002] 
    // ANATOLIAN HIEROGLYPH A367

    uint32_t const cps[1] = { 0x1459e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5632), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_132)
{
    // 1459F ; [.5633.0020.0002] 
    // ANATOLIAN HIEROGLYPH A368

    uint32_t const cps[1] = { 0x1459f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5633), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_133)
{
    // 145A0 ; [.5634.0020.0002] 
    // ANATOLIAN HIEROGLYPH A368A

    uint32_t const cps[1] = { 0x145a0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5634), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_134)
{
    // 145A1 ; [.5635.0020.0002] 
    // ANATOLIAN HIEROGLYPH A369

    uint32_t const cps[1] = { 0x145a1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5635), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_135)
{
    // 145A2 ; [.5636.0020.0002] 
    // ANATOLIAN HIEROGLYPH A370

    uint32_t const cps[1] = { 0x145a2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5636), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_136)
{
    // 145A3 ; [.5637.0020.0002] 
    // ANATOLIAN HIEROGLYPH A371

    uint32_t const cps[1] = { 0x145a3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5637), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_137)
{
    // 145A4 ; [.5638.0020.0002] 
    // ANATOLIAN HIEROGLYPH A371A

    uint32_t const cps[1] = { 0x145a4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5638), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_138)
{
    // 145A5 ; [.5639.0020.0002] 
    // ANATOLIAN HIEROGLYPH A372

    uint32_t const cps[1] = { 0x145a5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5639), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_139)
{
    // 145A6 ; [.563A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A373

    uint32_t const cps[1] = { 0x145a6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x563a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_140)
{
    // 145A7 ; [.563B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A374

    uint32_t const cps[1] = { 0x145a7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x563b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_141)
{
    // 145A8 ; [.563C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A375

    uint32_t const cps[1] = { 0x145a8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x563c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_142)
{
    // 145A9 ; [.563D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A376

    uint32_t const cps[1] = { 0x145a9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x563d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_143)
{
    // 145AA ; [.563E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A377

    uint32_t const cps[1] = { 0x145aa };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x563e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_144)
{
    // 145AB ; [.563F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A378

    uint32_t const cps[1] = { 0x145ab };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x563f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_145)
{
    // 145AC ; [.5640.0020.0002] 
    // ANATOLIAN HIEROGLYPH A379

    uint32_t const cps[1] = { 0x145ac };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5640), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_146)
{
    // 145AD ; [.5641.0020.0002] 
    // ANATOLIAN HIEROGLYPH A380

    uint32_t const cps[1] = { 0x145ad };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5641), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_147)
{
    // 145AE ; [.5642.0020.0002] 
    // ANATOLIAN HIEROGLYPH A381

    uint32_t const cps[1] = { 0x145ae };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5642), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_148)
{
    // 145AF ; [.5643.0020.0002] 
    // ANATOLIAN HIEROGLYPH A381A

    uint32_t const cps[1] = { 0x145af };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5643), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_160_149)
{
    // 145B0 ; [.5644.0020.0002] 
    // ANATOLIAN HIEROGLYPH A382

    uint32_t const cps[1] = { 0x145b0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5644), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

