// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_021_000)
{
    // 0E0C  ; [.2E2B.0020.0002] 
    // THAI CHARACTER CHO CHOE

    uint32_t const cps[1] = { 0xe0c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e2b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_001)
{
    // 0E0D  ; [.2E2C.0020.0002] 
    // THAI CHARACTER YO YING

    uint32_t const cps[1] = { 0xe0d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e2c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_002)
{
    // 0E0E  ; [.2E2D.0020.0002] 
    // THAI CHARACTER DO CHADA

    uint32_t const cps[1] = { 0xe0e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e2d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_003)
{
    // 0E0F  ; [.2E2E.0020.0002] 
    // THAI CHARACTER TO PATAK

    uint32_t const cps[1] = { 0xe0f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e2e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_004)
{
    // 0E10  ; [.2E2F.0020.0002] 
    // THAI CHARACTER THO THAN

    uint32_t const cps[1] = { 0xe10 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e2f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_005)
{
    // 0E11  ; [.2E30.0020.0002] 
    // THAI CHARACTER THO NANGMONTHO

    uint32_t const cps[1] = { 0xe11 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e30), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_006)
{
    // 0E12  ; [.2E31.0020.0002] 
    // THAI CHARACTER THO PHUTHAO

    uint32_t const cps[1] = { 0xe12 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e31), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_007)
{
    // 0E13  ; [.2E32.0020.0002] 
    // THAI CHARACTER NO NEN

    uint32_t const cps[1] = { 0xe13 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e32), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_008)
{
    // 0E14  ; [.2E33.0020.0002] 
    // THAI CHARACTER DO DEK

    uint32_t const cps[1] = { 0xe14 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e33), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_009)
{
    // 0E15  ; [.2E34.0020.0002] 
    // THAI CHARACTER TO TAO

    uint32_t const cps[1] = { 0xe15 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e34), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_010)
{
    // 0E16  ; [.2E35.0020.0002] 
    // THAI CHARACTER THO THUNG

    uint32_t const cps[1] = { 0xe16 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e35), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_011)
{
    // 0E17  ; [.2E36.0020.0002] 
    // THAI CHARACTER THO THAHAN

    uint32_t const cps[1] = { 0xe17 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e36), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_012)
{
    // 0E18  ; [.2E37.0020.0002] 
    // THAI CHARACTER THO THONG

    uint32_t const cps[1] = { 0xe18 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e37), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_013)
{
    // 0E19  ; [.2E38.0020.0002] 
    // THAI CHARACTER NO NU

    uint32_t const cps[1] = { 0xe19 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e38), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_014)
{
    // 0E1A  ; [.2E39.0020.0002] 
    // THAI CHARACTER BO BAIMAI

    uint32_t const cps[1] = { 0xe1a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e39), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_015)
{
    // 0E1B  ; [.2E3A.0020.0002] 
    // THAI CHARACTER PO PLA

    uint32_t const cps[1] = { 0xe1b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e3a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_016)
{
    // 0E1C  ; [.2E3B.0020.0002] 
    // THAI CHARACTER PHO PHUNG

    uint32_t const cps[1] = { 0xe1c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e3b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_017)
{
    // 0E1D  ; [.2E3C.0020.0002] 
    // THAI CHARACTER FO FA

    uint32_t const cps[1] = { 0xe1d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e3c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_018)
{
    // 0E1E  ; [.2E3D.0020.0002] 
    // THAI CHARACTER PHO PHAN

    uint32_t const cps[1] = { 0xe1e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e3d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_019)
{
    // 0E1F  ; [.2E3E.0020.0002] 
    // THAI CHARACTER FO FAN

    uint32_t const cps[1] = { 0xe1f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e3e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_020)
{
    // 0E20  ; [.2E3F.0020.0002] 
    // THAI CHARACTER PHO SAMPHAO

    uint32_t const cps[1] = { 0xe20 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e3f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_021)
{
    // 0E21  ; [.2E40.0020.0002] 
    // THAI CHARACTER MO MA

    uint32_t const cps[1] = { 0xe21 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e40), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_022)
{
    // 0E22  ; [.2E41.0020.0002] 
    // THAI CHARACTER YO YAK

    uint32_t const cps[1] = { 0xe22 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e41), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_023)
{
    // 0E23  ; [.2E42.0020.0002] 
    // THAI CHARACTER RO RUA

    uint32_t const cps[1] = { 0xe23 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e42), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_024)
{
    // 0E24  ; [.2E43.0020.0002] 
    // THAI CHARACTER RU

    uint32_t const cps[1] = { 0xe24 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e43), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_025)
{
    // 0E25  ; [.2E44.0020.0002] 
    // THAI CHARACTER LO LING

    uint32_t const cps[1] = { 0xe25 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e44), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_026)
{
    // 0E26  ; [.2E45.0020.0002] 
    // THAI CHARACTER LU

    uint32_t const cps[1] = { 0xe26 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e45), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_027)
{
    // 0E27  ; [.2E46.0020.0002] 
    // THAI CHARACTER WO WAEN

    uint32_t const cps[1] = { 0xe27 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e46), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_028)
{
    // 0E28  ; [.2E47.0020.0002] 
    // THAI CHARACTER SO SALA

    uint32_t const cps[1] = { 0xe28 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e47), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_029)
{
    // 0E29  ; [.2E48.0020.0002] 
    // THAI CHARACTER SO RUSI

    uint32_t const cps[1] = { 0xe29 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e48), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_030)
{
    // 0E2A  ; [.2E49.0020.0002] 
    // THAI CHARACTER SO SUA

    uint32_t const cps[1] = { 0xe2a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e49), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_031)
{
    // 0E2B  ; [.2E4A.0020.0002] 
    // THAI CHARACTER HO HIP

    uint32_t const cps[1] = { 0xe2b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e4a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_032)
{
    // 0E2C  ; [.2E4B.0020.0002] 
    // THAI CHARACTER LO CHULA

    uint32_t const cps[1] = { 0xe2c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e4b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_033)
{
    // 0E2D  ; [.2E4C.0020.0002] 
    // THAI CHARACTER O ANG

    uint32_t const cps[1] = { 0xe2d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e4c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_034)
{
    // 0E2E  ; [.2E4D.0020.0002] 
    // THAI CHARACTER HO NOKHUK

    uint32_t const cps[1] = { 0xe2e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e4d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_035)
{
    // 0E2F  ; [.2E4E.0020.0002] 
    // THAI CHARACTER PAIYANNOI

    uint32_t const cps[1] = { 0xe2f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e4e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_036)
{
    // 0E30  ; [.2E4F.0020.0002] 
    // THAI CHARACTER SARA A

    uint32_t const cps[1] = { 0xe30 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e4f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_037)
{
    // 0E31  ; [.2E50.0020.0002] 
    // THAI CHARACTER MAI HAN-AKAT

    uint32_t const cps[1] = { 0xe31 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e50), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_038)
{
    // 0E32  ; [.2E51.0020.0002] 
    // THAI CHARACTER SARA AA

    uint32_t const cps[1] = { 0xe32 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e51), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_039)
{
    // 0E33  ; [.2E52.0020.0002] 
    // THAI CHARACTER SARA AM

    uint32_t const cps[1] = { 0xe33 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e52), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_040)
{
    // 0E34  ; [.2E53.0020.0002] 
    // THAI CHARACTER SARA I

    uint32_t const cps[1] = { 0xe34 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e53), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_041)
{
    // 0E35  ; [.2E54.0020.0002] 
    // THAI CHARACTER SARA II

    uint32_t const cps[1] = { 0xe35 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e54), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_042)
{
    // 0E36  ; [.2E55.0020.0002] 
    // THAI CHARACTER SARA UE

    uint32_t const cps[1] = { 0xe36 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e55), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_043)
{
    // 0E37  ; [.2E56.0020.0002] 
    // THAI CHARACTER SARA UEE

    uint32_t const cps[1] = { 0xe37 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e56), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_044)
{
    // 0E38  ; [.2E57.0020.0002] 
    // THAI CHARACTER SARA U

    uint32_t const cps[1] = { 0xe38 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e57), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_045)
{
    // 0E39  ; [.2E58.0020.0002] 
    // THAI CHARACTER SARA UU

    uint32_t const cps[1] = { 0xe39 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e58), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_046)
{
    // 0E3A  ; [.2E59.0020.0002] 
    // THAI CHARACTER PHINTHU

    uint32_t const cps[1] = { 0xe3a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e59), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_047)
{
    // 0E3F  ; [.1C82.0020.0002] 
    // THAI CURRENCY SYMBOL BAHT

    uint32_t const cps[1] = { 0xe3f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c82), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_048)
{
    // 0E40  ; [.2E5A.0020.0002] 
    // THAI CHARACTER SARA E

    uint32_t const cps[1] = { 0xe40 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_049)
{
    // 0E40 0E01 ; [.2E20.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER KO KAI>

    uint32_t const cps[2] = { 0xe40, 0xe01 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e20), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_050)
{
    // 0E40 0E02 ; [.2E21.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER KHO KHAI>

    uint32_t const cps[2] = { 0xe40, 0xe02 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e21), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_051)
{
    // 0E40 0E03 ; [.2E22.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER KHO KHUAT>

    uint32_t const cps[2] = { 0xe40, 0xe03 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e22), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_052)
{
    // 0E40 0E04 ; [.2E23.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER KHO KHWAI>

    uint32_t const cps[2] = { 0xe40, 0xe04 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e23), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_053)
{
    // 0E40 0E05 ; [.2E24.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER KHO KHON>

    uint32_t const cps[2] = { 0xe40, 0xe05 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e24), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_054)
{
    // 0E40 0E06 ; [.2E25.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER KHO RAKHANG>

    uint32_t const cps[2] = { 0xe40, 0xe06 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e25), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_055)
{
    // 0E40 0E07 ; [.2E26.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER NGO NGU>

    uint32_t const cps[2] = { 0xe40, 0xe07 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e26), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_056)
{
    // 0E40 0E08 ; [.2E27.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER CHO CHAN>

    uint32_t const cps[2] = { 0xe40, 0xe08 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e27), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_057)
{
    // 0E40 0E09 ; [.2E28.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER CHO CHING>

    uint32_t const cps[2] = { 0xe40, 0xe09 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e28), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_058)
{
    // 0E40 0E0A ; [.2E29.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER CHO CHANG>

    uint32_t const cps[2] = { 0xe40, 0xe0a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e29), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_059)
{
    // 0E40 0E0B ; [.2E2A.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER SO SO>

    uint32_t const cps[2] = { 0xe40, 0xe0b };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2a), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_060)
{
    // 0E40 0E0C ; [.2E2B.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER CHO CHOE>

    uint32_t const cps[2] = { 0xe40, 0xe0c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2b), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_061)
{
    // 0E40 0E0D ; [.2E2C.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER YO YING>

    uint32_t const cps[2] = { 0xe40, 0xe0d };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2c), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_062)
{
    // 0E40 0E0E ; [.2E2D.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER DO CHADA>

    uint32_t const cps[2] = { 0xe40, 0xe0e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2d), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_063)
{
    // 0E40 0E0F ; [.2E2E.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER TO PATAK>

    uint32_t const cps[2] = { 0xe40, 0xe0f };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2e), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_064)
{
    // 0E40 0E10 ; [.2E2F.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER THO THAN>

    uint32_t const cps[2] = { 0xe40, 0xe10 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2f), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_065)
{
    // 0E40 0E11 ; [.2E30.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER THO NANGMONTHO>

    uint32_t const cps[2] = { 0xe40, 0xe11 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e30), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_066)
{
    // 0E40 0E12 ; [.2E31.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER THO PHUTHAO>

    uint32_t const cps[2] = { 0xe40, 0xe12 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e31), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_067)
{
    // 0E40 0E13 ; [.2E32.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER NO NEN>

    uint32_t const cps[2] = { 0xe40, 0xe13 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e32), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_068)
{
    // 0E40 0E14 ; [.2E33.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER DO DEK>

    uint32_t const cps[2] = { 0xe40, 0xe14 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e33), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_069)
{
    // 0E40 0E15 ; [.2E34.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER TO TAO>

    uint32_t const cps[2] = { 0xe40, 0xe15 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e34), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_070)
{
    // 0E40 0E16 ; [.2E35.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER THO THUNG>

    uint32_t const cps[2] = { 0xe40, 0xe16 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e35), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_071)
{
    // 0E40 0E17 ; [.2E36.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER THO THAHAN>

    uint32_t const cps[2] = { 0xe40, 0xe17 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e36), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_072)
{
    // 0E40 0E18 ; [.2E37.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER THO THONG>

    uint32_t const cps[2] = { 0xe40, 0xe18 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e37), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_073)
{
    // 0E40 0E19 ; [.2E38.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER NO NU>

    uint32_t const cps[2] = { 0xe40, 0xe19 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e38), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_074)
{
    // 0E40 0E1A ; [.2E39.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER BO BAIMAI>

    uint32_t const cps[2] = { 0xe40, 0xe1a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e39), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_075)
{
    // 0E40 0E1B ; [.2E3A.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER PO PLA>

    uint32_t const cps[2] = { 0xe40, 0xe1b };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3a), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_076)
{
    // 0E40 0E1C ; [.2E3B.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER PHO PHUNG>

    uint32_t const cps[2] = { 0xe40, 0xe1c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3b), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_077)
{
    // 0E40 0E1D ; [.2E3C.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER FO FA>

    uint32_t const cps[2] = { 0xe40, 0xe1d };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3c), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_078)
{
    // 0E40 0E1E ; [.2E3D.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER PHO PHAN>

    uint32_t const cps[2] = { 0xe40, 0xe1e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3d), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_079)
{
    // 0E40 0E1F ; [.2E3E.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER FO FAN>

    uint32_t const cps[2] = { 0xe40, 0xe1f };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3e), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_080)
{
    // 0E40 0E20 ; [.2E3F.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER PHO SAMPHAO>

    uint32_t const cps[2] = { 0xe40, 0xe20 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3f), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_081)
{
    // 0E40 0E21 ; [.2E40.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER MO MA>

    uint32_t const cps[2] = { 0xe40, 0xe21 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_082)
{
    // 0E40 0E22 ; [.2E41.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER YO YAK>

    uint32_t const cps[2] = { 0xe40, 0xe22 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e41), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_083)
{
    // 0E40 0E23 ; [.2E42.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER RO RUA>

    uint32_t const cps[2] = { 0xe40, 0xe23 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e42), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_084)
{
    // 0E40 0E24 ; [.2E43.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER RU>

    uint32_t const cps[2] = { 0xe40, 0xe24 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e43), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_085)
{
    // 0E40 0E25 ; [.2E44.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER LO LING>

    uint32_t const cps[2] = { 0xe40, 0xe25 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e44), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_086)
{
    // 0E40 0E26 ; [.2E45.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER LU>

    uint32_t const cps[2] = { 0xe40, 0xe26 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e45), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_087)
{
    // 0E40 0E27 ; [.2E46.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER WO WAEN>

    uint32_t const cps[2] = { 0xe40, 0xe27 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e46), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_088)
{
    // 0E40 0E28 ; [.2E47.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER SO SALA>

    uint32_t const cps[2] = { 0xe40, 0xe28 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e47), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_089)
{
    // 0E40 0E29 ; [.2E48.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER SO RUSI>

    uint32_t const cps[2] = { 0xe40, 0xe29 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e48), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_090)
{
    // 0E40 0E2A ; [.2E49.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER SO SUA>

    uint32_t const cps[2] = { 0xe40, 0xe2a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e49), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_091)
{
    // 0E40 0E2B ; [.2E4A.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER HO HIP>

    uint32_t const cps[2] = { 0xe40, 0xe2b };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4a), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_092)
{
    // 0E40 0E2C ; [.2E4B.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER LO CHULA>

    uint32_t const cps[2] = { 0xe40, 0xe2c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4b), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_093)
{
    // 0E40 0E2D ; [.2E4C.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER O ANG>

    uint32_t const cps[2] = { 0xe40, 0xe2d };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4c), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_094)
{
    // 0E40 0E2E ; [.2E4D.0020.0002][.2E5A.0020.0002] 
    // <THAI CHARACTER SARA E, THAI CHARACTER HO NOKHUK>

    uint32_t const cps[2] = { 0xe40, 0xe2e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4d), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_095)
{
    // 0E41  ; [.2E5B.0020.0002] 
    // THAI CHARACTER SARA AE

    uint32_t const cps[1] = { 0xe41 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_096)
{
    // 0E41 0E01 ; [.2E20.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER KO KAI>

    uint32_t const cps[2] = { 0xe41, 0xe01 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e20), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_097)
{
    // 0E41 0E02 ; [.2E21.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER KHO KHAI>

    uint32_t const cps[2] = { 0xe41, 0xe02 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e21), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_098)
{
    // 0E41 0E03 ; [.2E22.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER KHO KHUAT>

    uint32_t const cps[2] = { 0xe41, 0xe03 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e22), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_099)
{
    // 0E41 0E04 ; [.2E23.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER KHO KHWAI>

    uint32_t const cps[2] = { 0xe41, 0xe04 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e23), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_100)
{
    // 0E41 0E05 ; [.2E24.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER KHO KHON>

    uint32_t const cps[2] = { 0xe41, 0xe05 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e24), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_101)
{
    // 0E41 0E06 ; [.2E25.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER KHO RAKHANG>

    uint32_t const cps[2] = { 0xe41, 0xe06 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e25), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_102)
{
    // 0E41 0E07 ; [.2E26.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER NGO NGU>

    uint32_t const cps[2] = { 0xe41, 0xe07 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e26), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_103)
{
    // 0E41 0E08 ; [.2E27.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER CHO CHAN>

    uint32_t const cps[2] = { 0xe41, 0xe08 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e27), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_104)
{
    // 0E41 0E09 ; [.2E28.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER CHO CHING>

    uint32_t const cps[2] = { 0xe41, 0xe09 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e28), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_105)
{
    // 0E41 0E0A ; [.2E29.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER CHO CHANG>

    uint32_t const cps[2] = { 0xe41, 0xe0a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e29), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_106)
{
    // 0E41 0E0B ; [.2E2A.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER SO SO>

    uint32_t const cps[2] = { 0xe41, 0xe0b };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2a), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_107)
{
    // 0E41 0E0C ; [.2E2B.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER CHO CHOE>

    uint32_t const cps[2] = { 0xe41, 0xe0c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2b), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_108)
{
    // 0E41 0E0D ; [.2E2C.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER YO YING>

    uint32_t const cps[2] = { 0xe41, 0xe0d };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2c), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_109)
{
    // 0E41 0E0E ; [.2E2D.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER DO CHADA>

    uint32_t const cps[2] = { 0xe41, 0xe0e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2d), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_110)
{
    // 0E41 0E0F ; [.2E2E.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER TO PATAK>

    uint32_t const cps[2] = { 0xe41, 0xe0f };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2e), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_111)
{
    // 0E41 0E10 ; [.2E2F.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER THO THAN>

    uint32_t const cps[2] = { 0xe41, 0xe10 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e2f), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_112)
{
    // 0E41 0E11 ; [.2E30.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER THO NANGMONTHO>

    uint32_t const cps[2] = { 0xe41, 0xe11 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e30), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_113)
{
    // 0E41 0E12 ; [.2E31.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER THO PHUTHAO>

    uint32_t const cps[2] = { 0xe41, 0xe12 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e31), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_114)
{
    // 0E41 0E13 ; [.2E32.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER NO NEN>

    uint32_t const cps[2] = { 0xe41, 0xe13 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e32), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_115)
{
    // 0E41 0E14 ; [.2E33.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER DO DEK>

    uint32_t const cps[2] = { 0xe41, 0xe14 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e33), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_116)
{
    // 0E41 0E15 ; [.2E34.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER TO TAO>

    uint32_t const cps[2] = { 0xe41, 0xe15 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e34), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_117)
{
    // 0E41 0E16 ; [.2E35.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER THO THUNG>

    uint32_t const cps[2] = { 0xe41, 0xe16 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e35), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_118)
{
    // 0E41 0E17 ; [.2E36.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER THO THAHAN>

    uint32_t const cps[2] = { 0xe41, 0xe17 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e36), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_119)
{
    // 0E41 0E18 ; [.2E37.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER THO THONG>

    uint32_t const cps[2] = { 0xe41, 0xe18 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e37), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_120)
{
    // 0E41 0E19 ; [.2E38.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER NO NU>

    uint32_t const cps[2] = { 0xe41, 0xe19 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e38), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_121)
{
    // 0E41 0E1A ; [.2E39.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER BO BAIMAI>

    uint32_t const cps[2] = { 0xe41, 0xe1a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e39), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_122)
{
    // 0E41 0E1B ; [.2E3A.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER PO PLA>

    uint32_t const cps[2] = { 0xe41, 0xe1b };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3a), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_123)
{
    // 0E41 0E1C ; [.2E3B.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER PHO PHUNG>

    uint32_t const cps[2] = { 0xe41, 0xe1c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3b), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_124)
{
    // 0E41 0E1D ; [.2E3C.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER FO FA>

    uint32_t const cps[2] = { 0xe41, 0xe1d };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3c), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_125)
{
    // 0E41 0E1E ; [.2E3D.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER PHO PHAN>

    uint32_t const cps[2] = { 0xe41, 0xe1e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3d), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_126)
{
    // 0E41 0E1F ; [.2E3E.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER FO FAN>

    uint32_t const cps[2] = { 0xe41, 0xe1f };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3e), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_127)
{
    // 0E41 0E20 ; [.2E3F.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER PHO SAMPHAO>

    uint32_t const cps[2] = { 0xe41, 0xe20 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e3f), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_128)
{
    // 0E41 0E21 ; [.2E40.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER MO MA>

    uint32_t const cps[2] = { 0xe41, 0xe21 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e40), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_129)
{
    // 0E41 0E22 ; [.2E41.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER YO YAK>

    uint32_t const cps[2] = { 0xe41, 0xe22 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e41), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_130)
{
    // 0E41 0E23 ; [.2E42.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER RO RUA>

    uint32_t const cps[2] = { 0xe41, 0xe23 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e42), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_131)
{
    // 0E41 0E24 ; [.2E43.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER RU>

    uint32_t const cps[2] = { 0xe41, 0xe24 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e43), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_132)
{
    // 0E41 0E25 ; [.2E44.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER LO LING>

    uint32_t const cps[2] = { 0xe41, 0xe25 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e44), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_133)
{
    // 0E41 0E26 ; [.2E45.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER LU>

    uint32_t const cps[2] = { 0xe41, 0xe26 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e45), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_134)
{
    // 0E41 0E27 ; [.2E46.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER WO WAEN>

    uint32_t const cps[2] = { 0xe41, 0xe27 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e46), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_135)
{
    // 0E41 0E28 ; [.2E47.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER SO SALA>

    uint32_t const cps[2] = { 0xe41, 0xe28 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e47), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_136)
{
    // 0E41 0E29 ; [.2E48.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER SO RUSI>

    uint32_t const cps[2] = { 0xe41, 0xe29 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e48), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_137)
{
    // 0E41 0E2A ; [.2E49.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER SO SUA>

    uint32_t const cps[2] = { 0xe41, 0xe2a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e49), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_138)
{
    // 0E41 0E2B ; [.2E4A.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER HO HIP>

    uint32_t const cps[2] = { 0xe41, 0xe2b };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4a), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_139)
{
    // 0E41 0E2C ; [.2E4B.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER LO CHULA>

    uint32_t const cps[2] = { 0xe41, 0xe2c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4b), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_140)
{
    // 0E41 0E2D ; [.2E4C.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER O ANG>

    uint32_t const cps[2] = { 0xe41, 0xe2d };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4c), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_141)
{
    // 0E41 0E2E ; [.2E4D.0020.0002][.2E5B.0020.0002] 
    // <THAI CHARACTER SARA AE, THAI CHARACTER HO NOKHUK>

    uint32_t const cps[2] = { 0xe41, 0xe2e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e4d), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_142)
{
    // 0E42  ; [.2E5C.0020.0002] 
    // THAI CHARACTER SARA O

    uint32_t const cps[1] = { 0xe42 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_021_143)
{
    // 0E42 0E01 ; [.2E20.0020.0002][.2E5C.0020.0002] 
    // <THAI CHARACTER SARA O, THAI CHARACTER KO KAI>

    uint32_t const cps[2] = { 0xe42, 0xe01 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e20), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_144)
{
    // 0E42 0E02 ; [.2E21.0020.0002][.2E5C.0020.0002] 
    // <THAI CHARACTER SARA O, THAI CHARACTER KHO KHAI>

    uint32_t const cps[2] = { 0xe42, 0xe02 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e21), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_145)
{
    // 0E42 0E03 ; [.2E22.0020.0002][.2E5C.0020.0002] 
    // <THAI CHARACTER SARA O, THAI CHARACTER KHO KHUAT>

    uint32_t const cps[2] = { 0xe42, 0xe03 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e22), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_146)
{
    // 0E42 0E04 ; [.2E23.0020.0002][.2E5C.0020.0002] 
    // <THAI CHARACTER SARA O, THAI CHARACTER KHO KHWAI>

    uint32_t const cps[2] = { 0xe42, 0xe04 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e23), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_147)
{
    // 0E42 0E05 ; [.2E24.0020.0002][.2E5C.0020.0002] 
    // <THAI CHARACTER SARA O, THAI CHARACTER KHO KHON>

    uint32_t const cps[2] = { 0xe42, 0xe05 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e24), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_148)
{
    // 0E42 0E06 ; [.2E25.0020.0002][.2E5C.0020.0002] 
    // <THAI CHARACTER SARA O, THAI CHARACTER KHO RAKHANG>

    uint32_t const cps[2] = { 0xe42, 0xe06 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e25), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_021_149)
{
    // 0E42 0E07 ; [.2E26.0020.0002][.2E5C.0020.0002] 
    // <THAI CHARACTER SARA O, THAI CHARACTER NGO NGU>

    uint32_t const cps[2] = { 0xe42, 0xe07 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2e26), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x2e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 2);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 2);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

