// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_078_000)
{
    // 3059  ; [.3E7E.0020.000E] 
    // HIRAGANA LETTER SU

    uint32_t const cps[1] = { 0x3059 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7e), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_001)
{
    // 305A  ; [.3E7E.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER ZU

    uint32_t const cps[1] = { 0x305a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7e), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_002)
{
    // 305B  ; [.3E7F.0020.000E] 
    // HIRAGANA LETTER SE

    uint32_t const cps[1] = { 0x305b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7f), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_003)
{
    // 305C  ; [.3E7F.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER ZE

    uint32_t const cps[1] = { 0x305c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7f), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_004)
{
    // 305D  ; [.3E80.0020.000E] 
    // HIRAGANA LETTER SO

    uint32_t const cps[1] = { 0x305d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e80), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_005)
{
    // 305E  ; [.3E80.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER ZO

    uint32_t const cps[1] = { 0x305e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e80), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_006)
{
    // 305F  ; [.3E81.0020.000E] 
    // HIRAGANA LETTER TA

    uint32_t const cps[1] = { 0x305f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e81), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_007)
{
    // 3060  ; [.3E81.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER DA

    uint32_t const cps[1] = { 0x3060 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e81), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_008)
{
    // 3061  ; [.3E82.0020.000E] 
    // HIRAGANA LETTER TI

    uint32_t const cps[1] = { 0x3061 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e82), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_009)
{
    // 3062  ; [.3E82.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER DI

    uint32_t const cps[1] = { 0x3062 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e82), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_010)
{
    // 3063  ; [.3E83.0020.000D] 
    // HIRAGANA LETTER SMALL TU

    uint32_t const cps[1] = { 0x3063 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e83), uint8_t(0x0), uint8_t(0xd)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_011)
{
    // 3064  ; [.3E83.0020.000E] 
    // HIRAGANA LETTER TU

    uint32_t const cps[1] = { 0x3064 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e83), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_012)
{
    // 3065  ; [.3E83.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER DU

    uint32_t const cps[1] = { 0x3065 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e83), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_013)
{
    // 3066  ; [.3E84.0020.000E] 
    // HIRAGANA LETTER TE

    uint32_t const cps[1] = { 0x3066 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e84), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_014)
{
    // 3067  ; [.3E84.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER DE

    uint32_t const cps[1] = { 0x3067 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e84), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_015)
{
    // 3068  ; [.3E85.0020.000E] 
    // HIRAGANA LETTER TO

    uint32_t const cps[1] = { 0x3068 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e85), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_016)
{
    // 3069  ; [.3E85.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER DO

    uint32_t const cps[1] = { 0x3069 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e85), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_017)
{
    // 306A  ; [.3E86.0020.000E] 
    // HIRAGANA LETTER NA

    uint32_t const cps[1] = { 0x306a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e86), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_018)
{
    // 306B  ; [.3E87.0020.000E] 
    // HIRAGANA LETTER NI

    uint32_t const cps[1] = { 0x306b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e87), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_019)
{
    // 306C  ; [.3E88.0020.000E] 
    // HIRAGANA LETTER NU

    uint32_t const cps[1] = { 0x306c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e88), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_020)
{
    // 306D  ; [.3E89.0020.000E] 
    // HIRAGANA LETTER NE

    uint32_t const cps[1] = { 0x306d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e89), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_021)
{
    // 306E  ; [.3E8A.0020.000E] 
    // HIRAGANA LETTER NO

    uint32_t const cps[1] = { 0x306e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8a), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_022)
{
    // 306F  ; [.3E8B.0020.000E] 
    // HIRAGANA LETTER HA

    uint32_t const cps[1] = { 0x306f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8b), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_023)
{
    // 3070  ; [.3E8B.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER BA

    uint32_t const cps[1] = { 0x3070 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8b), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_024)
{
    // 3071  ; [.3E8B.0020.000E][.0000.0038.0002] 
    // HIRAGANA LETTER PA

    uint32_t const cps[1] = { 0x3071 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8b), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_025)
{
    // 3072  ; [.3E8C.0020.000E] 
    // HIRAGANA LETTER HI

    uint32_t const cps[1] = { 0x3072 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8c), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_026)
{
    // 3073  ; [.3E8C.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER BI

    uint32_t const cps[1] = { 0x3073 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8c), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_027)
{
    // 3074  ; [.3E8C.0020.000E][.0000.0038.0002] 
    // HIRAGANA LETTER PI

    uint32_t const cps[1] = { 0x3074 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8c), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_028)
{
    // 3075  ; [.3E8D.0020.000E] 
    // HIRAGANA LETTER HU

    uint32_t const cps[1] = { 0x3075 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8d), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_029)
{
    // 3076  ; [.3E8D.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER BU

    uint32_t const cps[1] = { 0x3076 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8d), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_030)
{
    // 3077  ; [.3E8D.0020.000E][.0000.0038.0002] 
    // HIRAGANA LETTER PU

    uint32_t const cps[1] = { 0x3077 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8d), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_031)
{
    // 3078  ; [.3E8E.0020.000E] 
    // HIRAGANA LETTER HE

    uint32_t const cps[1] = { 0x3078 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8e), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_032)
{
    // 3079  ; [.3E8E.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER BE

    uint32_t const cps[1] = { 0x3079 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8e), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_033)
{
    // 307A  ; [.3E8E.0020.000E][.0000.0038.0002] 
    // HIRAGANA LETTER PE

    uint32_t const cps[1] = { 0x307a };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8e), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_034)
{
    // 307B  ; [.3E8F.0020.000E] 
    // HIRAGANA LETTER HO

    uint32_t const cps[1] = { 0x307b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8f), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_035)
{
    // 307C  ; [.3E8F.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER BO

    uint32_t const cps[1] = { 0x307c };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8f), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_036)
{
    // 307D  ; [.3E8F.0020.000E][.0000.0038.0002] 
    // HIRAGANA LETTER PO

    uint32_t const cps[1] = { 0x307d };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8f), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_037)
{
    // 307E  ; [.3E90.0020.000E] 
    // HIRAGANA LETTER MA

    uint32_t const cps[1] = { 0x307e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e90), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_038)
{
    // 307F  ; [.3E91.0020.000E] 
    // HIRAGANA LETTER MI

    uint32_t const cps[1] = { 0x307f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e91), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_039)
{
    // 3080  ; [.3E92.0020.000E] 
    // HIRAGANA LETTER MU

    uint32_t const cps[1] = { 0x3080 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e92), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_040)
{
    // 3081  ; [.3E93.0020.000E] 
    // HIRAGANA LETTER ME

    uint32_t const cps[1] = { 0x3081 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e93), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_041)
{
    // 3082  ; [.3E94.0020.000E] 
    // HIRAGANA LETTER MO

    uint32_t const cps[1] = { 0x3082 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e94), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_042)
{
    // 3083  ; [.3E95.0020.000D] 
    // HIRAGANA LETTER SMALL YA

    uint32_t const cps[1] = { 0x3083 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e95), uint8_t(0x0), uint8_t(0xd)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_043)
{
    // 3084  ; [.3E95.0020.000E] 
    // HIRAGANA LETTER YA

    uint32_t const cps[1] = { 0x3084 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e95), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_044)
{
    // 3085  ; [.3E96.0020.000D] 
    // HIRAGANA LETTER SMALL YU

    uint32_t const cps[1] = { 0x3085 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e96), uint8_t(0x0), uint8_t(0xd)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_045)
{
    // 3086  ; [.3E96.0020.000E] 
    // HIRAGANA LETTER YU

    uint32_t const cps[1] = { 0x3086 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e96), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_046)
{
    // 3087  ; [.3E97.0020.000D] 
    // HIRAGANA LETTER SMALL YO

    uint32_t const cps[1] = { 0x3087 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e97), uint8_t(0x0), uint8_t(0xd)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_047)
{
    // 3088  ; [.3E97.0020.000E] 
    // HIRAGANA LETTER YO

    uint32_t const cps[1] = { 0x3088 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e97), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_048)
{
    // 3089  ; [.3E98.0020.000E] 
    // HIRAGANA LETTER RA

    uint32_t const cps[1] = { 0x3089 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e98), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_049)
{
    // 308A  ; [.3E99.0020.000E] 
    // HIRAGANA LETTER RI

    uint32_t const cps[1] = { 0x308a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e99), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_050)
{
    // 308B  ; [.3E9A.0020.000E] 
    // HIRAGANA LETTER RU

    uint32_t const cps[1] = { 0x308b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9a), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_051)
{
    // 308C  ; [.3E9B.0020.000E] 
    // HIRAGANA LETTER RE

    uint32_t const cps[1] = { 0x308c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9b), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_052)
{
    // 308D  ; [.3E9C.0020.000E] 
    // HIRAGANA LETTER RO

    uint32_t const cps[1] = { 0x308d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9c), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_053)
{
    // 308E  ; [.3E9D.0020.000D] 
    // HIRAGANA LETTER SMALL WA

    uint32_t const cps[1] = { 0x308e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9d), uint8_t(0x0), uint8_t(0xd)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_054)
{
    // 308F  ; [.3E9D.0020.000E] 
    // HIRAGANA LETTER WA

    uint32_t const cps[1] = { 0x308f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9d), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_055)
{
    // 3090  ; [.3E9E.0020.000E] 
    // HIRAGANA LETTER WI

    uint32_t const cps[1] = { 0x3090 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9e), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_056)
{
    // 3091  ; [.3E9F.0020.000E] 
    // HIRAGANA LETTER WE

    uint32_t const cps[1] = { 0x3091 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9f), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_057)
{
    // 3092  ; [.3EA0.0020.000E] 
    // HIRAGANA LETTER WO

    uint32_t const cps[1] = { 0x3092 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3ea0), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_058)
{
    // 3093  ; [.3EA1.0020.000E] 
    // HIRAGANA LETTER N

    uint32_t const cps[1] = { 0x3093 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3ea1), uint8_t(0x0), uint8_t(0xe)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_059)
{
    // 3094  ; [.3E73.0020.000E][.0000.0037.0002] 
    // HIRAGANA LETTER VU

    uint32_t const cps[1] = { 0x3094 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e73), uint8_t(0x0), uint8_t(0xe)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_060)
{
    // 3095  ; [.3E77.0020.000D] 
    // HIRAGANA LETTER SMALL KA

    uint32_t const cps[1] = { 0x3095 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e77), uint8_t(0x0), uint8_t(0xd)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_061)
{
    // 3096  ; [.3E7A.0020.000D] 
    // HIRAGANA LETTER SMALL KE

    uint32_t const cps[1] = { 0x3096 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7a), uint8_t(0x0), uint8_t(0xd)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_062)
{
    // 3099  ; [.0000.0037.0002] 
    // COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK

    uint32_t const cps[1] = { 0x3099 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_063)
{
    // 309A  ; [.0000.0038.0002] 
    // COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK

    uint32_t const cps[1] = { 0x309a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_064)
{
    // 309B  ; [*04A7.0020.0002] 
    // KATAKANA-HIRAGANA VOICED SOUND MARK

    uint32_t const cps[1] = { 0x309b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_065)
{
    // 309C  ; [*04A8.0020.0002] 
    // KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK

    uint32_t const cps[1] = { 0x309c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_066)
{
    // 309D  ; [.1C72.0020.0002] 
    // HIRAGANA ITERATION MARK

    uint32_t const cps[1] = { 0x309d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c72), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_067)
{
    // 309E  ; [.1C72.0020.0002][.0000.0037.0002] 
    // HIRAGANA VOICED ITERATION MARK

    uint32_t const cps[1] = { 0x309e };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x1c72), uint8_t(0x0), uint8_t(0x2)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_068)
{
    // 309F  ; [.3E97.0020.0016][.3E99.0020.0016] 
    // HIRAGANA DIGRAPH YORI

    uint32_t const cps[1] = { 0x309f };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e97), uint8_t(0x0), uint8_t(0x16)}, {uint16_t(0x3e99), uint8_t(0x0), uint8_t(0x16)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_069)
{
    // 30A0  ; [*0220.0020.0002] 
    // KATAKANA-HIRAGANA DOUBLE HYPHEN

    uint32_t const cps[1] = { 0x30a0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x220), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_070)
{
    // 30A1  ; [.3E71.0020.000F] 
    // KATAKANA LETTER SMALL A

    uint32_t const cps[1] = { 0x30a1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e71), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_071)
{
    // 30A2  ; [.3E71.0020.0011] 
    // KATAKANA LETTER A

    uint32_t const cps[1] = { 0x30a2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e71), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_072)
{
    // 30A3  ; [.3E72.0020.000F] 
    // KATAKANA LETTER SMALL I

    uint32_t const cps[1] = { 0x30a3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e72), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_073)
{
    // 30A4  ; [.3E72.0020.0011] 
    // KATAKANA LETTER I

    uint32_t const cps[1] = { 0x30a4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e72), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_074)
{
    // 30A5  ; [.3E73.0020.000F] 
    // KATAKANA LETTER SMALL U

    uint32_t const cps[1] = { 0x30a5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e73), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_075)
{
    // 30A6  ; [.3E73.0020.0011] 
    // KATAKANA LETTER U

    uint32_t const cps[1] = { 0x30a6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e73), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_076)
{
    // 30A7  ; [.3E75.0020.000F] 
    // KATAKANA LETTER SMALL E

    uint32_t const cps[1] = { 0x30a7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e75), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_077)
{
    // 30A8  ; [.3E75.0020.0011] 
    // KATAKANA LETTER E

    uint32_t const cps[1] = { 0x30a8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e75), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_078)
{
    // 30A9  ; [.3E76.0020.000F] 
    // KATAKANA LETTER SMALL O

    uint32_t const cps[1] = { 0x30a9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e76), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_079)
{
    // 30AA  ; [.3E76.0020.0011] 
    // KATAKANA LETTER O

    uint32_t const cps[1] = { 0x30aa };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e76), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_080)
{
    // 30AB  ; [.3E77.0020.0011] 
    // KATAKANA LETTER KA

    uint32_t const cps[1] = { 0x30ab };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e77), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_081)
{
    // 30AC  ; [.3E77.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER GA

    uint32_t const cps[1] = { 0x30ac };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e77), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_082)
{
    // 30AD  ; [.3E78.0020.0011] 
    // KATAKANA LETTER KI

    uint32_t const cps[1] = { 0x30ad };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e78), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_083)
{
    // 30AE  ; [.3E78.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER GI

    uint32_t const cps[1] = { 0x30ae };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e78), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_084)
{
    // 30AF  ; [.3E79.0020.0011] 
    // KATAKANA LETTER KU

    uint32_t const cps[1] = { 0x30af };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e79), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_085)
{
    // 30B0  ; [.3E79.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER GU

    uint32_t const cps[1] = { 0x30b0 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e79), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_086)
{
    // 30B1  ; [.3E7A.0020.0011] 
    // KATAKANA LETTER KE

    uint32_t const cps[1] = { 0x30b1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7a), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_087)
{
    // 30B2  ; [.3E7A.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER GE

    uint32_t const cps[1] = { 0x30b2 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7a), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_088)
{
    // 30B3  ; [.3E7B.0020.0011] 
    // KATAKANA LETTER KO

    uint32_t const cps[1] = { 0x30b3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7b), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_089)
{
    // 30B4  ; [.3E7B.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER GO

    uint32_t const cps[1] = { 0x30b4 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7b), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_090)
{
    // 30B5  ; [.3E7C.0020.0011] 
    // KATAKANA LETTER SA

    uint32_t const cps[1] = { 0x30b5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7c), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_091)
{
    // 30B6  ; [.3E7C.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER ZA

    uint32_t const cps[1] = { 0x30b6 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7c), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_092)
{
    // 30B7  ; [.3E7D.0020.0011] 
    // KATAKANA LETTER SI

    uint32_t const cps[1] = { 0x30b7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7d), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_093)
{
    // 30B8  ; [.3E7D.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER ZI

    uint32_t const cps[1] = { 0x30b8 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7d), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_094)
{
    // 30B9  ; [.3E7E.0020.0011] 
    // KATAKANA LETTER SU

    uint32_t const cps[1] = { 0x30b9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7e), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_095)
{
    // 30BA  ; [.3E7E.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER ZU

    uint32_t const cps[1] = { 0x30ba };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7e), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_096)
{
    // 30BB  ; [.3E7F.0020.0011] 
    // KATAKANA LETTER SE

    uint32_t const cps[1] = { 0x30bb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e7f), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_097)
{
    // 30BC  ; [.3E7F.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER ZE

    uint32_t const cps[1] = { 0x30bc };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e7f), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_098)
{
    // 30BD  ; [.3E80.0020.0011] 
    // KATAKANA LETTER SO

    uint32_t const cps[1] = { 0x30bd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e80), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_099)
{
    // 30BE  ; [.3E80.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER ZO

    uint32_t const cps[1] = { 0x30be };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e80), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_100)
{
    // 30BF  ; [.3E81.0020.0011] 
    // KATAKANA LETTER TA

    uint32_t const cps[1] = { 0x30bf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e81), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_101)
{
    // 30C0  ; [.3E81.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER DA

    uint32_t const cps[1] = { 0x30c0 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e81), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_102)
{
    // 30C1  ; [.3E82.0020.0011] 
    // KATAKANA LETTER TI

    uint32_t const cps[1] = { 0x30c1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e82), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_103)
{
    // 30C2  ; [.3E82.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER DI

    uint32_t const cps[1] = { 0x30c2 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e82), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_104)
{
    // 30C3  ; [.3E83.0020.000F] 
    // KATAKANA LETTER SMALL TU

    uint32_t const cps[1] = { 0x30c3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e83), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_105)
{
    // 30C4  ; [.3E83.0020.0011] 
    // KATAKANA LETTER TU

    uint32_t const cps[1] = { 0x30c4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e83), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_106)
{
    // 30C5  ; [.3E83.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER DU

    uint32_t const cps[1] = { 0x30c5 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e83), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_107)
{
    // 30C6  ; [.3E84.0020.0011] 
    // KATAKANA LETTER TE

    uint32_t const cps[1] = { 0x30c6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e84), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_108)
{
    // 30C7  ; [.3E84.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER DE

    uint32_t const cps[1] = { 0x30c7 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e84), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_109)
{
    // 30C8  ; [.3E85.0020.0011] 
    // KATAKANA LETTER TO

    uint32_t const cps[1] = { 0x30c8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e85), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_110)
{
    // 30C9  ; [.3E85.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER DO

    uint32_t const cps[1] = { 0x30c9 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e85), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_111)
{
    // 30CA  ; [.3E86.0020.0011] 
    // KATAKANA LETTER NA

    uint32_t const cps[1] = { 0x30ca };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e86), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_112)
{
    // 30CB  ; [.3E87.0020.0011] 
    // KATAKANA LETTER NI

    uint32_t const cps[1] = { 0x30cb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e87), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_113)
{
    // 30CC  ; [.3E88.0020.0011] 
    // KATAKANA LETTER NU

    uint32_t const cps[1] = { 0x30cc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e88), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_114)
{
    // 30CD  ; [.3E89.0020.0011] 
    // KATAKANA LETTER NE

    uint32_t const cps[1] = { 0x30cd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e89), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_115)
{
    // 30CE  ; [.3E8A.0020.0011] 
    // KATAKANA LETTER NO

    uint32_t const cps[1] = { 0x30ce };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8a), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_116)
{
    // 30CF  ; [.3E8B.0020.0011] 
    // KATAKANA LETTER HA

    uint32_t const cps[1] = { 0x30cf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8b), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_117)
{
    // 30D0  ; [.3E8B.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER BA

    uint32_t const cps[1] = { 0x30d0 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8b), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_118)
{
    // 30D1  ; [.3E8B.0020.0011][.0000.0038.0002] 
    // KATAKANA LETTER PA

    uint32_t const cps[1] = { 0x30d1 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8b), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_119)
{
    // 30D2  ; [.3E8C.0020.0011] 
    // KATAKANA LETTER HI

    uint32_t const cps[1] = { 0x30d2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8c), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_120)
{
    // 30D3  ; [.3E8C.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER BI

    uint32_t const cps[1] = { 0x30d3 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8c), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_121)
{
    // 30D4  ; [.3E8C.0020.0011][.0000.0038.0002] 
    // KATAKANA LETTER PI

    uint32_t const cps[1] = { 0x30d4 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8c), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_122)
{
    // 30D5  ; [.3E8D.0020.0011] 
    // KATAKANA LETTER HU

    uint32_t const cps[1] = { 0x30d5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8d), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_123)
{
    // 30D6  ; [.3E8D.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER BU

    uint32_t const cps[1] = { 0x30d6 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8d), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_124)
{
    // 30D7  ; [.3E8D.0020.0011][.0000.0038.0002] 
    // KATAKANA LETTER PU

    uint32_t const cps[1] = { 0x30d7 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8d), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_125)
{
    // 30D8  ; [.3E8E.0020.0011] 
    // KATAKANA LETTER HE

    uint32_t const cps[1] = { 0x30d8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8e), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_126)
{
    // 30D9  ; [.3E8E.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER BE

    uint32_t const cps[1] = { 0x30d9 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8e), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_127)
{
    // 30DA  ; [.3E8E.0020.0011][.0000.0038.0002] 
    // KATAKANA LETTER PE

    uint32_t const cps[1] = { 0x30da };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8e), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_128)
{
    // 30DB  ; [.3E8F.0020.0011] 
    // KATAKANA LETTER HO

    uint32_t const cps[1] = { 0x30db };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e8f), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_129)
{
    // 30DC  ; [.3E8F.0020.0011][.0000.0037.0002] 
    // KATAKANA LETTER BO

    uint32_t const cps[1] = { 0x30dc };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8f), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x17), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_130)
{
    // 30DD  ; [.3E8F.0020.0011][.0000.0038.0002] 
    // KATAKANA LETTER PO

    uint32_t const cps[1] = { 0x30dd };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x3e8f), uint8_t(0x0), uint8_t(0x11)}, {uint16_t(0x0), uint8_t(0x18), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_078_131)
{
    // 30DE  ; [.3E90.0020.0011] 
    // KATAKANA LETTER MA

    uint32_t const cps[1] = { 0x30de };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e90), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_132)
{
    // 30DF  ; [.3E91.0020.0011] 
    // KATAKANA LETTER MI

    uint32_t const cps[1] = { 0x30df };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e91), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_133)
{
    // 30E0  ; [.3E92.0020.0011] 
    // KATAKANA LETTER MU

    uint32_t const cps[1] = { 0x30e0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e92), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_134)
{
    // 30E1  ; [.3E93.0020.0011] 
    // KATAKANA LETTER ME

    uint32_t const cps[1] = { 0x30e1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e93), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_135)
{
    // 30E2  ; [.3E94.0020.0011] 
    // KATAKANA LETTER MO

    uint32_t const cps[1] = { 0x30e2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e94), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_136)
{
    // 30E3  ; [.3E95.0020.000F] 
    // KATAKANA LETTER SMALL YA

    uint32_t const cps[1] = { 0x30e3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e95), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_137)
{
    // 30E4  ; [.3E95.0020.0011] 
    // KATAKANA LETTER YA

    uint32_t const cps[1] = { 0x30e4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e95), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_138)
{
    // 30E5  ; [.3E96.0020.000F] 
    // KATAKANA LETTER SMALL YU

    uint32_t const cps[1] = { 0x30e5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e96), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_139)
{
    // 30E6  ; [.3E96.0020.0011] 
    // KATAKANA LETTER YU

    uint32_t const cps[1] = { 0x30e6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e96), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_140)
{
    // 30E7  ; [.3E97.0020.000F] 
    // KATAKANA LETTER SMALL YO

    uint32_t const cps[1] = { 0x30e7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e97), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_141)
{
    // 30E8  ; [.3E97.0020.0011] 
    // KATAKANA LETTER YO

    uint32_t const cps[1] = { 0x30e8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e97), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_142)
{
    // 30E9  ; [.3E98.0020.0011] 
    // KATAKANA LETTER RA

    uint32_t const cps[1] = { 0x30e9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e98), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_143)
{
    // 30EA  ; [.3E99.0020.0011] 
    // KATAKANA LETTER RI

    uint32_t const cps[1] = { 0x30ea };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e99), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_144)
{
    // 30EB  ; [.3E9A.0020.0011] 
    // KATAKANA LETTER RU

    uint32_t const cps[1] = { 0x30eb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9a), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_145)
{
    // 30EC  ; [.3E9B.0020.0011] 
    // KATAKANA LETTER RE

    uint32_t const cps[1] = { 0x30ec };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9b), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_146)
{
    // 30ED  ; [.3E9C.0020.0011] 
    // KATAKANA LETTER RO

    uint32_t const cps[1] = { 0x30ed };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9c), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_147)
{
    // 30EE  ; [.3E9D.0020.000F] 
    // KATAKANA LETTER SMALL WA

    uint32_t const cps[1] = { 0x30ee };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9d), uint8_t(0x0), uint8_t(0xf)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_148)
{
    // 30EF  ; [.3E9D.0020.0011] 
    // KATAKANA LETTER WA

    uint32_t const cps[1] = { 0x30ef };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9d), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_078_149)
{
    // 30F0  ; [.3E9E.0020.0011] 
    // KATAKANA LETTER WI

    uint32_t const cps[1] = { 0x30f0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x3e9e), uint8_t(0x0), uint8_t(0x11)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

