
// Warning! This file is autogenerated.
#include <boost/text/collation_table.hpp>
#include <boost/text/collate.hpp>
#include <boost/text/save_load_table.hpp>
#include <boost/text/data/all.hpp>

#include <boost/filesystem.hpp>

#include <gtest/gtest.h>

using namespace boost::text;

auto const error = [](string const & s) { std::cout << s; };
auto const warning = [](string const & s) {};

collation_table make_save_load_table()
{
    if (!exists(boost::filesystem::path("ko_search.table"))) {
        string const table_str(data::ko::search_collation_tailoring());
        collation_table table = tailored_collation_table(
            table_str,
            "ko::search_collation_tailoring()", error, warning);
        save_table(table, "ko_search.table.0");
        boost::filesystem::rename("ko_search.table.0", "ko_search.table");
    }
    return load_table("ko_search.table");
}
collation_table const & table()
{
    static collation_table retval = make_save_load_table();
    return retval;
}
TEST(tailoring, ko_search_000_001)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x003d),
        std::vector<uint32_t>(1, 0x2260),
        table(), collation_strength::primary),
        -1);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0627),
        std::vector<uint32_t>(1, 0xfe8e),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0627),
        std::vector<uint32_t>(1, 0xfe8e),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8e),
        std::vector<uint32_t>(1, 0xfe8d),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8e),
        std::vector<uint32_t>(1, 0xfe8d),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8d),
        std::vector<uint32_t>(1, 0x0622),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8d),
        std::vector<uint32_t>(1, 0x0622),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0622),
        std::vector<uint32_t>(1, 0xfe82),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0622),
        std::vector<uint32_t>(1, 0xfe82),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe82),
        std::vector<uint32_t>(1, 0xfe81),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe82),
        std::vector<uint32_t>(1, 0xfe81),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe81),
        std::vector<uint32_t>(1, 0x0623),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe81),
        std::vector<uint32_t>(1, 0x0623),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0623),
        std::vector<uint32_t>(1, 0xfe84),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0623),
        std::vector<uint32_t>(1, 0xfe84),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe84),
        std::vector<uint32_t>(1, 0xfe83),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe84),
        std::vector<uint32_t>(1, 0xfe83),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe83),
        std::vector<uint32_t>(1, 0x0625),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe83),
        std::vector<uint32_t>(1, 0x0625),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0625),
        std::vector<uint32_t>(1, 0xfe88),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0625),
        std::vector<uint32_t>(1, 0xfe88),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe88),
        std::vector<uint32_t>(1, 0xfe87),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe88),
        std::vector<uint32_t>(1, 0xfe87),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0648),
        std::vector<uint32_t>(1, 0x06e5),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0648),
        std::vector<uint32_t>(1, 0x06e5),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x06e5),
        std::vector<uint32_t>(1, 0xfeee),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x06e5),
        std::vector<uint32_t>(1, 0xfeee),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeee),
        std::vector<uint32_t>(1, 0xfeed),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeee),
        std::vector<uint32_t>(1, 0xfeed),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeed),
        std::vector<uint32_t>(1, 0x0624),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeed),
        std::vector<uint32_t>(1, 0x0624),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0624),
        std::vector<uint32_t>(1, 0xfe86),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0624),
        std::vector<uint32_t>(1, 0xfe86),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe86),
        std::vector<uint32_t>(1, 0xfe85),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe86),
        std::vector<uint32_t>(1, 0xfe85),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x064a),
        std::vector<uint32_t>(1, 0x06e6),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x064a),
        std::vector<uint32_t>(1, 0x06e6),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x06e6),
        std::vector<uint32_t>(1, 0xfef3),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x06e6),
        std::vector<uint32_t>(1, 0xfef3),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef3),
        std::vector<uint32_t>(1, 0xfef4),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef3),
        std::vector<uint32_t>(1, 0xfef4),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef4),
        std::vector<uint32_t>(1, 0xfef2),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef4),
        std::vector<uint32_t>(1, 0xfef2),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef2),
        std::vector<uint32_t>(1, 0xfef1),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef2),
        std::vector<uint32_t>(1, 0xfef1),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef1),
        std::vector<uint32_t>(1, 0x0626),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef1),
        std::vector<uint32_t>(1, 0x0626),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0626),
        std::vector<uint32_t>(1, 0xfe8b),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0626),
        std::vector<uint32_t>(1, 0xfe8b),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8b),
        std::vector<uint32_t>(1, 0xfe8c),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8b),
        std::vector<uint32_t>(1, 0xfe8c),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8c),
        std::vector<uint32_t>(1, 0xfe8a),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8c),
        std::vector<uint32_t>(1, 0xfe8a),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8a),
        std::vector<uint32_t>(1, 0xfe89),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe8a),
        std::vector<uint32_t>(1, 0xfe89),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe89),
        std::vector<uint32_t>(1, 0x0649),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe89),
        std::vector<uint32_t>(1, 0x0649),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0649),
        std::vector<uint32_t>(1, 0xfbe8),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0649),
        std::vector<uint32_t>(1, 0xfbe8),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfbe8),
        std::vector<uint32_t>(1, 0xfbe9),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfbe8),
        std::vector<uint32_t>(1, 0xfbe9),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfbe9),
        std::vector<uint32_t>(1, 0xfef0),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfbe9),
        std::vector<uint32_t>(1, 0xfef0),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef0),
        std::vector<uint32_t>(1, 0xfeef),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfef0),
        std::vector<uint32_t>(1, 0xfeef),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0647),
        std::vector<uint32_t>(1, 0xfeeb),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0647),
        std::vector<uint32_t>(1, 0xfeeb),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeeb),
        std::vector<uint32_t>(1, 0xfeec),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeeb),
        std::vector<uint32_t>(1, 0xfeec),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeec),
        std::vector<uint32_t>(1, 0xfeea),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeec),
        std::vector<uint32_t>(1, 0xfeea),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeea),
        std::vector<uint32_t>(1, 0xfee9),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfeea),
        std::vector<uint32_t>(1, 0xfee9),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfee9),
        std::vector<uint32_t>(1, 0x0629),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfee9),
        std::vector<uint32_t>(1, 0x0629),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0629),
        std::vector<uint32_t>(1, 0xfe94),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0629),
        std::vector<uint32_t>(1, 0xfe94),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe94),
        std::vector<uint32_t>(1, 0xfe93),
        table(), collation_strength::tertiary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0xfe94),
        std::vector<uint32_t>(1, 0xfe93),
        table(), collation_strength::secondary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x00b7),
        std::vector<uint32_t>(1, 0x05f3),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x00b7),
        std::vector<uint32_t>(1, 0x05f3),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x05f3),
        std::vector<uint32_t>(1, 0x05f4),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x05f3),
        std::vector<uint32_t>(1, 0x05f4),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x05f4),
        std::vector<uint32_t>(1, 0x0640),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x05f4),
        std::vector<uint32_t>(1, 0x0640),
        table(), collation_strength::primary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0640),
        std::vector<uint32_t>(1, 0x0e3a),
        table(), collation_strength::secondary),
        -1);
    // equal to preceeding cps at next-lower strength
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x0640),
        std::vector<uint32_t>(1, 0x0e3a),
        table(), collation_strength::primary),
        0);
}

TEST(tailoring, ko_search_000_002)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1100),
        std::vector<uint32_t>(1, 0x11a8),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1100},
        std::vector<uint32_t>(1, 0x1101),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1101),
        std::vector<uint32_t>(1, 0x11a9),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1109},
        std::vector<uint32_t>(1, 0x11aa),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1102),
        std::vector<uint32_t>(1, 0x11ab),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x110c},
        std::vector<uint32_t>(1, 0x11ac),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1112},
        std::vector<uint32_t>(1, 0x11ad),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1103),
        std::vector<uint32_t>(1, 0x11ae),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1103, 0x1103},
        std::vector<uint32_t>(1, 0x1104),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1105),
        std::vector<uint32_t>(1, 0x11af),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1100},
        std::vector<uint32_t>(1, 0x11b0),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1106},
        std::vector<uint32_t>(1, 0x11b1),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1107},
        std::vector<uint32_t>(1, 0x11b2),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1109},
        std::vector<uint32_t>(1, 0x11b3),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1110},
        std::vector<uint32_t>(1, 0x11b4),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1111},
        std::vector<uint32_t>(1, 0x11b5),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1112},
        std::vector<uint32_t>(1, 0x11b6),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1106),
        std::vector<uint32_t>(1, 0x11b7),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1107),
        std::vector<uint32_t>(1, 0x11b8),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1107},
        std::vector<uint32_t>(1, 0x1108),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1109},
        std::vector<uint32_t>(1, 0x11b9),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1109),
        std::vector<uint32_t>(1, 0x11ba),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1109},
        std::vector<uint32_t>(1, 0x110a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x110a),
        std::vector<uint32_t>(1, 0x11bb),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x110b),
        std::vector<uint32_t>(1, 0x11bc),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x110c),
        std::vector<uint32_t>(1, 0x11bd),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110c, 0x110c},
        std::vector<uint32_t>(1, 0x110d),
        table(), collation_strength::quaternary),
        0);
}

TEST(tailoring, ko_search_000_003)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x110e),
        std::vector<uint32_t>(1, 0x11be),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x110f),
        std::vector<uint32_t>(1, 0x11bf),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1110),
        std::vector<uint32_t>(1, 0x11c0),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1111),
        std::vector<uint32_t>(1, 0x11c1),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1112),
        std::vector<uint32_t>(1, 0x11c2),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1161, 0x1175},
        std::vector<uint32_t>(1, 0x1162),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1163, 0x1175},
        std::vector<uint32_t>(1, 0x1164),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1165, 0x1175},
        std::vector<uint32_t>(1, 0x1166),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1167, 0x1175},
        std::vector<uint32_t>(1, 0x1168),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1161},
        std::vector<uint32_t>(1, 0x116a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1161, 0x1175},
        std::vector<uint32_t>(1, 0x116b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1175},
        std::vector<uint32_t>(1, 0x116c),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x1165},
        std::vector<uint32_t>(1, 0x116f),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x1165, 0x1175},
        std::vector<uint32_t>(1, 0x1170),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x1175},
        std::vector<uint32_t>(1, 0x1171),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1173, 0x1175},
        std::vector<uint32_t>(1, 0x1174),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1102},
        std::vector<uint32_t>(1, 0x11fa),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1103},
        std::vector<uint32_t>(1, 0x115a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1105},
        std::vector<uint32_t>(1, 0x11c3),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1107},
        std::vector<uint32_t>(1, 0x11fb),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1109, 0x1100},
        std::vector<uint32_t>(1, 0x11c4),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x110e},
        std::vector<uint32_t>(1, 0x11fc),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x110f},
        std::vector<uint32_t>(1, 0x11fd),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1100, 0x1112},
        std::vector<uint32_t>(1, 0x11fe),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1100},
        std::vector<uint32_t>(1, 0x1113),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1113),
        std::vector<uint32_t>(1, 0x11c5),
        table(), collation_strength::quaternary),
        0);
}

TEST(tailoring, ko_search_000_004)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1102},
        std::vector<uint32_t>(1, 0x1114),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1114),
        std::vector<uint32_t>(1, 0x11ff),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1103},
        std::vector<uint32_t>(1, 0x1115),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1115),
        std::vector<uint32_t>(1, 0x11c6),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1107},
        std::vector<uint32_t>(1, 0x1116),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1109},
        std::vector<uint32_t>(1, 0x115b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x115b),
        std::vector<uint32_t>(1, 0x11c7),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x110c},
        std::vector<uint32_t>(1, 0x115c),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1110},
        std::vector<uint32_t>(1, 0x11c9),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1102, 0x1112},
        std::vector<uint32_t>(1, 0x115d),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1103, 0x1100},
        std::vector<uint32_t>(1, 0x1117),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1117),
        std::vector<uint32_t>(1, 0x11ca),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1103, 0x1105},
        std::vector<uint32_t>(1, 0x115e),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x115e),
        std::vector<uint32_t>(1, 0x11cb),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1100, 0x1109},
        std::vector<uint32_t>(1, 0x11cc),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1102},
        std::vector<uint32_t>(1, 0x1118),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1118),
        std::vector<uint32_t>(1, 0x11cd),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1103},
        std::vector<uint32_t>(1, 0x11ce),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1103, 0x1112},
        std::vector<uint32_t>(1, 0x11cf),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1105},
        std::vector<uint32_t>(1, 0x1119),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1119),
        std::vector<uint32_t>(1, 0x11d0),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1106, 0x1100},
        std::vector<uint32_t>(1, 0x11d1),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1106, 0x1109},
        std::vector<uint32_t>(1, 0x11d2),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1107, 0x1109},
        std::vector<uint32_t>(1, 0x11d3),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1107, 0x110b},
        std::vector<uint32_t>(1, 0x11d5),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1107, 0x1112},
        std::vector<uint32_t>(1, 0x11d4),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1109, 0x1109},
        std::vector<uint32_t>(1, 0x11d6),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x110b},
        std::vector<uint32_t>(1, 0x111b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x110f},
        std::vector<uint32_t>(1, 0x11d8),
        table(), collation_strength::quaternary),
        0);
}

TEST(tailoring, ko_search_000_005)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1105, 0x1112},
        std::vector<uint32_t>(1, 0x111a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x1100},
        std::vector<uint32_t>(1, 0x11da),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x1105},
        std::vector<uint32_t>(1, 0x11db),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x1107},
        std::vector<uint32_t>(1, 0x111c),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x111c),
        std::vector<uint32_t>(1, 0x11dc),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x1109},
        std::vector<uint32_t>(1, 0x11dd),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x1109, 0x1109},
        std::vector<uint32_t>(1, 0x11de),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x110b},
        std::vector<uint32_t>(1, 0x111d),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x111d),
        std::vector<uint32_t>(1, 0x11e2),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x110e},
        std::vector<uint32_t>(1, 0x11e0),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1106, 0x1112},
        std::vector<uint32_t>(1, 0x11e1),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1100},
        std::vector<uint32_t>(1, 0x111e),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1102},
        std::vector<uint32_t>(1, 0x111f),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1103},
        std::vector<uint32_t>(1, 0x1120),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1105},
        std::vector<uint32_t>(1, 0x11e3),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1107, 0x110b},
        std::vector<uint32_t>(1, 0x112c),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1109},
        std::vector<uint32_t>(1, 0x1121),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1109, 0x1100},
        std::vector<uint32_t>(1, 0x1122),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1109, 0x1103},
        std::vector<uint32_t>(1, 0x1123),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1109, 0x1107},
        std::vector<uint32_t>(1, 0x1124),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1109, 0x1109},
        std::vector<uint32_t>(1, 0x1125),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1109, 0x110c},
        std::vector<uint32_t>(1, 0x1126),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x110b},
        std::vector<uint32_t>(1, 0x112b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x112b),
        std::vector<uint32_t>(1, 0x11e6),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x110c},
        std::vector<uint32_t>(1, 0x1127),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x110e},
        std::vector<uint32_t>(1, 0x1128),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1110},
        std::vector<uint32_t>(1, 0x1129),
        table(), collation_strength::quaternary),
        0);
}

TEST(tailoring, ko_search_000_006)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1111},
        std::vector<uint32_t>(1, 0x112a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x112a),
        std::vector<uint32_t>(1, 0x11e4),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1107, 0x1112},
        std::vector<uint32_t>(1, 0x11e5),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1100},
        std::vector<uint32_t>(1, 0x112d),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x112d),
        std::vector<uint32_t>(1, 0x11e7),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1102},
        std::vector<uint32_t>(1, 0x112e),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1103},
        std::vector<uint32_t>(1, 0x112f),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x112f),
        std::vector<uint32_t>(1, 0x11e8),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1105},
        std::vector<uint32_t>(1, 0x1130),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1130),
        std::vector<uint32_t>(1, 0x11e9),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1106},
        std::vector<uint32_t>(1, 0x1131),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1107},
        std::vector<uint32_t>(1, 0x1132),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1132),
        std::vector<uint32_t>(1, 0x11ea),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1107, 0x1100},
        std::vector<uint32_t>(1, 0x1133),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1109, 0x1109},
        std::vector<uint32_t>(1, 0x1134),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x110b},
        std::vector<uint32_t>(1, 0x1135),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x110c},
        std::vector<uint32_t>(1, 0x1136),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x110e},
        std::vector<uint32_t>(1, 0x1137),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x110f},
        std::vector<uint32_t>(1, 0x1138),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1110},
        std::vector<uint32_t>(1, 0x1139),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1111},
        std::vector<uint32_t>(1, 0x113a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1109, 0x1112},
        std::vector<uint32_t>(1, 0x113b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1100},
        std::vector<uint32_t>(1, 0x1141),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1141),
        std::vector<uint32_t>(1, 0x11ec),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1100, 0x1100},
        std::vector<uint32_t>(1, 0x11ed),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1103},
        std::vector<uint32_t>(1, 0x1142),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1106},
        std::vector<uint32_t>(1, 0x1143),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1107},
        std::vector<uint32_t>(1, 0x1144),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1109},
        std::vector<uint32_t>(1, 0x1145),
        table(), collation_strength::quaternary),
        0);
}

TEST(tailoring, ko_search_000_007)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x110b},
        std::vector<uint32_t>(1, 0x1147),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1147),
        std::vector<uint32_t>(1, 0x11ee),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x110c},
        std::vector<uint32_t>(1, 0x1148),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x110e},
        std::vector<uint32_t>(1, 0x1149),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x110f},
        std::vector<uint32_t>(1, 0x11ef),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1110},
        std::vector<uint32_t>(1, 0x114a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110b, 0x1111},
        std::vector<uint32_t>(1, 0x114b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110c, 0x110b},
        std::vector<uint32_t>(1, 0x114d),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110e, 0x110f},
        std::vector<uint32_t>(1, 0x1152),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x110e, 0x1112},
        std::vector<uint32_t>(1, 0x1153),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1111, 0x1107},
        std::vector<uint32_t>(1, 0x1156),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1156),
        std::vector<uint32_t>(1, 0x11f3),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1111, 0x110b},
        std::vector<uint32_t>(1, 0x1157),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>(1, 0x1157),
        std::vector<uint32_t>(1, 0x11f4),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1112, 0x1102},
        std::vector<uint32_t>(1, 0x11f5),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1112, 0x1105},
        std::vector<uint32_t>(1, 0x11f6),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1112, 0x1106},
        std::vector<uint32_t>(1, 0x11f7),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1112, 0x1107},
        std::vector<uint32_t>(1, 0x11f8),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1112, 0x1112},
        std::vector<uint32_t>(1, 0x1158),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1161, 0x1169},
        std::vector<uint32_t>(1, 0x1176),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1161, 0x116e},
        std::vector<uint32_t>(1, 0x1177),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1163, 0x1169},
        std::vector<uint32_t>(1, 0x1178),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1163, 0x116d},
        std::vector<uint32_t>(1, 0x1179),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1165, 0x1169},
        std::vector<uint32_t>(1, 0x117a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1165, 0x116e},
        std::vector<uint32_t>(1, 0x117b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1165, 0x1173},
        std::vector<uint32_t>(1, 0x117c),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1167, 0x1169},
        std::vector<uint32_t>(1, 0x117d),
        table(), collation_strength::quaternary),
        0);
}

TEST(tailoring, ko_search_000_008)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1167, 0x116e},
        std::vector<uint32_t>(1, 0x117e),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1165},
        std::vector<uint32_t>(1, 0x117f),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1165, 0x1175},
        std::vector<uint32_t>(1, 0x1180),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1167, 0x1175},
        std::vector<uint32_t>(1, 0x1181),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1169},
        std::vector<uint32_t>(1, 0x1182),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x116e},
        std::vector<uint32_t>(1, 0x1183),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116d, 0x1163},
        std::vector<uint32_t>(1, 0x1184),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116d, 0x1163, 0x1175},
        std::vector<uint32_t>(1, 0x1185),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116d, 0x1167},
        std::vector<uint32_t>(1, 0x1186),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116d, 0x1169},
        std::vector<uint32_t>(1, 0x1187),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116d, 0x1175},
        std::vector<uint32_t>(1, 0x1188),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x1161},
        std::vector<uint32_t>(1, 0x1189),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x1161, 0x1175},
        std::vector<uint32_t>(1, 0x118a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x1165, 0x1173},
        std::vector<uint32_t>(1, 0x118b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x1167, 0x1175},
        std::vector<uint32_t>(1, 0x118c),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x116e, 0x116e},
        std::vector<uint32_t>(1, 0x118d),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1172, 0x1161},
        std::vector<uint32_t>(1, 0x118e),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1172, 0x1165},
        std::vector<uint32_t>(1, 0x118f),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1172, 0x1165, 0x1175},
        std::vector<uint32_t>(1, 0x1190),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1172, 0x1167},
        std::vector<uint32_t>(1, 0x1191),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1172, 0x1167, 0x1175},
        std::vector<uint32_t>(1, 0x1192),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1172, 0x116e},
        std::vector<uint32_t>(1, 0x1193),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1172, 0x1175},
        std::vector<uint32_t>(1, 0x1194),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1173, 0x116e},
        std::vector<uint32_t>(1, 0x1195),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1173, 0x1173},
        std::vector<uint32_t>(1, 0x1196),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1174, 0x116e},
        std::vector<uint32_t>(1, 0x1197),
        table(), collation_strength::quaternary),
        0);
}

TEST(tailoring, ko_search_000_009)
{
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1175, 0x1161},
        std::vector<uint32_t>(1, 0x1198),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1175, 0x1163},
        std::vector<uint32_t>(1, 0x1199),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1175, 0x1169},
        std::vector<uint32_t>(1, 0x119a),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1175, 0x116e},
        std::vector<uint32_t>(1, 0x119b),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1175, 0x1173},
        std::vector<uint32_t>(1, 0x119c),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1161, 0x1173},
        std::vector<uint32_t>(1, 0x11a3),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1163, 0x116e},
        std::vector<uint32_t>(1, 0x11a4),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1167, 0x1163},
        std::vector<uint32_t>(1, 0x11a5),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1163},
        std::vector<uint32_t>(1, 0x11a6),
        table(), collation_strength::quaternary),
        0);
    // greater than (or equal to, for =) preceeding cps
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1169, 0x1163, 0x1175},
        std::vector<uint32_t>(1, 0x11a7),
        table(), collation_strength::quaternary),
        0);
}
