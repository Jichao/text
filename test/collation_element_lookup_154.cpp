// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_154_000)
{
    // 131C6 ; [.5210.0020.0002] 
    // EGYPTIAN HIEROGLYPH M014

    uint32_t const cps[1] = { 0x131c6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5210), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_001)
{
    // 131C7 ; [.5211.0020.0002] 
    // EGYPTIAN HIEROGLYPH M015

    uint32_t const cps[1] = { 0x131c7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5211), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_002)
{
    // 131C8 ; [.5212.0020.0002] 
    // EGYPTIAN HIEROGLYPH M015A

    uint32_t const cps[1] = { 0x131c8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5212), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_003)
{
    // 131C9 ; [.5213.0020.0002] 
    // EGYPTIAN HIEROGLYPH M016

    uint32_t const cps[1] = { 0x131c9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5213), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_004)
{
    // 131CA ; [.5214.0020.0002] 
    // EGYPTIAN HIEROGLYPH M016A

    uint32_t const cps[1] = { 0x131ca };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5214), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_005)
{
    // 131CB ; [.5215.0020.0002] 
    // EGYPTIAN HIEROGLYPH M017

    uint32_t const cps[1] = { 0x131cb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5215), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_006)
{
    // 131CC ; [.5216.0020.0002] 
    // EGYPTIAN HIEROGLYPH M017A

    uint32_t const cps[1] = { 0x131cc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5216), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_007)
{
    // 131CD ; [.5217.0020.0002] 
    // EGYPTIAN HIEROGLYPH M018

    uint32_t const cps[1] = { 0x131cd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5217), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_008)
{
    // 131CE ; [.5218.0020.0002] 
    // EGYPTIAN HIEROGLYPH M019

    uint32_t const cps[1] = { 0x131ce };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5218), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_009)
{
    // 131CF ; [.5219.0020.0002] 
    // EGYPTIAN HIEROGLYPH M020

    uint32_t const cps[1] = { 0x131cf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5219), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_010)
{
    // 131D0 ; [.521A.0020.0002] 
    // EGYPTIAN HIEROGLYPH M021

    uint32_t const cps[1] = { 0x131d0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x521a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_011)
{
    // 131D1 ; [.521B.0020.0002] 
    // EGYPTIAN HIEROGLYPH M022

    uint32_t const cps[1] = { 0x131d1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x521b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_012)
{
    // 131D2 ; [.521C.0020.0002] 
    // EGYPTIAN HIEROGLYPH M022A

    uint32_t const cps[1] = { 0x131d2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x521c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_013)
{
    // 131D3 ; [.521D.0020.0002] 
    // EGYPTIAN HIEROGLYPH M023

    uint32_t const cps[1] = { 0x131d3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x521d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_014)
{
    // 131D4 ; [.521E.0020.0002] 
    // EGYPTIAN HIEROGLYPH M024

    uint32_t const cps[1] = { 0x131d4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x521e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_015)
{
    // 131D5 ; [.521F.0020.0002] 
    // EGYPTIAN HIEROGLYPH M024A

    uint32_t const cps[1] = { 0x131d5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x521f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_016)
{
    // 131D6 ; [.5220.0020.0002] 
    // EGYPTIAN HIEROGLYPH M025

    uint32_t const cps[1] = { 0x131d6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5220), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_017)
{
    // 131D7 ; [.5221.0020.0002] 
    // EGYPTIAN HIEROGLYPH M026

    uint32_t const cps[1] = { 0x131d7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5221), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_018)
{
    // 131D8 ; [.5222.0020.0002] 
    // EGYPTIAN HIEROGLYPH M027

    uint32_t const cps[1] = { 0x131d8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5222), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_019)
{
    // 131D9 ; [.5223.0020.0002] 
    // EGYPTIAN HIEROGLYPH M028

    uint32_t const cps[1] = { 0x131d9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5223), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_020)
{
    // 131DA ; [.5224.0020.0002] 
    // EGYPTIAN HIEROGLYPH M028A

    uint32_t const cps[1] = { 0x131da };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5224), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_021)
{
    // 131DB ; [.5225.0020.0002] 
    // EGYPTIAN HIEROGLYPH M029

    uint32_t const cps[1] = { 0x131db };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5225), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_022)
{
    // 131DC ; [.5226.0020.0002] 
    // EGYPTIAN HIEROGLYPH M030

    uint32_t const cps[1] = { 0x131dc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5226), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_023)
{
    // 131DD ; [.5227.0020.0002] 
    // EGYPTIAN HIEROGLYPH M031

    uint32_t const cps[1] = { 0x131dd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5227), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_024)
{
    // 131DE ; [.5228.0020.0002] 
    // EGYPTIAN HIEROGLYPH M031A

    uint32_t const cps[1] = { 0x131de };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5228), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_025)
{
    // 131DF ; [.5229.0020.0002] 
    // EGYPTIAN HIEROGLYPH M032

    uint32_t const cps[1] = { 0x131df };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5229), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_026)
{
    // 131E0 ; [.522A.0020.0002] 
    // EGYPTIAN HIEROGLYPH M033

    uint32_t const cps[1] = { 0x131e0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x522a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_027)
{
    // 131E1 ; [.522B.0020.0002] 
    // EGYPTIAN HIEROGLYPH M033A

    uint32_t const cps[1] = { 0x131e1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x522b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_028)
{
    // 131E2 ; [.522C.0020.0002] 
    // EGYPTIAN HIEROGLYPH M033B

    uint32_t const cps[1] = { 0x131e2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x522c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_029)
{
    // 131E3 ; [.522D.0020.0002] 
    // EGYPTIAN HIEROGLYPH M034

    uint32_t const cps[1] = { 0x131e3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x522d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_030)
{
    // 131E4 ; [.522E.0020.0002] 
    // EGYPTIAN HIEROGLYPH M035

    uint32_t const cps[1] = { 0x131e4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x522e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_031)
{
    // 131E5 ; [.522F.0020.0002] 
    // EGYPTIAN HIEROGLYPH M036

    uint32_t const cps[1] = { 0x131e5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x522f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_032)
{
    // 131E6 ; [.5230.0020.0002] 
    // EGYPTIAN HIEROGLYPH M037

    uint32_t const cps[1] = { 0x131e6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5230), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_033)
{
    // 131E7 ; [.5231.0020.0002] 
    // EGYPTIAN HIEROGLYPH M038

    uint32_t const cps[1] = { 0x131e7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5231), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_034)
{
    // 131E8 ; [.5232.0020.0002] 
    // EGYPTIAN HIEROGLYPH M039

    uint32_t const cps[1] = { 0x131e8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5232), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_035)
{
    // 131E9 ; [.5233.0020.0002] 
    // EGYPTIAN HIEROGLYPH M040

    uint32_t const cps[1] = { 0x131e9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5233), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_036)
{
    // 131EA ; [.5234.0020.0002] 
    // EGYPTIAN HIEROGLYPH M040A

    uint32_t const cps[1] = { 0x131ea };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5234), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_037)
{
    // 131EB ; [.5235.0020.0002] 
    // EGYPTIAN HIEROGLYPH M041

    uint32_t const cps[1] = { 0x131eb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5235), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_038)
{
    // 131EC ; [.5236.0020.0002] 
    // EGYPTIAN HIEROGLYPH M042

    uint32_t const cps[1] = { 0x131ec };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5236), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_039)
{
    // 131ED ; [.5237.0020.0002] 
    // EGYPTIAN HIEROGLYPH M043

    uint32_t const cps[1] = { 0x131ed };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5237), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_040)
{
    // 131EE ; [.5238.0020.0002] 
    // EGYPTIAN HIEROGLYPH M044

    uint32_t const cps[1] = { 0x131ee };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5238), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_041)
{
    // 131EF ; [.5239.0020.0002] 
    // EGYPTIAN HIEROGLYPH N001

    uint32_t const cps[1] = { 0x131ef };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5239), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_042)
{
    // 131F0 ; [.523A.0020.0002] 
    // EGYPTIAN HIEROGLYPH N002

    uint32_t const cps[1] = { 0x131f0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x523a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_043)
{
    // 131F1 ; [.523B.0020.0002] 
    // EGYPTIAN HIEROGLYPH N003

    uint32_t const cps[1] = { 0x131f1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x523b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_044)
{
    // 131F2 ; [.523C.0020.0002] 
    // EGYPTIAN HIEROGLYPH N004

    uint32_t const cps[1] = { 0x131f2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x523c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_045)
{
    // 131F3 ; [.523D.0020.0002] 
    // EGYPTIAN HIEROGLYPH N005

    uint32_t const cps[1] = { 0x131f3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x523d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_046)
{
    // 131F4 ; [.523E.0020.0002] 
    // EGYPTIAN HIEROGLYPH N006

    uint32_t const cps[1] = { 0x131f4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x523e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_047)
{
    // 131F5 ; [.523F.0020.0002] 
    // EGYPTIAN HIEROGLYPH N007

    uint32_t const cps[1] = { 0x131f5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x523f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_048)
{
    // 131F6 ; [.5240.0020.0002] 
    // EGYPTIAN HIEROGLYPH N008

    uint32_t const cps[1] = { 0x131f6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5240), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_049)
{
    // 131F7 ; [.5241.0020.0002] 
    // EGYPTIAN HIEROGLYPH N009

    uint32_t const cps[1] = { 0x131f7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5241), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_050)
{
    // 131F8 ; [.5242.0020.0002] 
    // EGYPTIAN HIEROGLYPH N010

    uint32_t const cps[1] = { 0x131f8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5242), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_051)
{
    // 131F9 ; [.5243.0020.0002] 
    // EGYPTIAN HIEROGLYPH N011

    uint32_t const cps[1] = { 0x131f9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5243), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_052)
{
    // 131FA ; [.5244.0020.0002] 
    // EGYPTIAN HIEROGLYPH N012

    uint32_t const cps[1] = { 0x131fa };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5244), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_053)
{
    // 131FB ; [.5245.0020.0002] 
    // EGYPTIAN HIEROGLYPH N013

    uint32_t const cps[1] = { 0x131fb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5245), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_054)
{
    // 131FC ; [.5246.0020.0002] 
    // EGYPTIAN HIEROGLYPH N014

    uint32_t const cps[1] = { 0x131fc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5246), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_055)
{
    // 131FD ; [.5247.0020.0002] 
    // EGYPTIAN HIEROGLYPH N015

    uint32_t const cps[1] = { 0x131fd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5247), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_056)
{
    // 131FE ; [.5248.0020.0002] 
    // EGYPTIAN HIEROGLYPH N016

    uint32_t const cps[1] = { 0x131fe };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5248), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_057)
{
    // 131FF ; [.5249.0020.0002] 
    // EGYPTIAN HIEROGLYPH N017

    uint32_t const cps[1] = { 0x131ff };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5249), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_058)
{
    // 13200 ; [.524A.0020.0002] 
    // EGYPTIAN HIEROGLYPH N018

    uint32_t const cps[1] = { 0x13200 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x524a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_059)
{
    // 13201 ; [.524B.0020.0002] 
    // EGYPTIAN HIEROGLYPH N018A

    uint32_t const cps[1] = { 0x13201 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x524b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_060)
{
    // 13202 ; [.524C.0020.0002] 
    // EGYPTIAN HIEROGLYPH N018B

    uint32_t const cps[1] = { 0x13202 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x524c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_061)
{
    // 13203 ; [.524D.0020.0002] 
    // EGYPTIAN HIEROGLYPH N019

    uint32_t const cps[1] = { 0x13203 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x524d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_062)
{
    // 13204 ; [.524E.0020.0002] 
    // EGYPTIAN HIEROGLYPH N020

    uint32_t const cps[1] = { 0x13204 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x524e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_063)
{
    // 13205 ; [.524F.0020.0002] 
    // EGYPTIAN HIEROGLYPH N021

    uint32_t const cps[1] = { 0x13205 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x524f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_064)
{
    // 13206 ; [.5250.0020.0002] 
    // EGYPTIAN HIEROGLYPH N022

    uint32_t const cps[1] = { 0x13206 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5250), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_065)
{
    // 13207 ; [.5251.0020.0002] 
    // EGYPTIAN HIEROGLYPH N023

    uint32_t const cps[1] = { 0x13207 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5251), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_066)
{
    // 13208 ; [.5252.0020.0002] 
    // EGYPTIAN HIEROGLYPH N024

    uint32_t const cps[1] = { 0x13208 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5252), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_067)
{
    // 13209 ; [.5253.0020.0002] 
    // EGYPTIAN HIEROGLYPH N025

    uint32_t const cps[1] = { 0x13209 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5253), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_068)
{
    // 1320A ; [.5254.0020.0002] 
    // EGYPTIAN HIEROGLYPH N025A

    uint32_t const cps[1] = { 0x1320a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5254), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_069)
{
    // 1320B ; [.5255.0020.0002] 
    // EGYPTIAN HIEROGLYPH N026

    uint32_t const cps[1] = { 0x1320b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5255), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_070)
{
    // 1320C ; [.5256.0020.0002] 
    // EGYPTIAN HIEROGLYPH N027

    uint32_t const cps[1] = { 0x1320c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5256), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_071)
{
    // 1320D ; [.5257.0020.0002] 
    // EGYPTIAN HIEROGLYPH N028

    uint32_t const cps[1] = { 0x1320d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5257), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_072)
{
    // 1320E ; [.5258.0020.0002] 
    // EGYPTIAN HIEROGLYPH N029

    uint32_t const cps[1] = { 0x1320e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5258), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_073)
{
    // 1320F ; [.5259.0020.0002] 
    // EGYPTIAN HIEROGLYPH N030

    uint32_t const cps[1] = { 0x1320f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5259), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_074)
{
    // 13210 ; [.525A.0020.0002] 
    // EGYPTIAN HIEROGLYPH N031

    uint32_t const cps[1] = { 0x13210 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x525a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_075)
{
    // 13211 ; [.525B.0020.0002] 
    // EGYPTIAN HIEROGLYPH N032

    uint32_t const cps[1] = { 0x13211 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x525b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_076)
{
    // 13212 ; [.525C.0020.0002] 
    // EGYPTIAN HIEROGLYPH N033

    uint32_t const cps[1] = { 0x13212 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x525c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_077)
{
    // 13213 ; [.525D.0020.0002] 
    // EGYPTIAN HIEROGLYPH N033A

    uint32_t const cps[1] = { 0x13213 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x525d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_078)
{
    // 13214 ; [.525E.0020.0002] 
    // EGYPTIAN HIEROGLYPH N034

    uint32_t const cps[1] = { 0x13214 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x525e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_079)
{
    // 13215 ; [.525F.0020.0002] 
    // EGYPTIAN HIEROGLYPH N034A

    uint32_t const cps[1] = { 0x13215 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x525f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_080)
{
    // 13216 ; [.5260.0020.0002] 
    // EGYPTIAN HIEROGLYPH N035

    uint32_t const cps[1] = { 0x13216 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5260), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_081)
{
    // 13217 ; [.5261.0020.0002] 
    // EGYPTIAN HIEROGLYPH N035A

    uint32_t const cps[1] = { 0x13217 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5261), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_082)
{
    // 13218 ; [.5262.0020.0002] 
    // EGYPTIAN HIEROGLYPH N036

    uint32_t const cps[1] = { 0x13218 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5262), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_083)
{
    // 13219 ; [.5263.0020.0002] 
    // EGYPTIAN HIEROGLYPH N037

    uint32_t const cps[1] = { 0x13219 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5263), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_084)
{
    // 1321A ; [.5264.0020.0002] 
    // EGYPTIAN HIEROGLYPH N037A

    uint32_t const cps[1] = { 0x1321a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5264), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_085)
{
    // 1321B ; [.5265.0020.0002] 
    // EGYPTIAN HIEROGLYPH N038

    uint32_t const cps[1] = { 0x1321b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5265), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_086)
{
    // 1321C ; [.5266.0020.0002] 
    // EGYPTIAN HIEROGLYPH N039

    uint32_t const cps[1] = { 0x1321c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5266), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_087)
{
    // 1321D ; [.5267.0020.0002] 
    // EGYPTIAN HIEROGLYPH N040

    uint32_t const cps[1] = { 0x1321d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5267), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_088)
{
    // 1321E ; [.5268.0020.0002] 
    // EGYPTIAN HIEROGLYPH N041

    uint32_t const cps[1] = { 0x1321e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5268), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_089)
{
    // 1321F ; [.5269.0020.0002] 
    // EGYPTIAN HIEROGLYPH N042

    uint32_t const cps[1] = { 0x1321f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5269), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_090)
{
    // 13220 ; [.526A.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL001

    uint32_t const cps[1] = { 0x13220 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x526a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_091)
{
    // 13221 ; [.526B.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL002

    uint32_t const cps[1] = { 0x13221 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x526b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_092)
{
    // 13222 ; [.526C.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL003

    uint32_t const cps[1] = { 0x13222 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x526c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_093)
{
    // 13223 ; [.526D.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL004

    uint32_t const cps[1] = { 0x13223 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x526d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_094)
{
    // 13224 ; [.526E.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL005

    uint32_t const cps[1] = { 0x13224 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x526e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_095)
{
    // 13225 ; [.526F.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL005A

    uint32_t const cps[1] = { 0x13225 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x526f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_096)
{
    // 13226 ; [.5270.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL006

    uint32_t const cps[1] = { 0x13226 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5270), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_097)
{
    // 13227 ; [.5271.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL007

    uint32_t const cps[1] = { 0x13227 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5271), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_098)
{
    // 13228 ; [.5272.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL008

    uint32_t const cps[1] = { 0x13228 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5272), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_099)
{
    // 13229 ; [.5273.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL009

    uint32_t const cps[1] = { 0x13229 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5273), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_100)
{
    // 1322A ; [.5274.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL010

    uint32_t const cps[1] = { 0x1322a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5274), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_101)
{
    // 1322B ; [.5275.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL011

    uint32_t const cps[1] = { 0x1322b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5275), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_102)
{
    // 1322C ; [.5276.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL012

    uint32_t const cps[1] = { 0x1322c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5276), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_103)
{
    // 1322D ; [.5277.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL013

    uint32_t const cps[1] = { 0x1322d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5277), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_104)
{
    // 1322E ; [.5278.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL014

    uint32_t const cps[1] = { 0x1322e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5278), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_105)
{
    // 1322F ; [.5279.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL015

    uint32_t const cps[1] = { 0x1322f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5279), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_106)
{
    // 13230 ; [.527A.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL016

    uint32_t const cps[1] = { 0x13230 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x527a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_107)
{
    // 13231 ; [.527B.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL017

    uint32_t const cps[1] = { 0x13231 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x527b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_108)
{
    // 13232 ; [.527C.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL017A

    uint32_t const cps[1] = { 0x13232 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x527c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_109)
{
    // 13233 ; [.527D.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL018

    uint32_t const cps[1] = { 0x13233 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x527d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_110)
{
    // 13234 ; [.527E.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL019

    uint32_t const cps[1] = { 0x13234 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x527e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_111)
{
    // 13235 ; [.527F.0020.0002] 
    // EGYPTIAN HIEROGLYPH NL020

    uint32_t const cps[1] = { 0x13235 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x527f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_112)
{
    // 13236 ; [.5280.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU001

    uint32_t const cps[1] = { 0x13236 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5280), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_113)
{
    // 13237 ; [.5281.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU002

    uint32_t const cps[1] = { 0x13237 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5281), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_114)
{
    // 13238 ; [.5282.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU003

    uint32_t const cps[1] = { 0x13238 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5282), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_115)
{
    // 13239 ; [.5283.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU004

    uint32_t const cps[1] = { 0x13239 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5283), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_116)
{
    // 1323A ; [.5284.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU005

    uint32_t const cps[1] = { 0x1323a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5284), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_117)
{
    // 1323B ; [.5285.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU006

    uint32_t const cps[1] = { 0x1323b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5285), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_118)
{
    // 1323C ; [.5286.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU007

    uint32_t const cps[1] = { 0x1323c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5286), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_119)
{
    // 1323D ; [.5287.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU008

    uint32_t const cps[1] = { 0x1323d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5287), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_120)
{
    // 1323E ; [.5288.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU009

    uint32_t const cps[1] = { 0x1323e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5288), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_121)
{
    // 1323F ; [.5289.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU010

    uint32_t const cps[1] = { 0x1323f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5289), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_122)
{
    // 13240 ; [.528A.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU010A

    uint32_t const cps[1] = { 0x13240 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x528a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_123)
{
    // 13241 ; [.528B.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU011

    uint32_t const cps[1] = { 0x13241 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x528b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_124)
{
    // 13242 ; [.528C.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU011A

    uint32_t const cps[1] = { 0x13242 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x528c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_125)
{
    // 13243 ; [.528D.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU012

    uint32_t const cps[1] = { 0x13243 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x528d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_126)
{
    // 13244 ; [.528E.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU013

    uint32_t const cps[1] = { 0x13244 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x528e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_127)
{
    // 13245 ; [.528F.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU014

    uint32_t const cps[1] = { 0x13245 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x528f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_128)
{
    // 13246 ; [.5290.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU015

    uint32_t const cps[1] = { 0x13246 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5290), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_129)
{
    // 13247 ; [.5291.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU016

    uint32_t const cps[1] = { 0x13247 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5291), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_130)
{
    // 13248 ; [.5292.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU017

    uint32_t const cps[1] = { 0x13248 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5292), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_131)
{
    // 13249 ; [.5293.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU018

    uint32_t const cps[1] = { 0x13249 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5293), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_132)
{
    // 1324A ; [.5294.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU018A

    uint32_t const cps[1] = { 0x1324a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5294), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_133)
{
    // 1324B ; [.5295.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU019

    uint32_t const cps[1] = { 0x1324b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5295), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_134)
{
    // 1324C ; [.5296.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU020

    uint32_t const cps[1] = { 0x1324c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5296), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_135)
{
    // 1324D ; [.5297.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU021

    uint32_t const cps[1] = { 0x1324d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5297), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_136)
{
    // 1324E ; [.5298.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU022

    uint32_t const cps[1] = { 0x1324e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5298), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_137)
{
    // 1324F ; [.5299.0020.0002] 
    // EGYPTIAN HIEROGLYPH NU022A

    uint32_t const cps[1] = { 0x1324f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x5299), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_138)
{
    // 13250 ; [.529A.0020.0002] 
    // EGYPTIAN HIEROGLYPH O001

    uint32_t const cps[1] = { 0x13250 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x529a), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_139)
{
    // 13251 ; [.529B.0020.0002] 
    // EGYPTIAN HIEROGLYPH O001A

    uint32_t const cps[1] = { 0x13251 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x529b), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_140)
{
    // 13252 ; [.529C.0020.0002] 
    // EGYPTIAN HIEROGLYPH O002

    uint32_t const cps[1] = { 0x13252 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x529c), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_141)
{
    // 13253 ; [.529D.0020.0002] 
    // EGYPTIAN HIEROGLYPH O003

    uint32_t const cps[1] = { 0x13253 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x529d), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_142)
{
    // 13254 ; [.529E.0020.0002] 
    // EGYPTIAN HIEROGLYPH O004

    uint32_t const cps[1] = { 0x13254 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x529e), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_143)
{
    // 13255 ; [.529F.0020.0002] 
    // EGYPTIAN HIEROGLYPH O005

    uint32_t const cps[1] = { 0x13255 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x529f), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_144)
{
    // 13256 ; [.52A0.0020.0002] 
    // EGYPTIAN HIEROGLYPH O005A

    uint32_t const cps[1] = { 0x13256 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x52a0), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_145)
{
    // 13257 ; [.52A1.0020.0002] 
    // EGYPTIAN HIEROGLYPH O006

    uint32_t const cps[1] = { 0x13257 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x52a1), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_146)
{
    // 13258 ; [.52A2.0020.0002] 
    // EGYPTIAN HIEROGLYPH O006A

    uint32_t const cps[1] = { 0x13258 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x52a2), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_147)
{
    // 13259 ; [.52A3.0020.0002] 
    // EGYPTIAN HIEROGLYPH O006B

    uint32_t const cps[1] = { 0x13259 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x52a3), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_148)
{
    // 1325A ; [.52A4.0020.0002] 
    // EGYPTIAN HIEROGLYPH O006C

    uint32_t const cps[1] = { 0x1325a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x52a4), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_154_149)
{
    // 1325B ; [.52A5.0020.0002] 
    // EGYPTIAN HIEROGLYPH O006D

    uint32_t const cps[1] = { 0x1325b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x52a5), uint8_t(0x0), uint8_t(0x2)} };

    auto const multi_coll = boost::text::longest_collation(cps, cps + 1);
    auto const singleton_coll = boost::text::collation(cps[0]);

    EXPECT_FALSE(multi_coll.collation_elements_);
    EXPECT_EQ(multi_coll.match_length_, 0);

    EXPECT_TRUE(singleton_coll.collation_elements_);
    EXPECT_EQ(singleton_coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(singleton_coll.collation_elements_.begin(), singleton_coll.collation_elements_.end(), ces, ces + 1));
}

