
// Warning! This file is autogenerated.
#include <boost/text/collation_tailoring.hpp>
#include <boost/text/collate.hpp>
#include <boost/text/data/all.hpp>

#include <gtest/gtest.h>

using namespace boost::text;

auto const error = [](string const & s) { std::cout << s; };
auto const warning = [](string const & s) {};

tailored_collation_element_table const & table()
{
    static tailored_collation_element_table retval =
        make_tailored_collation_element_table(
            data::my::standard_collation_tailoring(),
            "my::standard_collation_tailoring()", error, warning);
    return retval;
}
TEST(tailoring, my_standard_000_000)
{
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1012, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1012, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1012, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1012, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1012, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1012, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1012, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1012, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1012, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1012, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1012, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1012, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1012, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1012, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1012, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1012, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1012, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1012, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1012, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1012, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1012, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1013, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1013, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1013, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1013, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1013, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1013, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1013, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1013, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1013, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1013, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1013, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1013, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1013, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1013, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1013, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1013, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1013, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1013, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1013, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1013, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1013, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1014, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1014, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1014, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1014, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1014, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1014, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1014, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1014, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1014, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1014, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1014, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1014, 0x103a},
        table(), collation_strength::secondary),
        0);
}

TEST(tailoring, my_standard_001_001)
{
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1014, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1014, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1014, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1014, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1014, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1014, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1014, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1014, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1014, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1015, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1015, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1015, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1015, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1015, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1015, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1015, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1015, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1015, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1015, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1015, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1015, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1015, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1015, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1015, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1015, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1015, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1015, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1015, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1015, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1016, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1016, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1016, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1016, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1016, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1016, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1016, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1016, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1016, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1016, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1016, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1016, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1016, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1016, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1016, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1016, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1016, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1016, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1016, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1016, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1016, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1017, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1017, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1017, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1017, 0x103a},
        table(), collation_strength::secondary),
        0);
}

TEST(tailoring, my_standard_001_002)
{
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1017, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1017, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1017, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1017, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1017, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1017, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1017, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1017, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1017, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1017, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1017, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1017, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1017, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1017, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1017, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1017, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1017, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1018, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1018, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1018, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1018, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1018, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1018, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1018, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1018, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1018, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1018, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1018, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1018, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1018, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1018, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1018, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1018, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1018, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1018, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1018, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1018, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1018, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1019, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1023, 0x1019, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1019, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1023, 0x1019, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1019, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1025, 0x1019, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1019, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1025, 0x1019, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1019, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1027, 0x1019, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1019, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1027, 0x1019, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1019, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1019, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1019, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1019, 0x103a},
        table(), collation_strength::secondary),
        0);
}

TEST(tailoring, my_standard_001_003)
{
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1019, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1019, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1019, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x1019, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x1019, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101a, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101a, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101a, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101a, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101a, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101a, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101a, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101a, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101a, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101a, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101a, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101a, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101a, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101a, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101a, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101a, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101a, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101a, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101a, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101a, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101a, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101b, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101b, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101b, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101b, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101b, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101b, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101b, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101b, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101b, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101b, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101b, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101b, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101b, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101b, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101b, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101b, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101b, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101b, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101b, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101b, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101b, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101c, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101c, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101c, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101c, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101c, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101c, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101c, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101c, 0x103a},
        table(), collation_strength::secondary),
        0);
}

TEST(tailoring, my_standard_001_004)
{
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101c, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101c, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101c, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101c, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101c, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101c, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101c, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101c, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101c, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101c, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101c, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101c, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101c, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101e, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101e, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101e, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101e, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101e, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101e, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101e, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101e, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101e, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101e, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101e, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101e, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101e, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101e, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101e, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101e, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101e, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101e, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101e, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101e, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101e, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101f, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1023, 0x101f, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101f, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1023, 0x101f, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101f, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1025, 0x101f, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101f, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1025, 0x101f, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101f, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1027, 0x101f, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101f, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1027, 0x101f, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101f, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1029, 0x101f, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101f, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1029, 0x101f, 0x103a},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101f, 0x1039},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x1039},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101f, 0x1039},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101f, 0x103a},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x1031, 0x102c, 0x101f, 0x103a},
        std::vector<uint32_t>{0x1029, 0x1031, 0x102c, 0x101f, 0x103a},
        table(), collation_strength::secondary),
        0);
}

TEST(tailoring, my_standard_001_005)
{
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1031, 0x102c, 0x1000, 0x103a, 0x1000, 0x103b},
        std::vector<uint32_t>{0x1031, 0x102c, 0x1000, 0x103a, 0x103b},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1031, 0x102c, 0x1000, 0x103a, 0x1000, 0x103b},
        std::vector<uint32_t>{0x1031, 0x102c, 0x1000, 0x103a, 0x103b},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1014, 0x103a, 0x1014, 0x102f, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1014, 0x103a, 0x102f, 0x1015, 0x103a},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1014, 0x103a, 0x1014, 0x102f, 0x1015, 0x103a},
        std::vector<uint32_t>{0x1014, 0x103a, 0x102f, 0x1015, 0x103a},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1031, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x1031, 0x103f},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1031, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x1031, 0x103f},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x102d, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x102d, 0x103f},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x102d, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x102d, 0x103f},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x102f, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x102f, 0x103f},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x102f, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x102f, 0x103f},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x1023, 0x103f},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x1023, 0x103f},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x1025, 0x103f},
        table(), collation_strength::tertiary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102f, 0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>{0x1025, 0x103f},
        table(), collation_strength::secondary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>(1, 0x103f),
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101e, 0x1039, 0x101e},
        std::vector<uint32_t>(1, 0x103f),
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1014, 0x103e, 0x102d, 0x102f, 0x1000, 0x103a},
        std::vector<uint32_t>(1, 0x104c),
        table(), collation_strength::secondary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1014, 0x103e, 0x102d, 0x102f, 0x1000, 0x103a},
        std::vector<uint32_t>(1, 0x104c),
        table(), collation_strength::primary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101b, 0x103d, 0x1031, 0x1037},
        std::vector<uint32_t>(1, 0x104d),
        table(), collation_strength::secondary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101b, 0x103d, 0x1031, 0x1037},
        std::vector<uint32_t>(1, 0x104d),
        table(), collation_strength::primary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101c, 0x100a, 0x103a, 0x1038, 0x1000, 0x1031, 0x102c, 0x1004, 0x103a, 0x1038},
        std::vector<uint32_t>{0x104e, 0x1004, 0x103a, 0x1038},
        table(), collation_strength::secondary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101c, 0x100a, 0x103a, 0x1038, 0x1000, 0x1031, 0x102c, 0x1004, 0x103a, 0x1038},
        std::vector<uint32_t>{0x104e, 0x1004, 0x103a, 0x1038},
        table(), collation_strength::primary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d},
        std::vector<uint32_t>(1, 0x104f),
        table(), collation_strength::secondary),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1021, 0x102d},
        std::vector<uint32_t>(1, 0x104f),
        table(), collation_strength::primary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101c, 0x1000, 0x103a, 0x101a, 0x102c},
        std::vector<uint32_t>{0x101c, 0x1000, 0x103a, 0x103b, 0x102c},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101c, 0x1000, 0x103a, 0x101a, 0x102c},
        std::vector<uint32_t>{0x101c, 0x1000, 0x103a, 0x103b, 0x102c},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101e, 0x1019, 0x102e},
        std::vector<uint32_t>{0x101e, 0x1039, 0x1019, 0x102e},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101e, 0x1019, 0x102e},
        std::vector<uint32_t>{0x101e, 0x1039, 0x1019, 0x102e},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1011, 0x1019, 0x1004, 0x103a, 0x1038},
        std::vector<uint32_t>{0x1011, 0x1039, 0x1019, 0x1004, 0x103a, 0x1038},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x1011, 0x1019, 0x1004, 0x103a, 0x1038},
        std::vector<uint32_t>{0x1011, 0x1039, 0x1019, 0x1004, 0x103a, 0x1038},
        table(), collation_strength::quaternary),
        0);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101c, 0x1000, 0x103a, 0x1018, 0x1000, 0x103a},
        std::vector<uint32_t>{0x101c, 0x1039, 0x1018, 0x1000, 0x103a},
        table(), collation_strength::identical),
        -1);
    EXPECT_EQ(collate(
        std::vector<uint32_t>{0x101c, 0x1000, 0x103a, 0x1018, 0x1000, 0x103a},
        std::vector<uint32_t>{0x101c, 0x1039, 0x1018, 0x1000, 0x103a},
        table(), collation_strength::quaternary),
        0);
}
