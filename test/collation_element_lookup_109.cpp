// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_109_000)
{
    // FB54  ; [.2374.0020.0017] 
    // ARABIC LETTER BEEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb54 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2374), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_001)
{
    // FB55  ; [.2374.0020.0018] 
    // ARABIC LETTER BEEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb55 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2374), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_002)
{
    // FB56  ; [.2375.0020.001A] 
    // ARABIC LETTER PEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb56 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2375), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_003)
{
    // FB57  ; [.2375.0020.0019] 
    // ARABIC LETTER PEH FINAL FORM

    uint32_t const cps[1] = { 0xfb57 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2375), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_004)
{
    // FB58  ; [.2375.0020.0017] 
    // ARABIC LETTER PEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb58 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2375), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_005)
{
    // FB59  ; [.2375.0020.0018] 
    // ARABIC LETTER PEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb59 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2375), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_006)
{
    // FB5A  ; [.2376.0020.001A] 
    // ARABIC LETTER BEHEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb5a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2376), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_007)
{
    // FB5B  ; [.2376.0020.0019] 
    // ARABIC LETTER BEHEH FINAL FORM

    uint32_t const cps[1] = { 0xfb5b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2376), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_008)
{
    // FB5C  ; [.2376.0020.0017] 
    // ARABIC LETTER BEHEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb5c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2376), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_009)
{
    // FB5D  ; [.2376.0020.0018] 
    // ARABIC LETTER BEHEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb5d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2376), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_010)
{
    // FB5E  ; [.2386.0020.001A] 
    // ARABIC LETTER TTEHEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb5e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2386), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_011)
{
    // FB5F  ; [.2386.0020.0019] 
    // ARABIC LETTER TTEHEH FINAL FORM

    uint32_t const cps[1] = { 0xfb5f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2386), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_012)
{
    // FB60  ; [.2386.0020.0017] 
    // ARABIC LETTER TTEHEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb60 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2386), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_013)
{
    // FB61  ; [.2386.0020.0018] 
    // ARABIC LETTER TTEHEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb61 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2386), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_014)
{
    // FB62  ; [.2389.0020.001A] 
    // ARABIC LETTER TEHEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb62 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2389), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_015)
{
    // FB63  ; [.2389.0020.0019] 
    // ARABIC LETTER TEHEH FINAL FORM

    uint32_t const cps[1] = { 0xfb63 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2389), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_016)
{
    // FB64  ; [.2389.0020.0017] 
    // ARABIC LETTER TEHEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb64 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2389), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_017)
{
    // FB65  ; [.2389.0020.0018] 
    // ARABIC LETTER TEHEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb65 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2389), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_018)
{
    // FB66  ; [.2385.0020.001A] 
    // ARABIC LETTER TTEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb66 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2385), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_019)
{
    // FB67  ; [.2385.0020.0019] 
    // ARABIC LETTER TTEH FINAL FORM

    uint32_t const cps[1] = { 0xfb67 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2385), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_020)
{
    // FB68  ; [.2385.0020.0017] 
    // ARABIC LETTER TTEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb68 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2385), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_021)
{
    // FB69  ; [.2385.0020.0018] 
    // ARABIC LETTER TTEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb69 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2385), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_022)
{
    // FB6A  ; [.23E1.0020.001A] 
    // ARABIC LETTER VEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb6a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e1), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_023)
{
    // FB6B  ; [.23E1.0020.0019] 
    // ARABIC LETTER VEH FINAL FORM

    uint32_t const cps[1] = { 0xfb6b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e1), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_024)
{
    // FB6C  ; [.23E1.0020.0017] 
    // ARABIC LETTER VEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb6c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e1), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_025)
{
    // FB6D  ; [.23E1.0020.0018] 
    // ARABIC LETTER VEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb6d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e1), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_026)
{
    // FB6E  ; [.23E4.0020.001A] 
    // ARABIC LETTER PEHEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb6e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e4), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_027)
{
    // FB6F  ; [.23E4.0020.0019] 
    // ARABIC LETTER PEHEH FINAL FORM

    uint32_t const cps[1] = { 0xfb6f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e4), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_028)
{
    // FB70  ; [.23E4.0020.0017] 
    // ARABIC LETTER PEHEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb70 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e4), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_029)
{
    // FB71  ; [.23E4.0020.0018] 
    // ARABIC LETTER PEHEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb71 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23e4), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_030)
{
    // FB72  ; [.238D.0020.001A] 
    // ARABIC LETTER DYEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb72 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238d), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_031)
{
    // FB73  ; [.238D.0020.0019] 
    // ARABIC LETTER DYEH FINAL FORM

    uint32_t const cps[1] = { 0xfb73 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_032)
{
    // FB74  ; [.238D.0020.0017] 
    // ARABIC LETTER DYEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb74 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238d), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_033)
{
    // FB75  ; [.238D.0020.0018] 
    // ARABIC LETTER DYEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb75 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238d), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_034)
{
    // FB76  ; [.238C.0020.001A] 
    // ARABIC LETTER NYEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb76 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_035)
{
    // FB77  ; [.238C.0020.0019] 
    // ARABIC LETTER NYEH FINAL FORM

    uint32_t const cps[1] = { 0xfb77 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_036)
{
    // FB78  ; [.238C.0020.0017] 
    // ARABIC LETTER NYEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb78 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238c), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_037)
{
    // FB79  ; [.238C.0020.0018] 
    // ARABIC LETTER NYEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb79 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238c), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_038)
{
    // FB7A  ; [.238E.0020.001A] 
    // ARABIC LETTER TCHEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb7a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238e), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_039)
{
    // FB7B  ; [.238E.0020.0019] 
    // ARABIC LETTER TCHEH FINAL FORM

    uint32_t const cps[1] = { 0xfb7b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238e), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_040)
{
    // FB7C  ; [.238E.0020.0017] 
    // ARABIC LETTER TCHEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb7c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238e), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_041)
{
    // FB7D  ; [.238E.0020.0018] 
    // ARABIC LETTER TCHEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb7d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x238e), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_042)
{
    // FB7E  ; [.2390.0020.001A] 
    // ARABIC LETTER TCHEHEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb7e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2390), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_043)
{
    // FB7F  ; [.2390.0020.0019] 
    // ARABIC LETTER TCHEHEH FINAL FORM

    uint32_t const cps[1] = { 0xfb7f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2390), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_044)
{
    // FB80  ; [.2390.0020.0017] 
    // ARABIC LETTER TCHEHEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb80 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2390), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_045)
{
    // FB81  ; [.2390.0020.0018] 
    // ARABIC LETTER TCHEHEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb81 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2390), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_046)
{
    // FB82  ; [.23A4.0020.001A] 
    // ARABIC LETTER DDAHAL ISOLATED FORM

    uint32_t const cps[1] = { 0xfb82 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23a4), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_047)
{
    // FB83  ; [.23A4.0020.0019] 
    // ARABIC LETTER DDAHAL FINAL FORM

    uint32_t const cps[1] = { 0xfb83 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23a4), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_048)
{
    // FB84  ; [.23A3.0020.001A] 
    // ARABIC LETTER DAHAL ISOLATED FORM

    uint32_t const cps[1] = { 0xfb84 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23a3), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_049)
{
    // FB85  ; [.23A3.0020.0019] 
    // ARABIC LETTER DAHAL FINAL FORM

    uint32_t const cps[1] = { 0xfb85 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23a3), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_050)
{
    // FB86  ; [.23A6.0020.001A] 
    // ARABIC LETTER DUL ISOLATED FORM

    uint32_t const cps[1] = { 0xfb86 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23a6), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_051)
{
    // FB87  ; [.23A6.0020.0019] 
    // ARABIC LETTER DUL FINAL FORM

    uint32_t const cps[1] = { 0xfb87 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23a6), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_052)
{
    // FB88  ; [.239F.0020.001A] 
    // ARABIC LETTER DDAL ISOLATED FORM

    uint32_t const cps[1] = { 0xfb88 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x239f), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_053)
{
    // FB89  ; [.239F.0020.0019] 
    // ARABIC LETTER DDAL FINAL FORM

    uint32_t const cps[1] = { 0xfb89 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x239f), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_054)
{
    // FB8A  ; [.23B5.0020.001A] 
    // ARABIC LETTER JEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb8a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23b5), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_055)
{
    // FB8B  ; [.23B5.0020.0019] 
    // ARABIC LETTER JEH FINAL FORM

    uint32_t const cps[1] = { 0xfb8b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23b5), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_056)
{
    // FB8C  ; [.23AE.0020.001A] 
    // ARABIC LETTER RREH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb8c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23ae), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_057)
{
    // FB8D  ; [.23AE.0020.0019] 
    // ARABIC LETTER RREH FINAL FORM

    uint32_t const cps[1] = { 0xfb8d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23ae), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_058)
{
    // FB8E  ; [.23EE.0020.001A] 
    // ARABIC LETTER KEHEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb8e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23ee), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_059)
{
    // FB8F  ; [.23EE.0020.0019] 
    // ARABIC LETTER KEHEH FINAL FORM

    uint32_t const cps[1] = { 0xfb8f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23ee), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_060)
{
    // FB90  ; [.23EE.0020.0017] 
    // ARABIC LETTER KEHEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb90 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23ee), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_061)
{
    // FB91  ; [.23EE.0020.0018] 
    // ARABIC LETTER KEHEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb91 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23ee), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_062)
{
    // FB92  ; [.23F6.0020.001A] 
    // ARABIC LETTER GAF ISOLATED FORM

    uint32_t const cps[1] = { 0xfb92 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f6), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_063)
{
    // FB93  ; [.23F6.0020.0019] 
    // ARABIC LETTER GAF FINAL FORM

    uint32_t const cps[1] = { 0xfb93 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f6), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_064)
{
    // FB94  ; [.23F6.0020.0017] 
    // ARABIC LETTER GAF INITIAL FORM

    uint32_t const cps[1] = { 0xfb94 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f6), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_065)
{
    // FB95  ; [.23F6.0020.0018] 
    // ARABIC LETTER GAF MEDIAL FORM

    uint32_t const cps[1] = { 0xfb95 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f6), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_066)
{
    // FB96  ; [.23FB.0020.001A] 
    // ARABIC LETTER GUEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb96 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23fb), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_067)
{
    // FB97  ; [.23FB.0020.0019] 
    // ARABIC LETTER GUEH FINAL FORM

    uint32_t const cps[1] = { 0xfb97 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23fb), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_068)
{
    // FB98  ; [.23FB.0020.0017] 
    // ARABIC LETTER GUEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb98 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23fb), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_069)
{
    // FB99  ; [.23FB.0020.0018] 
    // ARABIC LETTER GUEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb99 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23fb), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_070)
{
    // FB9A  ; [.23F9.0020.001A] 
    // ARABIC LETTER NGOEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfb9a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f9), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_071)
{
    // FB9B  ; [.23F9.0020.0019] 
    // ARABIC LETTER NGOEH FINAL FORM

    uint32_t const cps[1] = { 0xfb9b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f9), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_072)
{
    // FB9C  ; [.23F9.0020.0017] 
    // ARABIC LETTER NGOEH INITIAL FORM

    uint32_t const cps[1] = { 0xfb9c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f9), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_073)
{
    // FB9D  ; [.23F9.0020.0018] 
    // ARABIC LETTER NGOEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfb9d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f9), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_074)
{
    // FB9E  ; [.240E.0020.001A] 
    // ARABIC LETTER NOON GHUNNA ISOLATED FORM

    uint32_t const cps[1] = { 0xfb9e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x240e), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_075)
{
    // FB9F  ; [.240E.0020.0019] 
    // ARABIC LETTER NOON GHUNNA FINAL FORM

    uint32_t const cps[1] = { 0xfb9f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x240e), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_076)
{
    // FBA0  ; [.2410.0020.001A] 
    // ARABIC LETTER RNOON ISOLATED FORM

    uint32_t const cps[1] = { 0xfba0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2410), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_077)
{
    // FBA1  ; [.2410.0020.0019] 
    // ARABIC LETTER RNOON FINAL FORM

    uint32_t const cps[1] = { 0xfba1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2410), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_078)
{
    // FBA2  ; [.2410.0020.0017] 
    // ARABIC LETTER RNOON INITIAL FORM

    uint32_t const cps[1] = { 0xfba2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2410), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_079)
{
    // FBA3  ; [.2410.0020.0018] 
    // ARABIC LETTER RNOON MEDIAL FORM

    uint32_t const cps[1] = { 0xfba3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2410), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_080)
{
    // FBA4  ; [.241C.0020.001A][.0000.0083.001A] 
    // ARABIC LETTER HEH WITH YEH ABOVE ISOLATED FORM

    uint32_t const cps[1] = { 0xfba4 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x241c), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x63), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_081)
{
    // FBA5  ; [.241C.0020.0019][.0000.0083.0019] 
    // ARABIC LETTER HEH WITH YEH ABOVE FINAL FORM

    uint32_t const cps[1] = { 0xfba5 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x241c), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x0), uint8_t(0x63), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_082)
{
    // FBA6  ; [.2419.0020.001A] 
    // ARABIC LETTER HEH GOAL ISOLATED FORM

    uint32_t const cps[1] = { 0xfba6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2419), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_083)
{
    // FBA7  ; [.2419.0020.0019] 
    // ARABIC LETTER HEH GOAL FINAL FORM

    uint32_t const cps[1] = { 0xfba7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2419), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_084)
{
    // FBA8  ; [.2419.0020.0017] 
    // ARABIC LETTER HEH GOAL INITIAL FORM

    uint32_t const cps[1] = { 0xfba8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2419), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_085)
{
    // FBA9  ; [.2419.0020.0018] 
    // ARABIC LETTER HEH GOAL MEDIAL FORM

    uint32_t const cps[1] = { 0xfba9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2419), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_086)
{
    // FBAA  ; [.2418.0020.001A] 
    // ARABIC LETTER HEH DOACHASHMEE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbaa };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2418), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_087)
{
    // FBAB  ; [.2418.0020.0019] 
    // ARABIC LETTER HEH DOACHASHMEE FINAL FORM

    uint32_t const cps[1] = { 0xfbab };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2418), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_088)
{
    // FBAC  ; [.2418.0020.0017] 
    // ARABIC LETTER HEH DOACHASHMEE INITIAL FORM

    uint32_t const cps[1] = { 0xfbac };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2418), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_089)
{
    // FBAD  ; [.2418.0020.0018] 
    // ARABIC LETTER HEH DOACHASHMEE MEDIAL FORM

    uint32_t const cps[1] = { 0xfbad };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2418), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_090)
{
    // FBAE  ; [.243A.0020.001A] 
    // ARABIC LETTER YEH BARREE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbae };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x243a), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_091)
{
    // FBAF  ; [.243A.0020.0019] 
    // ARABIC LETTER YEH BARREE FINAL FORM

    uint32_t const cps[1] = { 0xfbaf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x243a), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_092)
{
    // FBB0  ; [.243A.0020.001A][.0000.0083.001A] 
    // ARABIC LETTER YEH BARREE WITH HAMZA ABOVE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbb0 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x243a), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x63), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_093)
{
    // FBB1  ; [.243A.0020.0019][.0000.0083.0019] 
    // ARABIC LETTER YEH BARREE WITH HAMZA ABOVE FINAL FORM

    uint32_t const cps[1] = { 0xfbb1 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x243a), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x0), uint8_t(0x63), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_094)
{
    // FBB2  ; [*0518.0020.0002] 
    // ARABIC SYMBOL DOT ABOVE

    uint32_t const cps[1] = { 0xfbb2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x518), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_095)
{
    // FBB3  ; [*0519.0020.0002] 
    // ARABIC SYMBOL DOT BELOW

    uint32_t const cps[1] = { 0xfbb3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x519), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_096)
{
    // FBB4  ; [*051A.0020.0002] 
    // ARABIC SYMBOL TWO DOTS ABOVE

    uint32_t const cps[1] = { 0xfbb4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x51a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_097)
{
    // FBB5  ; [*051B.0020.0002] 
    // ARABIC SYMBOL TWO DOTS BELOW

    uint32_t const cps[1] = { 0xfbb5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x51b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_098)
{
    // FBB6  ; [*051C.0020.0002] 
    // ARABIC SYMBOL THREE DOTS ABOVE

    uint32_t const cps[1] = { 0xfbb6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x51c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_099)
{
    // FBB7  ; [*051D.0020.0002] 
    // ARABIC SYMBOL THREE DOTS BELOW

    uint32_t const cps[1] = { 0xfbb7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x51d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_100)
{
    // FBB8  ; [*051E.0020.0002] 
    // ARABIC SYMBOL THREE DOTS POINTING DOWNWARDS ABOVE

    uint32_t const cps[1] = { 0xfbb8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x51e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_101)
{
    // FBB9  ; [*051F.0020.0002] 
    // ARABIC SYMBOL THREE DOTS POINTING DOWNWARDS BELOW

    uint32_t const cps[1] = { 0xfbb9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x51f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_102)
{
    // FBBA  ; [*0520.0020.0002] 
    // ARABIC SYMBOL FOUR DOTS ABOVE

    uint32_t const cps[1] = { 0xfbba };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x520), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_103)
{
    // FBBB  ; [*0521.0020.0002] 
    // ARABIC SYMBOL FOUR DOTS BELOW

    uint32_t const cps[1] = { 0xfbbb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x521), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_104)
{
    // FBBC  ; [*0522.0020.0002] 
    // ARABIC SYMBOL DOUBLE VERTICAL BAR BELOW

    uint32_t const cps[1] = { 0xfbbc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x522), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_105)
{
    // FBBD  ; [*0523.0020.0002] 
    // ARABIC SYMBOL TWO DOTS VERTICALLY ABOVE

    uint32_t const cps[1] = { 0xfbbd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x523), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_106)
{
    // FBBE  ; [*0524.0020.0002] 
    // ARABIC SYMBOL TWO DOTS VERTICALLY BELOW

    uint32_t const cps[1] = { 0xfbbe };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x524), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_107)
{
    // FBBF  ; [*0525.0020.0002] 
    // ARABIC SYMBOL RING

    uint32_t const cps[1] = { 0xfbbf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x525), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_108)
{
    // FBC0  ; [*0526.0020.0002] 
    // ARABIC SYMBOL SMALL TAH ABOVE

    uint32_t const cps[1] = { 0xfbc0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x526), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_109)
{
    // FBC1  ; [*0527.0020.0002] 
    // ARABIC SYMBOL SMALL TAH BELOW

    uint32_t const cps[1] = { 0xfbc1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x527), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_110)
{
    // FBD3  ; [.23F3.0020.001A] 
    // ARABIC LETTER NG ISOLATED FORM

    uint32_t const cps[1] = { 0xfbd3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f3), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_111)
{
    // FBD4  ; [.23F3.0020.0019] 
    // ARABIC LETTER NG FINAL FORM

    uint32_t const cps[1] = { 0xfbd4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f3), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_112)
{
    // FBD5  ; [.23F3.0020.0017] 
    // ARABIC LETTER NG INITIAL FORM

    uint32_t const cps[1] = { 0xfbd5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f3), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_113)
{
    // FBD6  ; [.23F3.0020.0018] 
    // ARABIC LETTER NG MEDIAL FORM

    uint32_t const cps[1] = { 0xfbd6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x23f3), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_114)
{
    // FBD7  ; [.2421.0020.001A] 
    // ARABIC LETTER U ISOLATED FORM

    uint32_t const cps[1] = { 0xfbd7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2421), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_115)
{
    // FBD8  ; [.2421.0020.0019] 
    // ARABIC LETTER U FINAL FORM

    uint32_t const cps[1] = { 0xfbd8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2421), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_116)
{
    // FBD9  ; [.2420.0020.001A] 
    // ARABIC LETTER OE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbd9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2420), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_117)
{
    // FBDA  ; [.2420.0020.0019] 
    // ARABIC LETTER OE FINAL FORM

    uint32_t const cps[1] = { 0xfbda };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2420), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_118)
{
    // FBDB  ; [.2422.0020.001A] 
    // ARABIC LETTER YU ISOLATED FORM

    uint32_t const cps[1] = { 0xfbdb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2422), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_119)
{
    // FBDC  ; [.2422.0020.0019] 
    // ARABIC LETTER YU FINAL FORM

    uint32_t const cps[1] = { 0xfbdc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2422), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_120)
{
    // FBDD  ; [.2421.0020.001A][.2363.0020.001A] 
    // ARABIC LETTER U WITH HAMZA ABOVE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbdd };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x2421), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2363), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_121)
{
    // FBDE  ; [.2425.0020.001A] 
    // ARABIC LETTER VE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbde };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2425), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_122)
{
    // FBDF  ; [.2425.0020.0019] 
    // ARABIC LETTER VE FINAL FORM

    uint32_t const cps[1] = { 0xfbdf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2425), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_123)
{
    // FBE0  ; [.241F.0020.001A] 
    // ARABIC LETTER KIRGHIZ OE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbe0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x241f), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_124)
{
    // FBE1  ; [.241F.0020.0019] 
    // ARABIC LETTER KIRGHIZ OE FINAL FORM

    uint32_t const cps[1] = { 0xfbe1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x241f), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_125)
{
    // FBE2  ; [.2423.0020.001A] 
    // ARABIC LETTER KIRGHIZ YU ISOLATED FORM

    uint32_t const cps[1] = { 0xfbe2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2423), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_126)
{
    // FBE3  ; [.2423.0020.0019] 
    // ARABIC LETTER KIRGHIZ YU FINAL FORM

    uint32_t const cps[1] = { 0xfbe3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2423), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_127)
{
    // FBE4  ; [.2430.0020.001A] 
    // ARABIC LETTER E ISOLATED FORM

    uint32_t const cps[1] = { 0xfbe4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2430), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_128)
{
    // FBE5  ; [.2430.0020.0019] 
    // ARABIC LETTER E FINAL FORM

    uint32_t const cps[1] = { 0xfbe5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2430), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_129)
{
    // FBE6  ; [.2430.0020.0017] 
    // ARABIC LETTER E INITIAL FORM

    uint32_t const cps[1] = { 0xfbe6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2430), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_130)
{
    // FBE7  ; [.2430.0020.0018] 
    // ARABIC LETTER E MEDIAL FORM

    uint32_t const cps[1] = { 0xfbe7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x2430), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_131)
{
    // FBE8  ; [.242B.0020.0017] 
    // ARABIC LETTER UIGHUR KAZAKH KIRGHIZ ALEF MAKSURA INITIAL FORM

    uint32_t const cps[1] = { 0xfbe8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_132)
{
    // FBE9  ; [.242B.0020.0018] 
    // ARABIC LETTER UIGHUR KAZAKH KIRGHIZ ALEF MAKSURA MEDIAL FORM

    uint32_t const cps[1] = { 0xfbe9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_109_133)
{
    // FBEA  ; [.236D.0020.001A][.2371.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF ISOLATED FORM

    uint32_t const cps[1] = { 0xfbea };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_134)
{
    // FBEB  ; [.236D.0020.0019][.2371.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF FINAL FORM

    uint32_t const cps[1] = { 0xfbeb };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_135)
{
    // FBEC  ; [.236D.0020.001A][.241C.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH AE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbec };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x241c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_136)
{
    // FBED  ; [.236D.0020.0019][.241C.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH AE FINAL FORM

    uint32_t const cps[1] = { 0xfbed };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x241c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_137)
{
    // FBEE  ; [.236D.0020.001A][.241D.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH WAW ISOLATED FORM

    uint32_t const cps[1] = { 0xfbee };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x241d), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_138)
{
    // FBEF  ; [.236D.0020.0019][.241D.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH WAW FINAL FORM

    uint32_t const cps[1] = { 0xfbef };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x241d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_139)
{
    // FBF0  ; [.236D.0020.001A][.2421.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH U ISOLATED FORM

    uint32_t const cps[1] = { 0xfbf0 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2421), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_140)
{
    // FBF1  ; [.236D.0020.0019][.2421.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH U FINAL FORM

    uint32_t const cps[1] = { 0xfbf1 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2421), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_141)
{
    // FBF2  ; [.236D.0020.001A][.2420.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH OE ISOLATED FORM

    uint32_t const cps[1] = { 0xfbf2 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2420), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_142)
{
    // FBF3  ; [.236D.0020.0019][.2420.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH OE FINAL FORM

    uint32_t const cps[1] = { 0xfbf3 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2420), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_143)
{
    // FBF4  ; [.236D.0020.001A][.2422.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YU ISOLATED FORM

    uint32_t const cps[1] = { 0xfbf4 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2422), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_144)
{
    // FBF5  ; [.236D.0020.0019][.2422.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YU FINAL FORM

    uint32_t const cps[1] = { 0xfbf5 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2422), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_145)
{
    // FBF6  ; [.236D.0020.001A][.2430.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH E ISOLATED FORM

    uint32_t const cps[1] = { 0xfbf6 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2430), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_146)
{
    // FBF7  ; [.236D.0020.0019][.2430.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH E FINAL FORM

    uint32_t const cps[1] = { 0xfbf7 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2430), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_147)
{
    // FBF8  ; [.236D.0020.0017][.2430.0020.0017] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH E INITIAL FORM

    uint32_t const cps[1] = { 0xfbf8 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2430), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_148)
{
    // FBF9  ; [.236D.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfbf9 };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_109_149)
{
    // FBFA  ; [.236D.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfbfa };
    // biased L2 weight
    boost::text::collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

