// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_146_000)
{
    // 121E8 ; [.4DD4.0020.0002] 
    // CUNEIFORM SIGN LAGAB TIMES U2 PLUS ASH

    uint32_t const cps[1] = { 0x121e8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dd4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_001)
{
    // 121E9 ; [.4DD5.0020.0002] 
    // CUNEIFORM SIGN LAGAB TIMES UD

    uint32_t const cps[1] = { 0x121e9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dd5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_002)
{
    // 121EA ; [.4DD6.0020.0002] 
    // CUNEIFORM SIGN LAGAB TIMES USH

    uint32_t const cps[1] = { 0x121ea };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dd6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_003)
{
    // 121EB ; [.4DD7.0020.0002] 
    // CUNEIFORM SIGN LAGAB SQUARED

    uint32_t const cps[1] = { 0x121eb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dd7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_004)
{
    // 121EC ; [.4DD8.0020.0002] 
    // CUNEIFORM SIGN LAGAR

    uint32_t const cps[1] = { 0x121ec };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dd8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_005)
{
    // 121ED ; [.4DD9.0020.0002] 
    // CUNEIFORM SIGN LAGAR TIMES SHE

    uint32_t const cps[1] = { 0x121ed };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dd9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_006)
{
    // 121EE ; [.4DDA.0020.0002] 
    // CUNEIFORM SIGN LAGAR TIMES SHE PLUS SUM

    uint32_t const cps[1] = { 0x121ee };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dda), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_007)
{
    // 121EF ; [.4DDB.0020.0002] 
    // CUNEIFORM SIGN LAGAR GUNU

    uint32_t const cps[1] = { 0x121ef };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4ddb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_008)
{
    // 121F0 ; [.4DDC.0020.0002] 
    // CUNEIFORM SIGN LAGAR GUNU OVER LAGAR GUNU SHE

    uint32_t const cps[1] = { 0x121f0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4ddc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_009)
{
    // 121F1 ; [.4DDD.0020.0002] 
    // CUNEIFORM SIGN LAHSHU

    uint32_t const cps[1] = { 0x121f1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4ddd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_010)
{
    // 121F2 ; [.4DDE.0020.0002] 
    // CUNEIFORM SIGN LAL

    uint32_t const cps[1] = { 0x121f2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dde), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_011)
{
    // 121F3 ; [.4DDF.0020.0002] 
    // CUNEIFORM SIGN LAL TIMES LAL

    uint32_t const cps[1] = { 0x121f3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4ddf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_012)
{
    // 121F4 ; [.4DE0.0020.0002] 
    // CUNEIFORM SIGN LAM

    uint32_t const cps[1] = { 0x121f4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_013)
{
    // 121F5 ; [.4DE1.0020.0002] 
    // CUNEIFORM SIGN LAM TIMES KUR

    uint32_t const cps[1] = { 0x121f5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_014)
{
    // 121F6 ; [.4DE2.0020.0002] 
    // CUNEIFORM SIGN LAM TIMES KUR PLUS RU

    uint32_t const cps[1] = { 0x121f6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_015)
{
    // 121F7 ; [.4DE3.0020.0002] 
    // CUNEIFORM SIGN LI

    uint32_t const cps[1] = { 0x121f7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_016)
{
    // 121F8 ; [.4DE4.0020.0002] 
    // CUNEIFORM SIGN LIL

    uint32_t const cps[1] = { 0x121f8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_017)
{
    // 121F9 ; [.4DE5.0020.0002] 
    // CUNEIFORM SIGN LIMMU2

    uint32_t const cps[1] = { 0x121f9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_018)
{
    // 121FA ; [.4DE6.0020.0002] 
    // CUNEIFORM SIGN LISH

    uint32_t const cps[1] = { 0x121fa };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_019)
{
    // 121FB ; [.4DE7.0020.0002] 
    // CUNEIFORM SIGN LU

    uint32_t const cps[1] = { 0x121fb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_020)
{
    // 121FC ; [.4DE8.0020.0002] 
    // CUNEIFORM SIGN LU TIMES BAD

    uint32_t const cps[1] = { 0x121fc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_021)
{
    // 121FD ; [.4DE9.0020.0002] 
    // CUNEIFORM SIGN LU2

    uint32_t const cps[1] = { 0x121fd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4de9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_022)
{
    // 121FE ; [.4DEA.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES AL

    uint32_t const cps[1] = { 0x121fe };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dea), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_023)
{
    // 121FF ; [.4DEB.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES BAD

    uint32_t const cps[1] = { 0x121ff };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4deb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_024)
{
    // 12200 ; [.4DEC.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES ESH2

    uint32_t const cps[1] = { 0x12200 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dec), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_025)
{
    // 12201 ; [.4DED.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES ESH2 TENU

    uint32_t const cps[1] = { 0x12201 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4ded), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_026)
{
    // 12202 ; [.4DEE.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES GAN2 TENU

    uint32_t const cps[1] = { 0x12202 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dee), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_027)
{
    // 12203 ; [.4DEF.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES HI TIMES BAD

    uint32_t const cps[1] = { 0x12203 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4def), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_028)
{
    // 12204 ; [.4DF0.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES IM

    uint32_t const cps[1] = { 0x12204 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_029)
{
    // 12205 ; [.4DF1.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES KAD2

    uint32_t const cps[1] = { 0x12205 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_030)
{
    // 12206 ; [.4DF2.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES KAD3

    uint32_t const cps[1] = { 0x12206 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_031)
{
    // 12207 ; [.4DF3.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES KAD3 PLUS ASH

    uint32_t const cps[1] = { 0x12207 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_032)
{
    // 12208 ; [.4DF4.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES KI

    uint32_t const cps[1] = { 0x12208 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_033)
{
    // 12209 ; [.4DF5.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES LA PLUS ASH

    uint32_t const cps[1] = { 0x12209 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_034)
{
    // 1220A ; [.4DF6.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES LAGAB

    uint32_t const cps[1] = { 0x1220a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_035)
{
    // 1220B ; [.4DF7.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES ME PLUS EN

    uint32_t const cps[1] = { 0x1220b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_036)
{
    // 1220C ; [.4DF8.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES NE

    uint32_t const cps[1] = { 0x1220c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_037)
{
    // 1220D ; [.4DF9.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES NU

    uint32_t const cps[1] = { 0x1220d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4df9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_038)
{
    // 1220E ; [.4DFA.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES SI PLUS ASH

    uint32_t const cps[1] = { 0x1220e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dfa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_039)
{
    // 1220F ; [.4DFB.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES SIK2 PLUS BU

    uint32_t const cps[1] = { 0x1220f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dfb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_040)
{
    // 12210 ; [.4DFC.0020.0002] 
    // CUNEIFORM SIGN LU2 TIMES TUG2

    uint32_t const cps[1] = { 0x12210 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dfc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_041)
{
    // 12211 ; [.4DFD.0020.0002] 
    // CUNEIFORM SIGN LU2 TENU

    uint32_t const cps[1] = { 0x12211 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dfd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_042)
{
    // 12212 ; [.4DFE.0020.0002] 
    // CUNEIFORM SIGN LU2 CROSSING LU2

    uint32_t const cps[1] = { 0x12212 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dfe), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_043)
{
    // 12213 ; [.4DFF.0020.0002] 
    // CUNEIFORM SIGN LU2 OPPOSING LU2

    uint32_t const cps[1] = { 0x12213 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4dff), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_044)
{
    // 12214 ; [.4E00.0020.0002] 
    // CUNEIFORM SIGN LU2 SQUARED

    uint32_t const cps[1] = { 0x12214 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e00), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_045)
{
    // 12215 ; [.4E01.0020.0002] 
    // CUNEIFORM SIGN LU2 SHESHIG

    uint32_t const cps[1] = { 0x12215 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e01), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_046)
{
    // 12216 ; [.4E02.0020.0002] 
    // CUNEIFORM SIGN LU3

    uint32_t const cps[1] = { 0x12216 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e02), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_047)
{
    // 12217 ; [.4E03.0020.0002] 
    // CUNEIFORM SIGN LUGAL

    uint32_t const cps[1] = { 0x12217 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e03), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_048)
{
    // 12218 ; [.4E04.0020.0002] 
    // CUNEIFORM SIGN LUGAL OVER LUGAL

    uint32_t const cps[1] = { 0x12218 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e04), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_049)
{
    // 12219 ; [.4E05.0020.0002] 
    // CUNEIFORM SIGN LUGAL OPPOSING LUGAL

    uint32_t const cps[1] = { 0x12219 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e05), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_050)
{
    // 1221A ; [.4E06.0020.0002] 
    // CUNEIFORM SIGN LUGAL SHESHIG

    uint32_t const cps[1] = { 0x1221a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e06), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_051)
{
    // 1221B ; [.4E07.0020.0002] 
    // CUNEIFORM SIGN LUH

    uint32_t const cps[1] = { 0x1221b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e07), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_052)
{
    // 1221C ; [.4E08.0020.0002] 
    // CUNEIFORM SIGN LUL

    uint32_t const cps[1] = { 0x1221c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e08), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_053)
{
    // 1221D ; [.4E09.0020.0002] 
    // CUNEIFORM SIGN LUM

    uint32_t const cps[1] = { 0x1221d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e09), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_054)
{
    // 1221E ; [.4E0A.0020.0002] 
    // CUNEIFORM SIGN LUM OVER LUM

    uint32_t const cps[1] = { 0x1221e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e0a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_055)
{
    // 1221F ; [.4E0B.0020.0002] 
    // CUNEIFORM SIGN LUM OVER LUM GAR OVER GAR

    uint32_t const cps[1] = { 0x1221f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e0b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_056)
{
    // 12220 ; [.4E0C.0020.0002] 
    // CUNEIFORM SIGN MA

    uint32_t const cps[1] = { 0x12220 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e0c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_057)
{
    // 12221 ; [.4E0D.0020.0002] 
    // CUNEIFORM SIGN MA TIMES TAK4

    uint32_t const cps[1] = { 0x12221 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e0d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_058)
{
    // 12222 ; [.4E0E.0020.0002] 
    // CUNEIFORM SIGN MA GUNU

    uint32_t const cps[1] = { 0x12222 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e0e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_059)
{
    // 12223 ; [.4E0F.0020.0002] 
    // CUNEIFORM SIGN MA2

    uint32_t const cps[1] = { 0x12223 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e0f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_060)
{
    // 12224 ; [.4E10.0020.0002] 
    // CUNEIFORM SIGN MAH

    uint32_t const cps[1] = { 0x12224 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e10), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_061)
{
    // 12225 ; [.4E11.0020.0002] 
    // CUNEIFORM SIGN MAR

    uint32_t const cps[1] = { 0x12225 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e11), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_062)
{
    // 12226 ; [.4E12.0020.0002] 
    // CUNEIFORM SIGN MASH

    uint32_t const cps[1] = { 0x12226 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e12), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_063)
{
    // 12227 ; [.4E13.0020.0002] 
    // CUNEIFORM SIGN MASH2

    uint32_t const cps[1] = { 0x12227 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e13), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_064)
{
    // 12228 ; [.4E14.0020.0002] 
    // CUNEIFORM SIGN ME

    uint32_t const cps[1] = { 0x12228 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e14), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_065)
{
    // 12229 ; [.4E15.0020.0002] 
    // CUNEIFORM SIGN MES

    uint32_t const cps[1] = { 0x12229 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e15), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_066)
{
    // 1222A ; [.4E16.0020.0002] 
    // CUNEIFORM SIGN MI

    uint32_t const cps[1] = { 0x1222a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e16), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_067)
{
    // 1222B ; [.4E17.0020.0002] 
    // CUNEIFORM SIGN MIN

    uint32_t const cps[1] = { 0x1222b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e17), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_068)
{
    // 1222C ; [.4E18.0020.0002] 
    // CUNEIFORM SIGN MU

    uint32_t const cps[1] = { 0x1222c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e18), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_069)
{
    // 1222D ; [.4E19.0020.0002] 
    // CUNEIFORM SIGN MU OVER MU

    uint32_t const cps[1] = { 0x1222d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e19), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_070)
{
    // 1222E ; [.4E1A.0020.0002] 
    // CUNEIFORM SIGN MUG

    uint32_t const cps[1] = { 0x1222e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e1a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_071)
{
    // 1222F ; [.4E1B.0020.0002] 
    // CUNEIFORM SIGN MUG GUNU

    uint32_t const cps[1] = { 0x1222f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e1b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_072)
{
    // 12230 ; [.4E1C.0020.0002] 
    // CUNEIFORM SIGN MUNSUB

    uint32_t const cps[1] = { 0x12230 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e1c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_073)
{
    // 12231 ; [.4E1D.0020.0002] 
    // CUNEIFORM SIGN MURGU2

    uint32_t const cps[1] = { 0x12231 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e1d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_074)
{
    // 12232 ; [.4E1E.0020.0002] 
    // CUNEIFORM SIGN MUSH

    uint32_t const cps[1] = { 0x12232 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e1e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_075)
{
    // 12233 ; [.4E1F.0020.0002] 
    // CUNEIFORM SIGN MUSH TIMES A

    uint32_t const cps[1] = { 0x12233 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e1f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_076)
{
    // 12234 ; [.4E20.0020.0002] 
    // CUNEIFORM SIGN MUSH TIMES KUR

    uint32_t const cps[1] = { 0x12234 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e20), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_077)
{
    // 12235 ; [.4E21.0020.0002] 
    // CUNEIFORM SIGN MUSH TIMES ZA

    uint32_t const cps[1] = { 0x12235 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e21), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_078)
{
    // 12236 ; [.4E22.0020.0002] 
    // CUNEIFORM SIGN MUSH OVER MUSH

    uint32_t const cps[1] = { 0x12236 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e22), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_079)
{
    // 12237 ; [.4E23.0020.0002] 
    // CUNEIFORM SIGN MUSH OVER MUSH TIMES A PLUS NA

    uint32_t const cps[1] = { 0x12237 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e23), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_080)
{
    // 12238 ; [.4E24.0020.0002] 
    // CUNEIFORM SIGN MUSH CROSSING MUSH

    uint32_t const cps[1] = { 0x12238 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e24), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_081)
{
    // 12239 ; [.4E25.0020.0002] 
    // CUNEIFORM SIGN MUSH3

    uint32_t const cps[1] = { 0x12239 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e25), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_082)
{
    // 1223A ; [.4E26.0020.0002] 
    // CUNEIFORM SIGN MUSH3 TIMES A

    uint32_t const cps[1] = { 0x1223a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e26), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_083)
{
    // 1223B ; [.4E27.0020.0002] 
    // CUNEIFORM SIGN MUSH3 TIMES A PLUS DI

    uint32_t const cps[1] = { 0x1223b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e27), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_084)
{
    // 1223C ; [.4E28.0020.0002] 
    // CUNEIFORM SIGN MUSH3 TIMES DI

    uint32_t const cps[1] = { 0x1223c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e28), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_085)
{
    // 1223D ; [.4E29.0020.0002] 
    // CUNEIFORM SIGN MUSH3 GUNU

    uint32_t const cps[1] = { 0x1223d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e29), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_086)
{
    // 1223E ; [.4E2A.0020.0002] 
    // CUNEIFORM SIGN NA

    uint32_t const cps[1] = { 0x1223e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e2a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_087)
{
    // 1223F ; [.4E2B.0020.0002] 
    // CUNEIFORM SIGN NA2

    uint32_t const cps[1] = { 0x1223f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e2b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_088)
{
    // 12240 ; [.4E2C.0020.0002] 
    // CUNEIFORM SIGN NAGA

    uint32_t const cps[1] = { 0x12240 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e2c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_089)
{
    // 12241 ; [.4E2D.0020.0002] 
    // CUNEIFORM SIGN NAGA INVERTED

    uint32_t const cps[1] = { 0x12241 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e2d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_090)
{
    // 12242 ; [.4E2E.0020.0002] 
    // CUNEIFORM SIGN NAGA TIMES SHU TENU

    uint32_t const cps[1] = { 0x12242 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e2e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_091)
{
    // 12243 ; [.4E2F.0020.0002] 
    // CUNEIFORM SIGN NAGA OPPOSING NAGA

    uint32_t const cps[1] = { 0x12243 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e2f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_092)
{
    // 12244 ; [.4E30.0020.0002] 
    // CUNEIFORM SIGN NAGAR

    uint32_t const cps[1] = { 0x12244 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e30), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_093)
{
    // 12245 ; [.4E31.0020.0002] 
    // CUNEIFORM SIGN NAM NUTILLU

    uint32_t const cps[1] = { 0x12245 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e31), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_094)
{
    // 12246 ; [.4E32.0020.0002] 
    // CUNEIFORM SIGN NAM

    uint32_t const cps[1] = { 0x12246 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e32), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_095)
{
    // 12247 ; [.4E33.0020.0002] 
    // CUNEIFORM SIGN NAM2

    uint32_t const cps[1] = { 0x12247 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e33), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_096)
{
    // 12248 ; [.4E34.0020.0002] 
    // CUNEIFORM SIGN NE

    uint32_t const cps[1] = { 0x12248 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e34), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_097)
{
    // 12249 ; [.4E35.0020.0002] 
    // CUNEIFORM SIGN NE TIMES A

    uint32_t const cps[1] = { 0x12249 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e35), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_098)
{
    // 1224A ; [.4E36.0020.0002] 
    // CUNEIFORM SIGN NE TIMES UD

    uint32_t const cps[1] = { 0x1224a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e36), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_099)
{
    // 1224B ; [.4E37.0020.0002] 
    // CUNEIFORM SIGN NE SHESHIG

    uint32_t const cps[1] = { 0x1224b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e37), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_100)
{
    // 1224C ; [.4E38.0020.0002] 
    // CUNEIFORM SIGN NI

    uint32_t const cps[1] = { 0x1224c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e38), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_101)
{
    // 1224D ; [.4E39.0020.0002] 
    // CUNEIFORM SIGN NI TIMES E

    uint32_t const cps[1] = { 0x1224d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e39), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_102)
{
    // 1224E ; [.4E3A.0020.0002] 
    // CUNEIFORM SIGN NI2

    uint32_t const cps[1] = { 0x1224e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e3a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_103)
{
    // 1224F ; [.4E3B.0020.0002] 
    // CUNEIFORM SIGN NIM

    uint32_t const cps[1] = { 0x1224f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e3b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_104)
{
    // 12250 ; [.4E3C.0020.0002] 
    // CUNEIFORM SIGN NIM TIMES GAN2 TENU

    uint32_t const cps[1] = { 0x12250 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e3c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_105)
{
    // 12251 ; [.4E3D.0020.0002] 
    // CUNEIFORM SIGN NIM TIMES GAR PLUS GAN2 TENU

    uint32_t const cps[1] = { 0x12251 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e3d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_106)
{
    // 12252 ; [.4E3E.0020.0002] 
    // CUNEIFORM SIGN NINDA2

    uint32_t const cps[1] = { 0x12252 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e3e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_107)
{
    // 12253 ; [.4E3F.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES AN

    uint32_t const cps[1] = { 0x12253 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e3f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_108)
{
    // 12254 ; [.4E40.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES ASH

    uint32_t const cps[1] = { 0x12254 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e40), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_109)
{
    // 12255 ; [.4E41.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES ASH PLUS ASH

    uint32_t const cps[1] = { 0x12255 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e41), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_110)
{
    // 12256 ; [.4E42.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES GUD

    uint32_t const cps[1] = { 0x12256 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e42), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_111)
{
    // 12257 ; [.4E43.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES ME PLUS GAN2 TENU

    uint32_t const cps[1] = { 0x12257 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e43), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_112)
{
    // 12258 ; [.4E44.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES NE

    uint32_t const cps[1] = { 0x12258 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e44), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_113)
{
    // 12259 ; [.4E45.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES NUN

    uint32_t const cps[1] = { 0x12259 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e45), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_114)
{
    // 1225A ; [.4E46.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES SHE

    uint32_t const cps[1] = { 0x1225a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e46), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_115)
{
    // 1225B ; [.4E47.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES SHE PLUS A AN

    uint32_t const cps[1] = { 0x1225b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e47), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_116)
{
    // 1225C ; [.4E48.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES SHE PLUS ASH

    uint32_t const cps[1] = { 0x1225c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e48), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_117)
{
    // 1225D ; [.4E49.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES SHE PLUS ASH PLUS ASH

    uint32_t const cps[1] = { 0x1225d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e49), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_118)
{
    // 1225E ; [.4E4A.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES U2 PLUS ASH

    uint32_t const cps[1] = { 0x1225e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e4a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_119)
{
    // 1225F ; [.4E4B.0020.0002] 
    // CUNEIFORM SIGN NINDA2 TIMES USH

    uint32_t const cps[1] = { 0x1225f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e4b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_120)
{
    // 12260 ; [.4E4C.0020.0002] 
    // CUNEIFORM SIGN NISAG

    uint32_t const cps[1] = { 0x12260 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e4c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_121)
{
    // 12261 ; [.4E4D.0020.0002] 
    // CUNEIFORM SIGN NU

    uint32_t const cps[1] = { 0x12261 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e4d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_122)
{
    // 12262 ; [.4E4E.0020.0002] 
    // CUNEIFORM SIGN NU11

    uint32_t const cps[1] = { 0x12262 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e4e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_123)
{
    // 12263 ; [.4E51.0020.0002] 
    // CUNEIFORM SIGN NUN

    uint32_t const cps[1] = { 0x12263 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e51), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_124)
{
    // 12264 ; [.4E52.0020.0002] 
    // CUNEIFORM SIGN NUN LAGAR TIMES GAR

    uint32_t const cps[1] = { 0x12264 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e52), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_125)
{
    // 12265 ; [.4E53.0020.0002] 
    // CUNEIFORM SIGN NUN LAGAR TIMES MASH

    uint32_t const cps[1] = { 0x12265 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e53), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_126)
{
    // 12266 ; [.4E54.0020.0002] 
    // CUNEIFORM SIGN NUN LAGAR TIMES SAL

    uint32_t const cps[1] = { 0x12266 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e54), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_127)
{
    // 12267 ; [.4E55.0020.0002] 
    // CUNEIFORM SIGN NUN LAGAR TIMES SAL OVER NUN LAGAR TIMES SAL

    uint32_t const cps[1] = { 0x12267 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e55), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_128)
{
    // 12268 ; [.4E56.0020.0002] 
    // CUNEIFORM SIGN NUN LAGAR TIMES USH

    uint32_t const cps[1] = { 0x12268 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e56), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_129)
{
    // 12269 ; [.4E57.0020.0002] 
    // CUNEIFORM SIGN NUN TENU

    uint32_t const cps[1] = { 0x12269 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e57), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_130)
{
    // 1226A ; [.4E58.0020.0002] 
    // CUNEIFORM SIGN NUN OVER NUN

    uint32_t const cps[1] = { 0x1226a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e58), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_131)
{
    // 1226B ; [.4E59.0020.0002] 
    // CUNEIFORM SIGN NUN CROSSING NUN

    uint32_t const cps[1] = { 0x1226b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e59), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_132)
{
    // 1226C ; [.4E5A.0020.0002] 
    // CUNEIFORM SIGN NUN CROSSING NUN LAGAR OVER LAGAR

    uint32_t const cps[1] = { 0x1226c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e5a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_133)
{
    // 1226D ; [.4E5B.0020.0002] 
    // CUNEIFORM SIGN NUNUZ

    uint32_t const cps[1] = { 0x1226d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e5b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_134)
{
    // 1226E ; [.4E5C.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES ASHGAB

    uint32_t const cps[1] = { 0x1226e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e5c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_135)
{
    // 1226F ; [.4E5D.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES BI

    uint32_t const cps[1] = { 0x1226f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e5d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_136)
{
    // 12270 ; [.4E5E.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES DUG

    uint32_t const cps[1] = { 0x12270 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e5e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_137)
{
    // 12271 ; [.4E5F.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES GUD

    uint32_t const cps[1] = { 0x12271 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e5f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_138)
{
    // 12272 ; [.4E60.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES IGI GUNU

    uint32_t const cps[1] = { 0x12272 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e60), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_139)
{
    // 12273 ; [.4E61.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES KAD3

    uint32_t const cps[1] = { 0x12273 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e61), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_140)
{
    // 12274 ; [.4E62.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES LA

    uint32_t const cps[1] = { 0x12274 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e62), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_141)
{
    // 12275 ; [.4E63.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES NE

    uint32_t const cps[1] = { 0x12275 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e63), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_142)
{
    // 12276 ; [.4E64.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES SILA3

    uint32_t const cps[1] = { 0x12276 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e64), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_143)
{
    // 12277 ; [.4E65.0020.0002] 
    // CUNEIFORM SIGN NUNUZ AB2 TIMES U2

    uint32_t const cps[1] = { 0x12277 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e65), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_144)
{
    // 12278 ; [.4E66.0020.0002] 
    // CUNEIFORM SIGN NUNUZ KISIM5 TIMES BI

    uint32_t const cps[1] = { 0x12278 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e66), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_145)
{
    // 12279 ; [.4E67.0020.0002] 
    // CUNEIFORM SIGN NUNUZ KISIM5 TIMES BI U

    uint32_t const cps[1] = { 0x12279 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e67), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_146)
{
    // 1227A ; [.4E68.0020.0002] 
    // CUNEIFORM SIGN PA

    uint32_t const cps[1] = { 0x1227a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e68), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_147)
{
    // 1227B ; [.4E69.0020.0002] 
    // CUNEIFORM SIGN PAD

    uint32_t const cps[1] = { 0x1227b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e69), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_148)
{
    // 1227C ; [.4E6A.0020.0002] 
    // CUNEIFORM SIGN PAN

    uint32_t const cps[1] = { 0x1227c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e6a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_146_149)
{
    // 1227D ; [.4E6B.0020.0002] 
    // CUNEIFORM SIGN PAP

    uint32_t const cps[1] = { 0x1227d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x4e6b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

