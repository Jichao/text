// Warning! This file is autogenerated.
#include <boost/text/case_mapping.hpp>

#include <gtest/gtest.h>


using namespace boost::text;

TEST(case_mapping, 000)
{
    std::array<uint32_t, 1> const from = {0x00DF};
    { // to_lower
        std::vector<uint32_t> lower({0x00DF});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0053, 0x0073});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0053, 0x0053});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 001)
{
    std::array<uint32_t, 1> const from = {0x0130};
    { // to_lower
        std::vector<uint32_t> lower({0x0069, 0x0307});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0130});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0130});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 002)
{
    std::array<uint32_t, 1> const from = {0xFB00};
    { // to_lower
        std::vector<uint32_t> lower({0xFB00});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0046, 0x0066});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0046, 0x0046});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 003)
{
    std::array<uint32_t, 1> const from = {0xFB01};
    { // to_lower
        std::vector<uint32_t> lower({0xFB01});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0046, 0x0069});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0046, 0x0049});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 004)
{
    std::array<uint32_t, 1> const from = {0xFB02};
    { // to_lower
        std::vector<uint32_t> lower({0xFB02});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0046, 0x006C});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0046, 0x004C});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 005)
{
    std::array<uint32_t, 1> const from = {0xFB03};
    { // to_lower
        std::vector<uint32_t> lower({0xFB03});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0046, 0x0066, 0x0069});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0046, 0x0046, 0x0049});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 006)
{
    std::array<uint32_t, 1> const from = {0xFB04};
    { // to_lower
        std::vector<uint32_t> lower({0xFB04});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0046, 0x0066, 0x006C});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0046, 0x0046, 0x004C});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 007)
{
    std::array<uint32_t, 1> const from = {0xFB05};
    { // to_lower
        std::vector<uint32_t> lower({0xFB05});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0053, 0x0074});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0053, 0x0054});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 008)
{
    std::array<uint32_t, 1> const from = {0xFB06};
    { // to_lower
        std::vector<uint32_t> lower({0xFB06});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0053, 0x0074});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0053, 0x0054});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 009)
{
    std::array<uint32_t, 1> const from = {0x0587};
    { // to_lower
        std::vector<uint32_t> lower({0x0587});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0535, 0x0582});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0535, 0x0552});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 010)
{
    std::array<uint32_t, 1> const from = {0xFB13};
    { // to_lower
        std::vector<uint32_t> lower({0xFB13});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0544, 0x0576});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0544, 0x0546});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 011)
{
    std::array<uint32_t, 1> const from = {0xFB14};
    { // to_lower
        std::vector<uint32_t> lower({0xFB14});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0544, 0x0565});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0544, 0x0535});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 012)
{
    std::array<uint32_t, 1> const from = {0xFB15};
    { // to_lower
        std::vector<uint32_t> lower({0xFB15});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0544, 0x056B});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0544, 0x053B});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 013)
{
    std::array<uint32_t, 1> const from = {0xFB16};
    { // to_lower
        std::vector<uint32_t> lower({0xFB16});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x054E, 0x0576});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x054E, 0x0546});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 014)
{
    std::array<uint32_t, 1> const from = {0xFB17};
    { // to_lower
        std::vector<uint32_t> lower({0xFB17});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0544, 0x056D});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0544, 0x053D});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 015)
{
    std::array<uint32_t, 1> const from = {0x0149};
    { // to_lower
        std::vector<uint32_t> lower({0x0149});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x02BC, 0x004E});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x02BC, 0x004E});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 016)
{
    std::array<uint32_t, 1> const from = {0x0390};
    { // to_lower
        std::vector<uint32_t> lower({0x0390});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0399, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 017)
{
    std::array<uint32_t, 1> const from = {0x03B0};
    { // to_lower
        std::vector<uint32_t> lower({0x03B0});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 018)
{
    std::array<uint32_t, 1> const from = {0x01F0};
    { // to_lower
        std::vector<uint32_t> lower({0x01F0});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x004A, 0x030C});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x004A, 0x030C});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 019)
{
    std::array<uint32_t, 1> const from = {0x1E96};
    { // to_lower
        std::vector<uint32_t> lower({0x1E96});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0048, 0x0331});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0048, 0x0331});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 020)
{
    std::array<uint32_t, 1> const from = {0x1E97};
    { // to_lower
        std::vector<uint32_t> lower({0x1E97});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0054, 0x0308});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0054, 0x0308});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 021)
{
    std::array<uint32_t, 1> const from = {0x1E98};
    { // to_lower
        std::vector<uint32_t> lower({0x1E98});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0057, 0x030A});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0057, 0x030A});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 022)
{
    std::array<uint32_t, 1> const from = {0x1E99};
    { // to_lower
        std::vector<uint32_t> lower({0x1E99});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0059, 0x030A});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0059, 0x030A});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 023)
{
    std::array<uint32_t, 1> const from = {0x1E9A};
    { // to_lower
        std::vector<uint32_t> lower({0x1E9A});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0041, 0x02BE});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0041, 0x02BE});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 024)
{
    std::array<uint32_t, 1> const from = {0x1F50};
    { // to_lower
        std::vector<uint32_t> lower({0x1F50});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0313});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0313});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 025)
{
    std::array<uint32_t, 1> const from = {0x1F52};
    { // to_lower
        std::vector<uint32_t> lower({0x1F52});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0313, 0x0300});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0313, 0x0300});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 026)
{
    std::array<uint32_t, 1> const from = {0x1F54};
    { // to_lower
        std::vector<uint32_t> lower({0x1F54});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0313, 0x0301});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0313, 0x0301});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 027)
{
    std::array<uint32_t, 1> const from = {0x1F56};
    { // to_lower
        std::vector<uint32_t> lower({0x1F56});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0313, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0313, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 028)
{
    std::array<uint32_t, 1> const from = {0x1FB6};
    { // to_lower
        std::vector<uint32_t> lower({0x1FB6});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0391, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0391, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 029)
{
    std::array<uint32_t, 1> const from = {0x1FC6};
    { // to_lower
        std::vector<uint32_t> lower({0x1FC6});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0397, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0397, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 030)
{
    std::array<uint32_t, 1> const from = {0x1FD2};
    { // to_lower
        std::vector<uint32_t> lower({0x1FD2});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0399, 0x0308, 0x0300});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0300});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 031)
{
    std::array<uint32_t, 1> const from = {0x1FD3};
    { // to_lower
        std::vector<uint32_t> lower({0x1FD3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0399, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 032)
{
    std::array<uint32_t, 1> const from = {0x1FD6};
    { // to_lower
        std::vector<uint32_t> lower({0x1FD6});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0399, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0399, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 033)
{
    std::array<uint32_t, 1> const from = {0x1FD7};
    { // to_lower
        std::vector<uint32_t> lower({0x1FD7});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0399, 0x0308, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 034)
{
    std::array<uint32_t, 1> const from = {0x1FE2};
    { // to_lower
        std::vector<uint32_t> lower({0x1FE2});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0308, 0x0300});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0300});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 035)
{
    std::array<uint32_t, 1> const from = {0x1FE3};
    { // to_lower
        std::vector<uint32_t> lower({0x1FE3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 036)
{
    std::array<uint32_t, 1> const from = {0x1FE4};
    { // to_lower
        std::vector<uint32_t> lower({0x1FE4});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A1, 0x0313});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A1, 0x0313});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 037)
{
    std::array<uint32_t, 1> const from = {0x1FE6};
    { // to_lower
        std::vector<uint32_t> lower({0x1FE6});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 038)
{
    std::array<uint32_t, 1> const from = {0x1FE7};
    { // to_lower
        std::vector<uint32_t> lower({0x1FE7});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A5, 0x0308, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 039)
{
    std::array<uint32_t, 1> const from = {0x1FF6};
    { // to_lower
        std::vector<uint32_t> lower({0x1FF6});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A9, 0x0342});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A9, 0x0342});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 040)
{
    std::array<uint32_t, 1> const from = {0x1F80};
    { // to_lower
        std::vector<uint32_t> lower({0x1F80});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F88});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F08, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 041)
{
    std::array<uint32_t, 1> const from = {0x1F81};
    { // to_lower
        std::vector<uint32_t> lower({0x1F81});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F89});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F09, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 042)
{
    std::array<uint32_t, 1> const from = {0x1F82};
    { // to_lower
        std::vector<uint32_t> lower({0x1F82});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8A});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0A, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 043)
{
    std::array<uint32_t, 1> const from = {0x1F83};
    { // to_lower
        std::vector<uint32_t> lower({0x1F83});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8B});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0B, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 044)
{
    std::array<uint32_t, 1> const from = {0x1F84};
    { // to_lower
        std::vector<uint32_t> lower({0x1F84});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8C});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0C, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 045)
{
    std::array<uint32_t, 1> const from = {0x1F85};
    { // to_lower
        std::vector<uint32_t> lower({0x1F85});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8D});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0D, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 046)
{
    std::array<uint32_t, 1> const from = {0x1F86};
    { // to_lower
        std::vector<uint32_t> lower({0x1F86});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8E});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0E, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 047)
{
    std::array<uint32_t, 1> const from = {0x1F87};
    { // to_lower
        std::vector<uint32_t> lower({0x1F87});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8F});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0F, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 048)
{
    std::array<uint32_t, 1> const from = {0x1F88};
    { // to_lower
        std::vector<uint32_t> lower({0x1F80});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F88});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F08, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 049)
{
    std::array<uint32_t, 1> const from = {0x1F89};
    { // to_lower
        std::vector<uint32_t> lower({0x1F81});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F89});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F09, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 050)
{
    std::array<uint32_t, 1> const from = {0x1F8A};
    { // to_lower
        std::vector<uint32_t> lower({0x1F82});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8A});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0A, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 051)
{
    std::array<uint32_t, 1> const from = {0x1F8B};
    { // to_lower
        std::vector<uint32_t> lower({0x1F83});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8B});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0B, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 052)
{
    std::array<uint32_t, 1> const from = {0x1F8C};
    { // to_lower
        std::vector<uint32_t> lower({0x1F84});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8C});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0C, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 053)
{
    std::array<uint32_t, 1> const from = {0x1F8D};
    { // to_lower
        std::vector<uint32_t> lower({0x1F85});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8D});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0D, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 054)
{
    std::array<uint32_t, 1> const from = {0x1F8E};
    { // to_lower
        std::vector<uint32_t> lower({0x1F86});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8E});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0E, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 055)
{
    std::array<uint32_t, 1> const from = {0x1F8F};
    { // to_lower
        std::vector<uint32_t> lower({0x1F87});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F8F});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F0F, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 056)
{
    std::array<uint32_t, 1> const from = {0x1F90};
    { // to_lower
        std::vector<uint32_t> lower({0x1F90});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F98});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F28, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 057)
{
    std::array<uint32_t, 1> const from = {0x1F91};
    { // to_lower
        std::vector<uint32_t> lower({0x1F91});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F99});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F29, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 058)
{
    std::array<uint32_t, 1> const from = {0x1F92};
    { // to_lower
        std::vector<uint32_t> lower({0x1F92});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9A});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2A, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 059)
{
    std::array<uint32_t, 1> const from = {0x1F93};
    { // to_lower
        std::vector<uint32_t> lower({0x1F93});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9B});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2B, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 060)
{
    std::array<uint32_t, 1> const from = {0x1F94};
    { // to_lower
        std::vector<uint32_t> lower({0x1F94});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9C});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2C, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 061)
{
    std::array<uint32_t, 1> const from = {0x1F95};
    { // to_lower
        std::vector<uint32_t> lower({0x1F95});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9D});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2D, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 062)
{
    std::array<uint32_t, 1> const from = {0x1F96};
    { // to_lower
        std::vector<uint32_t> lower({0x1F96});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9E});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2E, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 063)
{
    std::array<uint32_t, 1> const from = {0x1F97};
    { // to_lower
        std::vector<uint32_t> lower({0x1F97});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9F});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2F, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 064)
{
    std::array<uint32_t, 1> const from = {0x1F98};
    { // to_lower
        std::vector<uint32_t> lower({0x1F90});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F98});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F28, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 065)
{
    std::array<uint32_t, 1> const from = {0x1F99};
    { // to_lower
        std::vector<uint32_t> lower({0x1F91});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F99});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F29, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 066)
{
    std::array<uint32_t, 1> const from = {0x1F9A};
    { // to_lower
        std::vector<uint32_t> lower({0x1F92});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9A});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2A, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 067)
{
    std::array<uint32_t, 1> const from = {0x1F9B};
    { // to_lower
        std::vector<uint32_t> lower({0x1F93});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9B});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2B, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 068)
{
    std::array<uint32_t, 1> const from = {0x1F9C};
    { // to_lower
        std::vector<uint32_t> lower({0x1F94});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9C});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2C, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 069)
{
    std::array<uint32_t, 1> const from = {0x1F9D};
    { // to_lower
        std::vector<uint32_t> lower({0x1F95});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9D});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2D, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 070)
{
    std::array<uint32_t, 1> const from = {0x1F9E};
    { // to_lower
        std::vector<uint32_t> lower({0x1F96});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9E});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2E, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 071)
{
    std::array<uint32_t, 1> const from = {0x1F9F};
    { // to_lower
        std::vector<uint32_t> lower({0x1F97});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1F9F});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F2F, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 072)
{
    std::array<uint32_t, 1> const from = {0x1FA0};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA0});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FA8});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F68, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 073)
{
    std::array<uint32_t, 1> const from = {0x1FA1};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA1});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FA9});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F69, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 074)
{
    std::array<uint32_t, 1> const from = {0x1FA2};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA2});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAA});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6A, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 075)
{
    std::array<uint32_t, 1> const from = {0x1FA3};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAB});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6B, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 076)
{
    std::array<uint32_t, 1> const from = {0x1FA4};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA4});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6C, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 077)
{
    std::array<uint32_t, 1> const from = {0x1FA5};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA5});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAD});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6D, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 078)
{
    std::array<uint32_t, 1> const from = {0x1FA6};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA6});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAE});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6E, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 079)
{
    std::array<uint32_t, 1> const from = {0x1FA7};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA7});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAF});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6F, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 080)
{
    std::array<uint32_t, 1> const from = {0x1FA8};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA0});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FA8});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F68, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 081)
{
    std::array<uint32_t, 1> const from = {0x1FA9};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA1});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FA9});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F69, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 082)
{
    std::array<uint32_t, 1> const from = {0x1FAA};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA2});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAA});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6A, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 083)
{
    std::array<uint32_t, 1> const from = {0x1FAB};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAB});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6B, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 084)
{
    std::array<uint32_t, 1> const from = {0x1FAC};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA4});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6C, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 085)
{
    std::array<uint32_t, 1> const from = {0x1FAD};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA5});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAD});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6D, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 086)
{
    std::array<uint32_t, 1> const from = {0x1FAE};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA6});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAE});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6E, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 087)
{
    std::array<uint32_t, 1> const from = {0x1FAF};
    { // to_lower
        std::vector<uint32_t> lower({0x1FA7});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FAF});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1F6F, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 088)
{
    std::array<uint32_t, 1> const from = {0x1FB3};
    { // to_lower
        std::vector<uint32_t> lower({0x1FB3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FBC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0391, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 089)
{
    std::array<uint32_t, 1> const from = {0x1FBC};
    { // to_lower
        std::vector<uint32_t> lower({0x1FB3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FBC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0391, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 090)
{
    std::array<uint32_t, 1> const from = {0x1FC3};
    { // to_lower
        std::vector<uint32_t> lower({0x1FC3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FCC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0397, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 091)
{
    std::array<uint32_t, 1> const from = {0x1FCC};
    { // to_lower
        std::vector<uint32_t> lower({0x1FC3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FCC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0397, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 092)
{
    std::array<uint32_t, 1> const from = {0x1FF3};
    { // to_lower
        std::vector<uint32_t> lower({0x1FF3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FFC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A9, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 093)
{
    std::array<uint32_t, 1> const from = {0x1FFC};
    { // to_lower
        std::vector<uint32_t> lower({0x1FF3});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FFC});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A9, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 094)
{
    std::array<uint32_t, 1> const from = {0x1FB2};
    { // to_lower
        std::vector<uint32_t> lower({0x1FB2});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FBA, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1FBA, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 095)
{
    std::array<uint32_t, 1> const from = {0x1FB4};
    { // to_lower
        std::vector<uint32_t> lower({0x1FB4});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0386, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0386, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 096)
{
    std::array<uint32_t, 1> const from = {0x1FC2};
    { // to_lower
        std::vector<uint32_t> lower({0x1FC2});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FCA, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1FCA, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 097)
{
    std::array<uint32_t, 1> const from = {0x1FC4};
    { // to_lower
        std::vector<uint32_t> lower({0x1FC4});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0389, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0389, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 098)
{
    std::array<uint32_t, 1> const from = {0x1FF2};
    { // to_lower
        std::vector<uint32_t> lower({0x1FF2});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x1FFA, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x1FFA, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 099)
{
    std::array<uint32_t, 1> const from = {0x1FF4};
    { // to_lower
        std::vector<uint32_t> lower({0x1FF4});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x038F, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x038F, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 100)
{
    std::array<uint32_t, 1> const from = {0x1FB7};
    { // to_lower
        std::vector<uint32_t> lower({0x1FB7});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0391, 0x0342, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0391, 0x0342, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 101)
{
    std::array<uint32_t, 1> const from = {0x1FC7};
    { // to_lower
        std::vector<uint32_t> lower({0x1FC7});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x0397, 0x0342, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x0397, 0x0342, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 102)
{
    std::array<uint32_t, 1> const from = {0x1FF7};
    { // to_lower
        std::vector<uint32_t> lower({0x1FF7});
        std::vector<uint32_t> result;

        to_lower(from, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }
    { // to_title
        std::vector<uint32_t> title({0x03A9, 0x0342, 0x0345});
        std::vector<uint32_t> result;

        to_title(from, std::back_inserter(result));
        EXPECT_EQ(result, title);

    }
    { // to_upper
        std::vector<uint32_t> upper({0x03A9, 0x0342, 0x0399});
        std::vector<uint32_t> result;

        to_upper(from, std::back_inserter(result));
        EXPECT_EQ(result, upper);

    }

}

TEST(case_mapping, 103)
{
    std::array<uint32_t, 1> const from = {0x03A3};

}

TEST(case_mapping, 104)
{
    std::array<uint32_t, 1> const from = {0x0307};

}

TEST(case_mapping, 105)
{
    std::array<uint32_t, 1> const from = {0x0049};

}

TEST(case_mapping, 106)
{
    std::array<uint32_t, 1> const from = {0x004A};

}

TEST(case_mapping, 107)
{
    std::array<uint32_t, 1> const from = {0x012E};

}

TEST(case_mapping, 108)
{
    std::array<uint32_t, 1> const from = {0x00CC};

}

TEST(case_mapping, 109)
{
    std::array<uint32_t, 1> const from = {0x00CD};

}

TEST(case_mapping, 110)
{
    std::array<uint32_t, 1> const from = {0x0128};

}

TEST(case_mapping, 111)
{
    std::array<uint32_t, 1> const from = {0x0130};

}

TEST(case_mapping, 112)
{
    std::array<uint32_t, 1> const from = {0x0130};

}

TEST(case_mapping, 113)
{
    std::array<uint32_t, 1> const from = {0x0307};

}

TEST(case_mapping, 114)
{
    std::array<uint32_t, 1> const from = {0x0307};

}

TEST(case_mapping, 115)
{
    std::array<uint32_t, 1> const from = {0x0049};

}

TEST(case_mapping, 116)
{
    std::array<uint32_t, 1> const from = {0x0049};

}

TEST(case_mapping, 117)
{
    std::array<uint32_t, 1> const from = {0x0069};

}

TEST(case_mapping, 118)
{
    std::array<uint32_t, 1> const from = {0x0069};

}

