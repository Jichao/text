// Warning! This file is autogenerated.
#include <boost/text/case_mapping.hpp>

#include <gtest/gtest.h>


using namespace boost::text;

TEST(case_mapping, 0)
{
    {
        std::vector<uint32_t> lower({0x00DF});
        std::vector<uint32_t> upper({0x0053, 0x0053});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 1)
{
    {
        std::vector<uint32_t> lower({0x0069, 0x0307});
        std::vector<uint32_t> upper({0x0130});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 2)
{
    {
        std::vector<uint32_t> lower({0xFB00});
        std::vector<uint32_t> upper({0x0046, 0x0046});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 3)
{
    {
        std::vector<uint32_t> lower({0xFB01});
        std::vector<uint32_t> upper({0x0046, 0x0049});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 4)
{
    {
        std::vector<uint32_t> lower({0xFB02});
        std::vector<uint32_t> upper({0x0046, 0x004C});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 5)
{
    {
        std::vector<uint32_t> lower({0xFB03});
        std::vector<uint32_t> upper({0x0046, 0x0046, 0x0049});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 6)
{
    {
        std::vector<uint32_t> lower({0xFB04});
        std::vector<uint32_t> upper({0x0046, 0x0046, 0x004C});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 7)
{
    {
        std::vector<uint32_t> lower({0xFB05});
        std::vector<uint32_t> upper({0x0053, 0x0054});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 8)
{
    {
        std::vector<uint32_t> lower({0xFB06});
        std::vector<uint32_t> upper({0x0053, 0x0054});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 9)
{
    {
        std::vector<uint32_t> lower({0x0587});
        std::vector<uint32_t> upper({0x0535, 0x0552});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 10)
{
    {
        std::vector<uint32_t> lower({0xFB13});
        std::vector<uint32_t> upper({0x0544, 0x0546});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 11)
{
    {
        std::vector<uint32_t> lower({0xFB14});
        std::vector<uint32_t> upper({0x0544, 0x0535});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 12)
{
    {
        std::vector<uint32_t> lower({0xFB15});
        std::vector<uint32_t> upper({0x0544, 0x053B});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 13)
{
    {
        std::vector<uint32_t> lower({0xFB16});
        std::vector<uint32_t> upper({0x054E, 0x0546});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 14)
{
    {
        std::vector<uint32_t> lower({0xFB17});
        std::vector<uint32_t> upper({0x0544, 0x053D});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 15)
{
    {
        std::vector<uint32_t> lower({0x0149});
        std::vector<uint32_t> upper({0x02BC, 0x004E});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 16)
{
    {
        std::vector<uint32_t> lower({0x0390});
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 17)
{
    {
        std::vector<uint32_t> lower({0x03B0});
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 18)
{
    {
        std::vector<uint32_t> lower({0x01F0});
        std::vector<uint32_t> upper({0x004A, 0x030C});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 19)
{
    {
        std::vector<uint32_t> lower({0x1E96});
        std::vector<uint32_t> upper({0x0048, 0x0331});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 20)
{
    {
        std::vector<uint32_t> lower({0x1E97});
        std::vector<uint32_t> upper({0x0054, 0x0308});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 21)
{
    {
        std::vector<uint32_t> lower({0x1E98});
        std::vector<uint32_t> upper({0x0057, 0x030A});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 22)
{
    {
        std::vector<uint32_t> lower({0x1E99});
        std::vector<uint32_t> upper({0x0059, 0x030A});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 23)
{
    {
        std::vector<uint32_t> lower({0x1E9A});
        std::vector<uint32_t> upper({0x0041, 0x02BE});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 24)
{
    {
        std::vector<uint32_t> lower({0x1F50});
        std::vector<uint32_t> upper({0x03A5, 0x0313});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 25)
{
    {
        std::vector<uint32_t> lower({0x1F52});
        std::vector<uint32_t> upper({0x03A5, 0x0313, 0x0300});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 26)
{
    {
        std::vector<uint32_t> lower({0x1F54});
        std::vector<uint32_t> upper({0x03A5, 0x0313, 0x0301});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 27)
{
    {
        std::vector<uint32_t> lower({0x1F56});
        std::vector<uint32_t> upper({0x03A5, 0x0313, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 28)
{
    {
        std::vector<uint32_t> lower({0x1FB6});
        std::vector<uint32_t> upper({0x0391, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 29)
{
    {
        std::vector<uint32_t> lower({0x1FC6});
        std::vector<uint32_t> upper({0x0397, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 30)
{
    {
        std::vector<uint32_t> lower({0x1FD2});
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0300});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 31)
{
    {
        std::vector<uint32_t> lower({0x1FD3});
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 32)
{
    {
        std::vector<uint32_t> lower({0x1FD6});
        std::vector<uint32_t> upper({0x0399, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 33)
{
    {
        std::vector<uint32_t> lower({0x1FD7});
        std::vector<uint32_t> upper({0x0399, 0x0308, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 34)
{
    {
        std::vector<uint32_t> lower({0x1FE2});
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0300});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 35)
{
    {
        std::vector<uint32_t> lower({0x1FE3});
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0301});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 36)
{
    {
        std::vector<uint32_t> lower({0x1FE4});
        std::vector<uint32_t> upper({0x03A1, 0x0313});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 37)
{
    {
        std::vector<uint32_t> lower({0x1FE6});
        std::vector<uint32_t> upper({0x03A5, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 38)
{
    {
        std::vector<uint32_t> lower({0x1FE7});
        std::vector<uint32_t> upper({0x03A5, 0x0308, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 39)
{
    {
        std::vector<uint32_t> lower({0x1FF6});
        std::vector<uint32_t> upper({0x03A9, 0x0342});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 40)
{
    {
        std::vector<uint32_t> lower({0x1F80});
        std::vector<uint32_t> upper({0x1F08, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 41)
{
    {
        std::vector<uint32_t> lower({0x1F81});
        std::vector<uint32_t> upper({0x1F09, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 42)
{
    {
        std::vector<uint32_t> lower({0x1F82});
        std::vector<uint32_t> upper({0x1F0A, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 43)
{
    {
        std::vector<uint32_t> lower({0x1F83});
        std::vector<uint32_t> upper({0x1F0B, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 44)
{
    {
        std::vector<uint32_t> lower({0x1F84});
        std::vector<uint32_t> upper({0x1F0C, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 45)
{
    {
        std::vector<uint32_t> lower({0x1F85});
        std::vector<uint32_t> upper({0x1F0D, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 46)
{
    {
        std::vector<uint32_t> lower({0x1F86});
        std::vector<uint32_t> upper({0x1F0E, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 47)
{
    {
        std::vector<uint32_t> lower({0x1F87});
        std::vector<uint32_t> upper({0x1F0F, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 48)
{
    {
        std::vector<uint32_t> lower({0x1F80});
        std::vector<uint32_t> upper({0x1F08, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 49)
{
    {
        std::vector<uint32_t> lower({0x1F81});
        std::vector<uint32_t> upper({0x1F09, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 50)
{
    {
        std::vector<uint32_t> lower({0x1F82});
        std::vector<uint32_t> upper({0x1F0A, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 51)
{
    {
        std::vector<uint32_t> lower({0x1F83});
        std::vector<uint32_t> upper({0x1F0B, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 52)
{
    {
        std::vector<uint32_t> lower({0x1F84});
        std::vector<uint32_t> upper({0x1F0C, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 53)
{
    {
        std::vector<uint32_t> lower({0x1F85});
        std::vector<uint32_t> upper({0x1F0D, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 54)
{
    {
        std::vector<uint32_t> lower({0x1F86});
        std::vector<uint32_t> upper({0x1F0E, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 55)
{
    {
        std::vector<uint32_t> lower({0x1F87});
        std::vector<uint32_t> upper({0x1F0F, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 56)
{
    {
        std::vector<uint32_t> lower({0x1F90});
        std::vector<uint32_t> upper({0x1F28, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 57)
{
    {
        std::vector<uint32_t> lower({0x1F91});
        std::vector<uint32_t> upper({0x1F29, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 58)
{
    {
        std::vector<uint32_t> lower({0x1F92});
        std::vector<uint32_t> upper({0x1F2A, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 59)
{
    {
        std::vector<uint32_t> lower({0x1F93});
        std::vector<uint32_t> upper({0x1F2B, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 60)
{
    {
        std::vector<uint32_t> lower({0x1F94});
        std::vector<uint32_t> upper({0x1F2C, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 61)
{
    {
        std::vector<uint32_t> lower({0x1F95});
        std::vector<uint32_t> upper({0x1F2D, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 62)
{
    {
        std::vector<uint32_t> lower({0x1F96});
        std::vector<uint32_t> upper({0x1F2E, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 63)
{
    {
        std::vector<uint32_t> lower({0x1F97});
        std::vector<uint32_t> upper({0x1F2F, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 64)
{
    {
        std::vector<uint32_t> lower({0x1F90});
        std::vector<uint32_t> upper({0x1F28, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 65)
{
    {
        std::vector<uint32_t> lower({0x1F91});
        std::vector<uint32_t> upper({0x1F29, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 66)
{
    {
        std::vector<uint32_t> lower({0x1F92});
        std::vector<uint32_t> upper({0x1F2A, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 67)
{
    {
        std::vector<uint32_t> lower({0x1F93});
        std::vector<uint32_t> upper({0x1F2B, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 68)
{
    {
        std::vector<uint32_t> lower({0x1F94});
        std::vector<uint32_t> upper({0x1F2C, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 69)
{
    {
        std::vector<uint32_t> lower({0x1F95});
        std::vector<uint32_t> upper({0x1F2D, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 70)
{
    {
        std::vector<uint32_t> lower({0x1F96});
        std::vector<uint32_t> upper({0x1F2E, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 71)
{
    {
        std::vector<uint32_t> lower({0x1F97});
        std::vector<uint32_t> upper({0x1F2F, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 72)
{
    {
        std::vector<uint32_t> lower({0x1FA0});
        std::vector<uint32_t> upper({0x1F68, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 73)
{
    {
        std::vector<uint32_t> lower({0x1FA1});
        std::vector<uint32_t> upper({0x1F69, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 74)
{
    {
        std::vector<uint32_t> lower({0x1FA2});
        std::vector<uint32_t> upper({0x1F6A, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 75)
{
    {
        std::vector<uint32_t> lower({0x1FA3});
        std::vector<uint32_t> upper({0x1F6B, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 76)
{
    {
        std::vector<uint32_t> lower({0x1FA4});
        std::vector<uint32_t> upper({0x1F6C, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 77)
{
    {
        std::vector<uint32_t> lower({0x1FA5});
        std::vector<uint32_t> upper({0x1F6D, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 78)
{
    {
        std::vector<uint32_t> lower({0x1FA6});
        std::vector<uint32_t> upper({0x1F6E, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 79)
{
    {
        std::vector<uint32_t> lower({0x1FA7});
        std::vector<uint32_t> upper({0x1F6F, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 80)
{
    {
        std::vector<uint32_t> lower({0x1FA0});
        std::vector<uint32_t> upper({0x1F68, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 81)
{
    {
        std::vector<uint32_t> lower({0x1FA1});
        std::vector<uint32_t> upper({0x1F69, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 82)
{
    {
        std::vector<uint32_t> lower({0x1FA2});
        std::vector<uint32_t> upper({0x1F6A, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 83)
{
    {
        std::vector<uint32_t> lower({0x1FA3});
        std::vector<uint32_t> upper({0x1F6B, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 84)
{
    {
        std::vector<uint32_t> lower({0x1FA4});
        std::vector<uint32_t> upper({0x1F6C, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 85)
{
    {
        std::vector<uint32_t> lower({0x1FA5});
        std::vector<uint32_t> upper({0x1F6D, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 86)
{
    {
        std::vector<uint32_t> lower({0x1FA6});
        std::vector<uint32_t> upper({0x1F6E, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 87)
{
    {
        std::vector<uint32_t> lower({0x1FA7});
        std::vector<uint32_t> upper({0x1F6F, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 88)
{
    {
        std::vector<uint32_t> lower({0x1FB3});
        std::vector<uint32_t> upper({0x0391, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 89)
{
    {
        std::vector<uint32_t> lower({0x1FB3});
        std::vector<uint32_t> upper({0x0391, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 90)
{
    {
        std::vector<uint32_t> lower({0x1FC3});
        std::vector<uint32_t> upper({0x0397, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 91)
{
    {
        std::vector<uint32_t> lower({0x1FC3});
        std::vector<uint32_t> upper({0x0397, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 92)
{
    {
        std::vector<uint32_t> lower({0x1FF3});
        std::vector<uint32_t> upper({0x03A9, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 93)
{
    {
        std::vector<uint32_t> lower({0x1FF3});
        std::vector<uint32_t> upper({0x03A9, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 94)
{
    {
        std::vector<uint32_t> lower({0x1FB2});
        std::vector<uint32_t> upper({0x1FBA, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 95)
{
    {
        std::vector<uint32_t> lower({0x1FB4});
        std::vector<uint32_t> upper({0x0386, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 96)
{
    {
        std::vector<uint32_t> lower({0x1FC2});
        std::vector<uint32_t> upper({0x1FCA, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 97)
{
    {
        std::vector<uint32_t> lower({0x1FC4});
        std::vector<uint32_t> upper({0x0389, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 98)
{
    {
        std::vector<uint32_t> lower({0x1FF2});
        std::vector<uint32_t> upper({0x1FFA, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 99)
{
    {
        std::vector<uint32_t> lower({0x1FF4});
        std::vector<uint32_t> upper({0x038F, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 100)
{
    {
        std::vector<uint32_t> lower({0x1FB7});
        std::vector<uint32_t> upper({0x0391, 0x0342, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 101)
{
    {
        std::vector<uint32_t> lower({0x1FC7});
        std::vector<uint32_t> upper({0x0397, 0x0342, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

TEST(case_mapping, 102)
{
    {
        std::vector<uint32_t> lower({0x1FF7});
        std::vector<uint32_t> upper({0x03A9, 0x0342, 0x0399});
        std::vector<uint32_t> result;

        result.clear();
        to_upper(lower, std::back_inserter(result));
        EXPECT_EQ(result, upper);
        result.clear();
        to_lower(upper, std::back_inserter(result));
        EXPECT_EQ(result, lower);

    }

}

