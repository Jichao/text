// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_110_000)
{
    // FBFB  ; [.236D.0020.0017][.242B.0020.0017] 
    // ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA INITIAL FORM

    uint32_t const cps[1] = { 0xfbfb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_001)
{
    // FBFC  ; [.242D.0020.001A] 
    // ARABIC LETTER FARSI YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfbfc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x242d), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_110_002)
{
    // FBFD  ; [.242D.0020.0019] 
    // ARABIC LETTER FARSI YEH FINAL FORM

    uint32_t const cps[1] = { 0xfbfd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x242d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_110_003)
{
    // FBFE  ; [.242D.0020.0017] 
    // ARABIC LETTER FARSI YEH INITIAL FORM

    uint32_t const cps[1] = { 0xfbfe };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x242d), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_110_004)
{
    // FBFF  ; [.242D.0020.0018] 
    // ARABIC LETTER FARSI YEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfbff };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x242d), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_110_005)
{
    // FC00  ; [.236D.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc00 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_006)
{
    // FC01  ; [.236D.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc01 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_007)
{
    // FC02  ; [.236D.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc02 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_008)
{
    // FC03  ; [.236D.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc03 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_009)
{
    // FC04  ; [.236D.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc04 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_010)
{
    // FC05  ; [.2373.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE BEH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc05 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_011)
{
    // FC06  ; [.2373.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE BEH WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc06 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_012)
{
    // FC07  ; [.2373.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE BEH WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc07 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_013)
{
    // FC08  ; [.2373.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE BEH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc08 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_014)
{
    // FC09  ; [.2373.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE BEH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc09 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_015)
{
    // FC0A  ; [.2373.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE BEH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc0a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_016)
{
    // FC0B  ; [.2383.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE TEH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc0b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_017)
{
    // FC0C  ; [.2383.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE TEH WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc0c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_018)
{
    // FC0D  ; [.2383.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE TEH WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc0d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_019)
{
    // FC0E  ; [.2383.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE TEH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc0e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_020)
{
    // FC0F  ; [.2383.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE TEH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc0f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_021)
{
    // FC10  ; [.2383.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE TEH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc10 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_022)
{
    // FC11  ; [.2384.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE THEH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc11 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_023)
{
    // FC12  ; [.2384.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE THEH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc12 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_024)
{
    // FC13  ; [.2384.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE THEH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc13 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_025)
{
    // FC14  ; [.2384.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE THEH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc14 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_026)
{
    // FC15  ; [.238B.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE JEEM WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc15 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_027)
{
    // FC16  ; [.238B.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE JEEM WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc16 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_028)
{
    // FC17  ; [.2392.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE HAH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc17 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_029)
{
    // FC18  ; [.2392.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE HAH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc18 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_030)
{
    // FC19  ; [.2393.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE KHAH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc19 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_031)
{
    // FC1A  ; [.2393.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE KHAH WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc1a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_032)
{
    // FC1B  ; [.2393.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE KHAH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc1b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_033)
{
    // FC1C  ; [.23BF.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE SEEN WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc1c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_034)
{
    // FC1D  ; [.23BF.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE SEEN WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc1d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_035)
{
    // FC1E  ; [.23BF.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE SEEN WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc1e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_036)
{
    // FC1F  ; [.23BF.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE SEEN WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc1f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_037)
{
    // FC20  ; [.23CA.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE SAD WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc20 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_038)
{
    // FC21  ; [.23CA.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE SAD WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc21 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_039)
{
    // FC22  ; [.23CB.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE DAD WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc22 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_040)
{
    // FC23  ; [.23CB.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE DAD WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc23 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_041)
{
    // FC24  ; [.23CB.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE DAD WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc24 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_042)
{
    // FC25  ; [.23CB.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE DAD WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc25 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_043)
{
    // FC26  ; [.23D0.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE TAH WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc26 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_044)
{
    // FC27  ; [.23D0.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE TAH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc27 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_045)
{
    // FC28  ; [.23D1.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE ZAH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc28 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d1), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_046)
{
    // FC29  ; [.23D4.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE AIN WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc29 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_047)
{
    // FC2A  ; [.23D4.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE AIN WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc2a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_048)
{
    // FC2B  ; [.23D5.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE GHAIN WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc2b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_049)
{
    // FC2C  ; [.23D5.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE GHAIN WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc2c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_050)
{
    // FC2D  ; [.23DC.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE FEH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc2d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_051)
{
    // FC2E  ; [.23DC.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE FEH WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc2e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_052)
{
    // FC2F  ; [.23DC.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE FEH WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc2f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_053)
{
    // FC30  ; [.23DC.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE FEH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc30 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_054)
{
    // FC31  ; [.23DC.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE FEH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc31 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_055)
{
    // FC32  ; [.23DC.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE FEH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc32 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_056)
{
    // FC33  ; [.23E8.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE QAF WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc33 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_057)
{
    // FC34  ; [.23E8.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE QAF WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc34 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_058)
{
    // FC35  ; [.23E8.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE QAF WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc35 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_059)
{
    // FC36  ; [.23E8.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE QAF WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc36 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_060)
{
    // FC37  ; [.23ED.0020.001A][.2371.0020.001A] 
    // ARABIC LIGATURE KAF WITH ALEF ISOLATED FORM

    uint32_t const cps[1] = { 0xfc37 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_061)
{
    // FC38  ; [.23ED.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE KAF WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc38 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_062)
{
    // FC39  ; [.23ED.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE KAF WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc39 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_063)
{
    // FC3A  ; [.23ED.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE KAF WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc3a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_064)
{
    // FC3B  ; [.23ED.0020.001A][.2402.0020.001A] 
    // ARABIC LIGATURE KAF WITH LAM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc3b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_065)
{
    // FC3C  ; [.23ED.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE KAF WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc3c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_066)
{
    // FC3D  ; [.23ED.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE KAF WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc3d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_067)
{
    // FC3E  ; [.23ED.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE KAF WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc3e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_068)
{
    // FC3F  ; [.2402.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE LAM WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc3f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_069)
{
    // FC40  ; [.2402.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE LAM WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc40 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_070)
{
    // FC41  ; [.2402.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE LAM WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc41 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_071)
{
    // FC42  ; [.2402.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE LAM WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc42 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_072)
{
    // FC43  ; [.2402.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE LAM WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc43 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_073)
{
    // FC44  ; [.2402.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE LAM WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc44 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_074)
{
    // FC45  ; [.2409.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE MEEM WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc45 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_075)
{
    // FC46  ; [.2409.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE MEEM WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc46 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_076)
{
    // FC47  ; [.2409.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE MEEM WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc47 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_077)
{
    // FC48  ; [.2409.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE MEEM WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc48 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_078)
{
    // FC49  ; [.2409.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE MEEM WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc49 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_079)
{
    // FC4A  ; [.2409.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE MEEM WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc4a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_080)
{
    // FC4B  ; [.240D.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE NOON WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc4b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_081)
{
    // FC4C  ; [.240D.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE NOON WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc4c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_082)
{
    // FC4D  ; [.240D.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE NOON WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc4d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_083)
{
    // FC4E  ; [.240D.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE NOON WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc4e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_084)
{
    // FC4F  ; [.240D.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE NOON WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc4f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_085)
{
    // FC50  ; [.240D.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE NOON WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc50 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_086)
{
    // FC51  ; [.2417.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE HEH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc51 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_087)
{
    // FC52  ; [.2417.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE HEH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc52 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_088)
{
    // FC53  ; [.2417.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE HEH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc53 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_089)
{
    // FC54  ; [.2417.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE HEH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc54 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_090)
{
    // FC55  ; [.242C.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE YEH WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc55 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_091)
{
    // FC56  ; [.242C.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE YEH WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc56 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_092)
{
    // FC57  ; [.242C.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE YEH WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc57 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_093)
{
    // FC58  ; [.242C.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE YEH WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfc58 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_094)
{
    // FC59  ; [.242C.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE YEH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc59 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_095)
{
    // FC5A  ; [.242C.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE YEH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfc5a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_096)
{
    // FC5B  ; [.239E.0020.001A][.0000.0098.001A] 
    // ARABIC LIGATURE THAL WITH SUPERSCRIPT ALEF ISOLATED FORM

    uint32_t const cps[1] = { 0xfc5b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x239e), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x78), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_097)
{
    // FC5C  ; [.23AC.0020.001A][.0000.0098.001A] 
    // ARABIC LIGATURE REH WITH SUPERSCRIPT ALEF ISOLATED FORM

    uint32_t const cps[1] = { 0xfc5c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x78), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_098)
{
    // FC5D  ; [.242B.0020.001A][.0000.0098.001A] 
    // ARABIC LIGATURE ALEF MAKSURA WITH SUPERSCRIPT ALEF ISOLATED FORM

    uint32_t const cps[1] = { 0xfc5d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x78), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_099)
{
    // FC5E  ; [.0000.0070.001A][.0000.0080.001A] 
    // ARABIC LIGATURE SHADDA WITH DAMMATAN ISOLATED FORM

    uint32_t const cps[1] = { 0xfc5e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x50), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x60), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_100)
{
    // FC5F  ; [.0000.0073.001A][.0000.0080.001A] 
    // ARABIC LIGATURE SHADDA WITH KASRATAN ISOLATED FORM

    uint32_t const cps[1] = { 0xfc5f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x53), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x60), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_101)
{
    // FC60  ; [.0000.0076.001A][.0000.0080.001A] 
    // ARABIC LIGATURE SHADDA WITH FATHA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc60 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x56), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x60), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_102)
{
    // FC61  ; [.0000.007A.001A][.0000.0080.001A] 
    // ARABIC LIGATURE SHADDA WITH DAMMA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc61 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x5a), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x60), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_103)
{
    // FC62  ; [.0000.007D.001A][.0000.0080.001A] 
    // ARABIC LIGATURE SHADDA WITH KASRA ISOLATED FORM

    uint32_t const cps[1] = { 0xfc62 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x5d), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x60), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_104)
{
    // FC63  ; [.0000.0080.001A][.0000.0098.001A] 
    // ARABIC LIGATURE SHADDA WITH SUPERSCRIPT ALEF ISOLATED FORM

    uint32_t const cps[1] = { 0xfc63 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x60), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x78), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_105)
{
    // FC64  ; [.236D.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfc64 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_106)
{
    // FC65  ; [.236D.0020.0019][.23AD.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ZAIN FINAL FORM

    uint32_t const cps[1] = { 0xfc65 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ad), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_107)
{
    // FC66  ; [.236D.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc66 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_108)
{
    // FC67  ; [.236D.0020.0019][.240D.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH NOON FINAL FORM

    uint32_t const cps[1] = { 0xfc67 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_109)
{
    // FC68  ; [.236D.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc68 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_110)
{
    // FC69  ; [.236D.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc69 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_111)
{
    // FC6A  ; [.2373.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE BEH WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfc6a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_112)
{
    // FC6B  ; [.2373.0020.0019][.23AD.0020.0019] 
    // ARABIC LIGATURE BEH WITH ZAIN FINAL FORM

    uint32_t const cps[1] = { 0xfc6b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ad), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_113)
{
    // FC6C  ; [.2373.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE BEH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc6c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_114)
{
    // FC6D  ; [.2373.0020.0019][.240D.0020.0019] 
    // ARABIC LIGATURE BEH WITH NOON FINAL FORM

    uint32_t const cps[1] = { 0xfc6d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_115)
{
    // FC6E  ; [.2373.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE BEH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc6e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_116)
{
    // FC6F  ; [.2373.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE BEH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc6f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_117)
{
    // FC70  ; [.2383.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE TEH WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfc70 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_118)
{
    // FC71  ; [.2383.0020.0019][.23AD.0020.0019] 
    // ARABIC LIGATURE TEH WITH ZAIN FINAL FORM

    uint32_t const cps[1] = { 0xfc71 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ad), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_119)
{
    // FC72  ; [.2383.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE TEH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc72 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_120)
{
    // FC73  ; [.2383.0020.0019][.240D.0020.0019] 
    // ARABIC LIGATURE TEH WITH NOON FINAL FORM

    uint32_t const cps[1] = { 0xfc73 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_121)
{
    // FC74  ; [.2383.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE TEH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc74 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_122)
{
    // FC75  ; [.2383.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE TEH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc75 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_123)
{
    // FC76  ; [.2384.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE THEH WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfc76 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_124)
{
    // FC77  ; [.2384.0020.0019][.23AD.0020.0019] 
    // ARABIC LIGATURE THEH WITH ZAIN FINAL FORM

    uint32_t const cps[1] = { 0xfc77 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ad), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_125)
{
    // FC78  ; [.2384.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE THEH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc78 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_126)
{
    // FC79  ; [.2384.0020.0019][.240D.0020.0019] 
    // ARABIC LIGATURE THEH WITH NOON FINAL FORM

    uint32_t const cps[1] = { 0xfc79 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_127)
{
    // FC7A  ; [.2384.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE THEH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc7a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_128)
{
    // FC7B  ; [.2384.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE THEH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc7b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_129)
{
    // FC7C  ; [.23DC.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE FEH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc7c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_130)
{
    // FC7D  ; [.23DC.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE FEH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc7d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_131)
{
    // FC7E  ; [.23E8.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE QAF WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc7e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_132)
{
    // FC7F  ; [.23E8.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE QAF WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc7f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_133)
{
    // FC80  ; [.23ED.0020.0019][.2371.0020.0019] 
    // ARABIC LIGATURE KAF WITH ALEF FINAL FORM

    uint32_t const cps[1] = { 0xfc80 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_134)
{
    // FC81  ; [.23ED.0020.0019][.2402.0020.0019] 
    // ARABIC LIGATURE KAF WITH LAM FINAL FORM

    uint32_t const cps[1] = { 0xfc81 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_135)
{
    // FC82  ; [.23ED.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE KAF WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc82 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_136)
{
    // FC83  ; [.23ED.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE KAF WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc83 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_137)
{
    // FC84  ; [.23ED.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE KAF WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc84 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_138)
{
    // FC85  ; [.2402.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE LAM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc85 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_139)
{
    // FC86  ; [.2402.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE LAM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc86 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_140)
{
    // FC87  ; [.2402.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE LAM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc87 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_141)
{
    // FC88  ; [.2409.0020.0019][.2371.0020.0019] 
    // ARABIC LIGATURE MEEM WITH ALEF FINAL FORM

    uint32_t const cps[1] = { 0xfc88 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_142)
{
    // FC89  ; [.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc89 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_143)
{
    // FC8A  ; [.240D.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE NOON WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfc8a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_144)
{
    // FC8B  ; [.240D.0020.0019][.23AD.0020.0019] 
    // ARABIC LIGATURE NOON WITH ZAIN FINAL FORM

    uint32_t const cps[1] = { 0xfc8b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ad), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_145)
{
    // FC8C  ; [.240D.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE NOON WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc8c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_146)
{
    // FC8D  ; [.240D.0020.0019][.240D.0020.0019] 
    // ARABIC LIGATURE NOON WITH NOON FINAL FORM

    uint32_t const cps[1] = { 0xfc8d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_147)
{
    // FC8E  ; [.240D.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE NOON WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc8e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_148)
{
    // FC8F  ; [.240D.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE NOON WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc8f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_110_149)
{
    // FC90  ; [.242B.0020.0019][.0000.0098.0019] 
    // ARABIC LIGATURE ALEF MAKSURA WITH SUPERSCRIPT ALEF FINAL FORM

    uint32_t const cps[1] = { 0xfc90 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x0), uint8_t(0x78), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

