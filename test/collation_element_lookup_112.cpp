// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_112_000)
{
    // FD27  ; [.23C0.0020.0019][.2393.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH KHAH FINAL FORM

    uint32_t const cps[1] = { 0xfd27 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_001)
{
    // FD28  ; [.23C0.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd28 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_002)
{
    // FD29  ; [.23C0.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfd29 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_003)
{
    // FD2A  ; [.23BF.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE SEEN WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfd2a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_004)
{
    // FD2B  ; [.23CA.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE SAD WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfd2b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_005)
{
    // FD2C  ; [.23CB.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE DAD WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfd2c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_006)
{
    // FD2D  ; [.23C0.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd2d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_007)
{
    // FD2E  ; [.23C0.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd2e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_008)
{
    // FD2F  ; [.23C0.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd2f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_009)
{
    // FD30  ; [.23C0.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd30 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_010)
{
    // FD31  ; [.23BF.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE SEEN WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfd31 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_011)
{
    // FD32  ; [.23C0.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfd32 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_012)
{
    // FD33  ; [.23D0.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE TAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd33 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_013)
{
    // FD34  ; [.23BF.0020.0018][.238B.0020.0018] 
    // ARABIC LIGATURE SEEN WITH JEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfd34 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_014)
{
    // FD35  ; [.23BF.0020.0018][.2392.0020.0018] 
    // ARABIC LIGATURE SEEN WITH HAH MEDIAL FORM

    uint32_t const cps[1] = { 0xfd35 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_015)
{
    // FD36  ; [.23BF.0020.0018][.2393.0020.0018] 
    // ARABIC LIGATURE SEEN WITH KHAH MEDIAL FORM

    uint32_t const cps[1] = { 0xfd36 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_016)
{
    // FD37  ; [.23C0.0020.0018][.238B.0020.0018] 
    // ARABIC LIGATURE SHEEN WITH JEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfd37 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_017)
{
    // FD38  ; [.23C0.0020.0018][.2392.0020.0018] 
    // ARABIC LIGATURE SHEEN WITH HAH MEDIAL FORM

    uint32_t const cps[1] = { 0xfd38 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_018)
{
    // FD39  ; [.23C0.0020.0018][.2393.0020.0018] 
    // ARABIC LIGATURE SHEEN WITH KHAH MEDIAL FORM

    uint32_t const cps[1] = { 0xfd39 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_019)
{
    // FD3A  ; [.23D0.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE TAH WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfd3a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_020)
{
    // FD3B  ; [.23D1.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE ZAH WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfd3b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x23d1), uint8_t(0x0), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x18)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_021)
{
    // FD3C  ; [.2371.0020.0019][.0000.006D.0019] 
    // ARABIC LIGATURE ALEF WITH FATHATAN FINAL FORM

    uint32_t const cps[1] = { 0xfd3c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x0), uint8_t(0x4d), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_022)
{
    // FD3D  ; [.2371.0020.001A][.0000.006D.001A] 
    // ARABIC LIGATURE ALEF WITH FATHATAN ISOLATED FORM

    uint32_t const cps[1] = { 0xfd3d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[2] = { {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x0), uint8_t(0x4d), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_112_023)
{
    // FD3E  ; [*0382.0020.0002] 
    // ORNATE LEFT PARENTHESIS

    uint32_t const cps[1] = { 0xfd3e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x382), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_112_024)
{
    // FD3F  ; [*0383.0020.0002] 
    // ORNATE RIGHT PARENTHESIS

    uint32_t const cps[1] = { 0xfd3f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x383), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_112_025)
{
    // FD50  ; [.2383.0020.0017][.238B.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE TEH WITH JEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd50 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_026)
{
    // FD51  ; [.2383.0020.0019][.2392.0020.0019][.238B.0020.0019] 
    // ARABIC LIGATURE TEH WITH HAH WITH JEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd51 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_027)
{
    // FD52  ; [.2383.0020.0017][.2392.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE TEH WITH HAH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd52 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_028)
{
    // FD53  ; [.2383.0020.0017][.2392.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE TEH WITH HAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd53 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_029)
{
    // FD54  ; [.2383.0020.0017][.2393.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE TEH WITH KHAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd54 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_030)
{
    // FD55  ; [.2383.0020.0017][.2409.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE TEH WITH MEEM WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd55 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_031)
{
    // FD56  ; [.2383.0020.0017][.2409.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE TEH WITH MEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd56 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_032)
{
    // FD57  ; [.2383.0020.0017][.2409.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE TEH WITH MEEM WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd57 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_033)
{
    // FD58  ; [.238B.0020.0019][.2409.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE JEEM WITH MEEM WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfd58 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_034)
{
    // FD59  ; [.238B.0020.0017][.2409.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE JEEM WITH MEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd59 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_035)
{
    // FD5A  ; [.2392.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE HAH WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd5a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_036)
{
    // FD5B  ; [.2392.0020.0019][.2409.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE HAH WITH MEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd5b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_037)
{
    // FD5C  ; [.23BF.0020.0017][.2392.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE SEEN WITH HAH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd5c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_038)
{
    // FD5D  ; [.23BF.0020.0017][.238B.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE SEEN WITH JEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd5d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_039)
{
    // FD5E  ; [.23BF.0020.0019][.238B.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE SEEN WITH JEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd5e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_040)
{
    // FD5F  ; [.23BF.0020.0019][.2409.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE SEEN WITH MEEM WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfd5f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_041)
{
    // FD60  ; [.23BF.0020.0017][.2409.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE SEEN WITH MEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd60 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_042)
{
    // FD61  ; [.23BF.0020.0017][.2409.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE SEEN WITH MEEM WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd61 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_043)
{
    // FD62  ; [.23BF.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE SEEN WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd62 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_044)
{
    // FD63  ; [.23BF.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE SEEN WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd63 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_045)
{
    // FD64  ; [.23CA.0020.0019][.2392.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE SAD WITH HAH WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfd64 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_046)
{
    // FD65  ; [.23CA.0020.0017][.2392.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE SAD WITH HAH WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd65 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_047)
{
    // FD66  ; [.23CA.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE SAD WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd66 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_048)
{
    // FD67  ; [.23C0.0020.0019][.2392.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH HAH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd67 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_049)
{
    // FD68  ; [.23C0.0020.0017][.2392.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH HAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd68 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_050)
{
    // FD69  ; [.23C0.0020.0019][.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd69 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_051)
{
    // FD6A  ; [.23C0.0020.0019][.2409.0020.0019][.2393.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH MEEM WITH KHAH FINAL FORM

    uint32_t const cps[1] = { 0xfd6a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_052)
{
    // FD6B  ; [.23C0.0020.0017][.2409.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH MEEM WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd6b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_053)
{
    // FD6C  ; [.23C0.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd6c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_054)
{
    // FD6D  ; [.23C0.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE SHEEN WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd6d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_055)
{
    // FD6E  ; [.23CB.0020.0019][.2392.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE DAD WITH HAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd6e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_056)
{
    // FD6F  ; [.23CB.0020.0019][.2393.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE DAD WITH KHAH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd6f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_057)
{
    // FD70  ; [.23CB.0020.0017][.2393.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE DAD WITH KHAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd70 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_058)
{
    // FD71  ; [.23D0.0020.0019][.2409.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE TAH WITH MEEM WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfd71 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_059)
{
    // FD72  ; [.23D0.0020.0017][.2409.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE TAH WITH MEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd72 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_060)
{
    // FD73  ; [.23D0.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE TAH WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd73 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_061)
{
    // FD74  ; [.23D0.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE TAH WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd74 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_062)
{
    // FD75  ; [.23D4.0020.0019][.238B.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE AIN WITH JEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd75 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_063)
{
    // FD76  ; [.23D4.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE AIN WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd76 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_064)
{
    // FD77  ; [.23D4.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE AIN WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd77 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_065)
{
    // FD78  ; [.23D4.0020.0019][.2409.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE AIN WITH MEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd78 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_066)
{
    // FD79  ; [.23D5.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE GHAIN WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd79 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d5), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_067)
{
    // FD7A  ; [.23D5.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE GHAIN WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd7a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d5), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_068)
{
    // FD7B  ; [.23D5.0020.0019][.2409.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE GHAIN WITH MEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd7b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d5), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_069)
{
    // FD7C  ; [.23DC.0020.0019][.2393.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE FEH WITH KHAH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd7c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_070)
{
    // FD7D  ; [.23DC.0020.0017][.2393.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE FEH WITH KHAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd7d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_071)
{
    // FD7E  ; [.23E8.0020.0019][.2409.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE QAF WITH MEEM WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfd7e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_072)
{
    // FD7F  ; [.23E8.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE QAF WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd7f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_073)
{
    // FD80  ; [.2402.0020.0019][.2392.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE LAM WITH HAH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd80 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_074)
{
    // FD81  ; [.2402.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE LAM WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd81 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_075)
{
    // FD82  ; [.2402.0020.0019][.2392.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE LAM WITH HAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd82 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_076)
{
    // FD83  ; [.2402.0020.0017][.238B.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE LAM WITH JEEM WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd83 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_077)
{
    // FD84  ; [.2402.0020.0019][.238B.0020.0019][.238B.0020.0019] 
    // ARABIC LIGATURE LAM WITH JEEM WITH JEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd84 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_078)
{
    // FD85  ; [.2402.0020.0019][.2393.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE LAM WITH KHAH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd85 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_079)
{
    // FD86  ; [.2402.0020.0017][.2393.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE LAM WITH KHAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd86 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_080)
{
    // FD87  ; [.2402.0020.0019][.2409.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE LAM WITH MEEM WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfd87 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_081)
{
    // FD88  ; [.2402.0020.0017][.2409.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE LAM WITH MEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd88 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_082)
{
    // FD89  ; [.2409.0020.0017][.2392.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE MEEM WITH HAH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd89 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_083)
{
    // FD8A  ; [.2409.0020.0017][.2392.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE MEEM WITH HAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd8a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_084)
{
    // FD8B  ; [.2409.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE MEEM WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd8b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_085)
{
    // FD8C  ; [.2409.0020.0017][.238B.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE MEEM WITH JEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd8c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_086)
{
    // FD8D  ; [.2409.0020.0017][.238B.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE MEEM WITH JEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd8d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_087)
{
    // FD8E  ; [.2409.0020.0017][.2393.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE MEEM WITH KHAH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd8e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_088)
{
    // FD8F  ; [.2409.0020.0017][.2393.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE MEEM WITH KHAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd8f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_089)
{
    // FD92  ; [.2409.0020.0017][.238B.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE MEEM WITH JEEM WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfd92 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_090)
{
    // FD93  ; [.2417.0020.0017][.2409.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE HEH WITH MEEM WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd93 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_091)
{
    // FD94  ; [.2417.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE HEH WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd94 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_092)
{
    // FD95  ; [.240D.0020.0017][.2392.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE NOON WITH HAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd95 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_093)
{
    // FD96  ; [.240D.0020.0019][.2392.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE NOON WITH HAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd96 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_094)
{
    // FD97  ; [.240D.0020.0019][.238B.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE NOON WITH JEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd97 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_095)
{
    // FD98  ; [.240D.0020.0017][.238B.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE NOON WITH JEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd98 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_096)
{
    // FD99  ; [.240D.0020.0019][.238B.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE NOON WITH JEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd99 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_097)
{
    // FD9A  ; [.240D.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE NOON WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd9a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_098)
{
    // FD9B  ; [.240D.0020.0019][.2409.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE NOON WITH MEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd9b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_099)
{
    // FD9C  ; [.242C.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE YEH WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd9c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_100)
{
    // FD9D  ; [.242C.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE YEH WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfd9d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_101)
{
    // FD9E  ; [.2373.0020.0019][.2393.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE BEH WITH KHAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd9e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_102)
{
    // FD9F  ; [.2383.0020.0019][.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE TEH WITH JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd9f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_103)
{
    // FDA0  ; [.2383.0020.0019][.238B.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE TEH WITH JEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfda0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_104)
{
    // FDA1  ; [.2383.0020.0019][.2393.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE TEH WITH KHAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfda1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_105)
{
    // FDA2  ; [.2383.0020.0019][.2393.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE TEH WITH KHAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfda2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_106)
{
    // FDA3  ; [.2383.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE TEH WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfda3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_107)
{
    // FDA4  ; [.2383.0020.0019][.2409.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE TEH WITH MEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfda4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2383), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_108)
{
    // FDA5  ; [.238B.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE JEEM WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfda5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_109)
{
    // FDA6  ; [.238B.0020.0019][.2392.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE JEEM WITH HAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfda6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_110)
{
    // FDA7  ; [.238B.0020.0019][.2409.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE JEEM WITH MEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfda7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_111)
{
    // FDA8  ; [.23BF.0020.0019][.2393.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE SEEN WITH KHAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfda8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_112)
{
    // FDA9  ; [.23CA.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE SAD WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfda9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_113)
{
    // FDAA  ; [.23C0.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdaa };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23c0), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_114)
{
    // FDAB  ; [.23CB.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE DAD WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdab };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23cb), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_115)
{
    // FDAC  ; [.2402.0020.0019][.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE LAM WITH JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdac };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_116)
{
    // FDAD  ; [.2402.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE LAM WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdad };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_117)
{
    // FDAE  ; [.242C.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE YEH WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdae };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_118)
{
    // FDAF  ; [.242C.0020.0019][.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE YEH WITH JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdaf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_119)
{
    // FDB0  ; [.242C.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE YEH WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdb0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_120)
{
    // FDB1  ; [.2409.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE MEEM WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdb1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_121)
{
    // FDB2  ; [.23E8.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE QAF WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdb2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_122)
{
    // FDB3  ; [.240D.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE NOON WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdb3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_123)
{
    // FDB4  ; [.23E8.0020.0017][.2409.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE QAF WITH MEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfdb4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_124)
{
    // FDB5  ; [.2402.0020.0017][.2392.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE LAM WITH HAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfdb5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_125)
{
    // FDB6  ; [.23D4.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE AIN WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdb6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_126)
{
    // FDB7  ; [.23ED.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE KAF WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdb7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_127)
{
    // FDB8  ; [.240D.0020.0017][.238B.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE NOON WITH JEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfdb8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_128)
{
    // FDB9  ; [.2409.0020.0019][.2393.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE MEEM WITH KHAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdb9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_129)
{
    // FDBA  ; [.2402.0020.0017][.238B.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE LAM WITH JEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfdba };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_130)
{
    // FDBB  ; [.23ED.0020.0019][.2409.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE KAF WITH MEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfdbb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_131)
{
    // FDBC  ; [.2402.0020.0019][.238B.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE LAM WITH JEEM WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfdbc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_132)
{
    // FDBD  ; [.240D.0020.0019][.238B.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE NOON WITH JEEM WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfdbd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_133)
{
    // FDBE  ; [.238B.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE JEEM WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdbe };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_134)
{
    // FDBF  ; [.2392.0020.0019][.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE HAH WITH JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdbf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_135)
{
    // FDC0  ; [.2409.0020.0019][.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE MEEM WITH JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdc0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_136)
{
    // FDC1  ; [.23DC.0020.0019][.2409.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE FEH WITH MEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdc1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23dc), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_137)
{
    // FDC2  ; [.2373.0020.0019][.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE BEH WITH HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdc2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_138)
{
    // FDC3  ; [.23ED.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE KAF WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfdc3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_139)
{
    // FDC4  ; [.23D4.0020.0017][.238B.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE AIN WITH JEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfdc4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_140)
{
    // FDC5  ; [.23CA.0020.0017][.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE SAD WITH MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfdc5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x17)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_141)
{
    // FDC6  ; [.23BF.0020.0019][.2393.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE SEEN WITH KHAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdc6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x2393), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_142)
{
    // FDC7  ; [.240D.0020.0019][.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE NOON WITH JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfdc7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x240d), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x0), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x0), uint8_t(0x19)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_143)
{
    // FDF0  ; [.23CA.0020.001A][.2402.0020.001A][.243A.0020.001A] 
    // ARABIC LIGATURE SALLA USED AS KORANIC STOP SIGN ISOLATED FORM

    uint32_t const cps[1] = { 0xfdf0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x243a), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_144)
{
    // FDF1  ; [.23E8.0020.001A][.2402.0020.001A][.243A.0020.001A] 
    // ARABIC LIGATURE QALA USED AS KORANIC STOP SIGN ISOLATED FORM

    uint32_t const cps[1] = { 0xfdf1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[3] = { {uint16_t(0x23e8), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x243a), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 3));
}

TEST(collation, table_lookup_112_145)
{
    // FDF2  ; [.2371.0020.001A][.2402.0020.001A][.2402.0020.001A][.2417.0020.001A] 
    // ARABIC LIGATURE ALLAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfdf2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[4] = { {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2417), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 4));
}

TEST(collation, table_lookup_112_146)
{
    // FDF3  ; [.2371.0020.001A][.23ED.0020.001A][.2373.0020.001A][.23AC.0020.001A] 
    // ARABIC LIGATURE AKBAR ISOLATED FORM

    uint32_t const cps[1] = { 0xfdf3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[4] = { {uint16_t(0x2371), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x23ed), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2373), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 4));
}

TEST(collation, table_lookup_112_147)
{
    // FDF4  ; [.2409.0020.001A][.2392.0020.001A][.2409.0020.001A][.239D.0020.001A] 
    // ARABIC LIGATURE MOHAMMAD ISOLATED FORM

    uint32_t const cps[1] = { 0xfdf4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[4] = { {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x239d), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 4));
}

TEST(collation, table_lookup_112_148)
{
    // FDF5  ; [.23CA.0020.001A][.2402.0020.001A][.23D4.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE SALAM ISOLATED FORM

    uint32_t const cps[1] = { 0xfdf5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[4] = { {uint16_t(0x23ca), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x23d4), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 4));
}

TEST(collation, table_lookup_112_149)
{
    // FDF6  ; [.23AC.0020.001A][.23BF.0020.001A][.241D.0020.001A][.2402.0020.001A] 
    // ARABIC LIGATURE RASOUL ISOLATED FORM

    uint32_t const cps[1] = { 0xfdf6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[4] = { {uint16_t(0x23ac), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x23bf), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x241d), uint8_t(0x0), uint8_t(0x1a)}, {uint16_t(0x2402), uint8_t(0x0), uint8_t(0x1a)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 4));
}

