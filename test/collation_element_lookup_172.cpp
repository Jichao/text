// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_172_000)
{
    // 1D09C ; [*108A.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL AGOGI ARGI

    uint32_t const cps[1] = { 0x1d09c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x108a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_001)
{
    // 1D09D ; [*108B.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL AGOGI METRIA

    uint32_t const cps[1] = { 0x1d09d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x108b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_002)
{
    // 1D09E ; [*108C.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL AGOGI MESI

    uint32_t const cps[1] = { 0x1d09e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x108c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_003)
{
    // 1D09F ; [*108D.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL AGOGI GORGI

    uint32_t const cps[1] = { 0x1d09f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x108d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_004)
{
    // 1D0A0 ; [*108E.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL AGOGI GORGOTERI

    uint32_t const cps[1] = { 0x1d0a0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x108e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_005)
{
    // 1D0A1 ; [*108F.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL AGOGI POLI GORGI

    uint32_t const cps[1] = { 0x1d0a1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x108f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_006)
{
    // 1D0A2 ; [*1090.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA PROTOS ICHOS

    uint32_t const cps[1] = { 0x1d0a2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1090), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_007)
{
    // 1D0A3 ; [*1091.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA ALLI PROTOS ICHOS

    uint32_t const cps[1] = { 0x1d0a3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1091), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_008)
{
    // 1D0A4 ; [*1092.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA DEYTEROS ICHOS

    uint32_t const cps[1] = { 0x1d0a4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1092), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_009)
{
    // 1D0A5 ; [*1093.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA ALLI DEYTEROS ICHOS

    uint32_t const cps[1] = { 0x1d0a5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1093), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_010)
{
    // 1D0A6 ; [*1094.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA TRITOS ICHOS

    uint32_t const cps[1] = { 0x1d0a6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1094), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_011)
{
    // 1D0A7 ; [*1095.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA TRIFONIAS

    uint32_t const cps[1] = { 0x1d0a7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1095), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_012)
{
    // 1D0A8 ; [*1096.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA TETARTOS ICHOS

    uint32_t const cps[1] = { 0x1d0a8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1096), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_013)
{
    // 1D0A9 ; [*1097.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA TETARTOS LEGETOS ICHOS

    uint32_t const cps[1] = { 0x1d0a9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1097), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_014)
{
    // 1D0AA ; [*1098.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA LEGETOS ICHOS

    uint32_t const cps[1] = { 0x1d0aa };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1098), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_015)
{
    // 1D0AB ; [*1099.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA PLAGIOS ICHOS

    uint32_t const cps[1] = { 0x1d0ab };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1099), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_016)
{
    // 1D0AC ; [*109A.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ISAKIA TELOUS ICHIMATOS

    uint32_t const cps[1] = { 0x1d0ac };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x109a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_017)
{
    // 1D0AD ; [*109B.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL APOSTROFOI TELOUS ICHIMATOS

    uint32_t const cps[1] = { 0x1d0ad };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x109b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_018)
{
    // 1D0AE ; [*109C.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FANEROSIS TETRAFONIAS

    uint32_t const cps[1] = { 0x1d0ae };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x109c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_019)
{
    // 1D0AF ; [*109D.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FANEROSIS MONOFONIAS

    uint32_t const cps[1] = { 0x1d0af };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x109d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_020)
{
    // 1D0B0 ; [*109E.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FANEROSIS DIFONIAS

    uint32_t const cps[1] = { 0x1d0b0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x109e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_021)
{
    // 1D0B1 ; [*109F.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA VARYS ICHOS

    uint32_t const cps[1] = { 0x1d0b1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x109f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_022)
{
    // 1D0B2 ; [*10A0.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA PROTOVARYS ICHOS

    uint32_t const cps[1] = { 0x1d0b2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_023)
{
    // 1D0B3 ; [*10A1.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL MARTYRIA PLAGIOS TETARTOS ICHOS

    uint32_t const cps[1] = { 0x1d0b3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_024)
{
    // 1D0B4 ; [*10A2.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL GORTHMIKON N APLOUN

    uint32_t const cps[1] = { 0x1d0b4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_025)
{
    // 1D0B5 ; [*10A3.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL GORTHMIKON N DIPLOUN

    uint32_t const cps[1] = { 0x1d0b5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_026)
{
    // 1D0B6 ; [*10A4.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ENARXIS KAI FTHORA VOU

    uint32_t const cps[1] = { 0x1d0b6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_027)
{
    // 1D0B7 ; [*10A5.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL IMIFONON

    uint32_t const cps[1] = { 0x1d0b7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_028)
{
    // 1D0B8 ; [*10A6.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL IMIFTHORON

    uint32_t const cps[1] = { 0x1d0b8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_029)
{
    // 1D0B9 ; [*10A7.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA ARCHAION DEYTEROU ICHOU

    uint32_t const cps[1] = { 0x1d0b9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_030)
{
    // 1D0BA ; [*10A8.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI PA

    uint32_t const cps[1] = { 0x1d0ba };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_031)
{
    // 1D0BB ; [*10A9.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI NANA

    uint32_t const cps[1] = { 0x1d0bb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10a9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_032)
{
    // 1D0BC ; [*10AA.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA NAOS ICHOS

    uint32_t const cps[1] = { 0x1d0bc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10aa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_033)
{
    // 1D0BD ; [*10AB.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI DI

    uint32_t const cps[1] = { 0x1d0bd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_034)
{
    // 1D0BE ; [*10AC.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA SKLIRON DIATONON DI

    uint32_t const cps[1] = { 0x1d0be };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_035)
{
    // 1D0BF ; [*10AD.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI KE

    uint32_t const cps[1] = { 0x1d0bf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ad), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_036)
{
    // 1D0C0 ; [*10AE.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI ZO

    uint32_t const cps[1] = { 0x1d0c0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ae), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_037)
{
    // 1D0C1 ; [*10AF.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI NI KATO

    uint32_t const cps[1] = { 0x1d0c1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10af), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_038)
{
    // 1D0C2 ; [*10B0.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI NI ANO

    uint32_t const cps[1] = { 0x1d0c2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_039)
{
    // 1D0C3 ; [*10B1.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA MALAKON CHROMA DIFONIAS

    uint32_t const cps[1] = { 0x1d0c3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_040)
{
    // 1D0C4 ; [*10B2.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA MALAKON CHROMA MONOFONIAS

    uint32_t const cps[1] = { 0x1d0c4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_041)
{
    // 1D0C5 ; [*10B3.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FHTORA SKLIRON CHROMA VASIS

    uint32_t const cps[1] = { 0x1d0c5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_042)
{
    // 1D0C6 ; [*10B4.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA SKLIRON CHROMA SYNAFI

    uint32_t const cps[1] = { 0x1d0c6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_043)
{
    // 1D0C7 ; [*10B5.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA NENANO

    uint32_t const cps[1] = { 0x1d0c7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_044)
{
    // 1D0C8 ; [*10B6.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL CHROA ZYGOS

    uint32_t const cps[1] = { 0x1d0c8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_045)
{
    // 1D0C9 ; [*10B7.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL CHROA KLITON

    uint32_t const cps[1] = { 0x1d0c9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_046)
{
    // 1D0CA ; [*10B8.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL CHROA SPATHI

    uint32_t const cps[1] = { 0x1d0ca };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_047)
{
    // 1D0CB ; [*10B9.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA I YFESIS TETARTIMORION

    uint32_t const cps[1] = { 0x1d0cb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10b9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_048)
{
    // 1D0CC ; [*10BA.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL FTHORA ENARMONIOS ANTIFONIA

    uint32_t const cps[1] = { 0x1d0cc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ba), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_049)
{
    // 1D0CD ; [*10BB.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL YFESIS TRITIMORION

    uint32_t const cps[1] = { 0x1d0cd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10bb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_050)
{
    // 1D0CE ; [*10BC.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIESIS TRITIMORION

    uint32_t const cps[1] = { 0x1d0ce };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10bc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_051)
{
    // 1D0CF ; [*10BD.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIESIS TETARTIMORION

    uint32_t const cps[1] = { 0x1d0cf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10bd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_052)
{
    // 1D0D0 ; [*10BE.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIESIS APLI DYO DODEKATA

    uint32_t const cps[1] = { 0x1d0d0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10be), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_053)
{
    // 1D0D1 ; [*10BF.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIESIS MONOGRAMMOS TESSERA DODEKATA

    uint32_t const cps[1] = { 0x1d0d1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10bf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_054)
{
    // 1D0D2 ; [*10C0.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIESIS DIGRAMMOS EX DODEKATA

    uint32_t const cps[1] = { 0x1d0d2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_055)
{
    // 1D0D3 ; [*10C1.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIESIS TRIGRAMMOS OKTO DODEKATA

    uint32_t const cps[1] = { 0x1d0d3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_056)
{
    // 1D0D4 ; [*10C2.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL YFESIS APLI DYO DODEKATA

    uint32_t const cps[1] = { 0x1d0d4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_057)
{
    // 1D0D5 ; [*10C3.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL YFESIS MONOGRAMMOS TESSERA DODEKATA

    uint32_t const cps[1] = { 0x1d0d5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_058)
{
    // 1D0D6 ; [*10C4.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL YFESIS DIGRAMMOS EX DODEKATA

    uint32_t const cps[1] = { 0x1d0d6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_059)
{
    // 1D0D7 ; [*10C5.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL YFESIS TRIGRAMMOS OKTO DODEKATA

    uint32_t const cps[1] = { 0x1d0d7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_060)
{
    // 1D0D8 ; [*10C6.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL GENIKI DIESIS

    uint32_t const cps[1] = { 0x1d0d8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_061)
{
    // 1D0D9 ; [*10C7.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL GENIKI YFESIS

    uint32_t const cps[1] = { 0x1d0d9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_062)
{
    // 1D0DA ; [*10C8.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIASTOLI APLI MIKRI

    uint32_t const cps[1] = { 0x1d0da };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_063)
{
    // 1D0DB ; [*10C9.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIASTOLI APLI MEGALI

    uint32_t const cps[1] = { 0x1d0db };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10c9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_064)
{
    // 1D0DC ; [*10CA.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIASTOLI DIPLI

    uint32_t const cps[1] = { 0x1d0dc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ca), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_065)
{
    // 1D0DD ; [*10CB.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIASTOLI THESEOS

    uint32_t const cps[1] = { 0x1d0dd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10cb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_066)
{
    // 1D0DE ; [*10CC.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS

    uint32_t const cps[1] = { 0x1d0de };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10cc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_067)
{
    // 1D0DF ; [*10CD.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS DISIMOU

    uint32_t const cps[1] = { 0x1d0df };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10cd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_068)
{
    // 1D0E0 ; [*10CE.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS TRISIMOU

    uint32_t const cps[1] = { 0x1d0e0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ce), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_069)
{
    // 1D0E1 ; [*10CF.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS TETRASIMOU

    uint32_t const cps[1] = { 0x1d0e1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10cf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_070)
{
    // 1D0E2 ; [*10D0.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS

    uint32_t const cps[1] = { 0x1d0e2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_071)
{
    // 1D0E3 ; [*10D1.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS DISIMOU

    uint32_t const cps[1] = { 0x1d0e3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_072)
{
    // 1D0E4 ; [*10D2.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS TRISIMOU

    uint32_t const cps[1] = { 0x1d0e4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_073)
{
    // 1D0E5 ; [*10D3.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS TETRASIMOU

    uint32_t const cps[1] = { 0x1d0e5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_074)
{
    // 1D0E6 ; [*10D4.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIGRAMMA GG

    uint32_t const cps[1] = { 0x1d0e6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_075)
{
    // 1D0E7 ; [*10D5.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL DIFTOGGOS OU

    uint32_t const cps[1] = { 0x1d0e7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_076)
{
    // 1D0E8 ; [*10D6.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL STIGMA

    uint32_t const cps[1] = { 0x1d0e8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_077)
{
    // 1D0E9 ; [*10D7.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ARKTIKO PA

    uint32_t const cps[1] = { 0x1d0e9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_078)
{
    // 1D0EA ; [*10D8.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ARKTIKO VOU

    uint32_t const cps[1] = { 0x1d0ea };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_079)
{
    // 1D0EB ; [*10D9.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ARKTIKO GA

    uint32_t const cps[1] = { 0x1d0eb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10d9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_080)
{
    // 1D0EC ; [*10DA.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ARKTIKO DI

    uint32_t const cps[1] = { 0x1d0ec };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10da), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_081)
{
    // 1D0ED ; [*10DB.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ARKTIKO KE

    uint32_t const cps[1] = { 0x1d0ed };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10db), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_082)
{
    // 1D0EE ; [*10DC.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ARKTIKO ZO

    uint32_t const cps[1] = { 0x1d0ee };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10dc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_083)
{
    // 1D0EF ; [*10DD.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL ARKTIKO NI

    uint32_t const cps[1] = { 0x1d0ef };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10dd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_084)
{
    // 1D0F0 ; [*10DE.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL KENTIMATA NEO MESO

    uint32_t const cps[1] = { 0x1d0f0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10de), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_085)
{
    // 1D0F1 ; [*10DF.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL KENTIMA NEO MESO

    uint32_t const cps[1] = { 0x1d0f1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10df), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_086)
{
    // 1D0F2 ; [*10E0.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL KENTIMATA NEO KATO

    uint32_t const cps[1] = { 0x1d0f2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_087)
{
    // 1D0F3 ; [*10E1.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL KENTIMA NEO KATO

    uint32_t const cps[1] = { 0x1d0f3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_088)
{
    // 1D0F4 ; [*10E2.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL KLASMA KATO

    uint32_t const cps[1] = { 0x1d0f4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_089)
{
    // 1D0F5 ; [*10E3.0020.0002] 
    // BYZANTINE MUSICAL SYMBOL GORGON NEO KATO

    uint32_t const cps[1] = { 0x1d0f5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_090)
{
    // 1D100 ; [*10E4.0020.0002] 
    // MUSICAL SYMBOL SINGLE BARLINE

    uint32_t const cps[1] = { 0x1d100 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_091)
{
    // 1D101 ; [*10E5.0020.0002] 
    // MUSICAL SYMBOL DOUBLE BARLINE

    uint32_t const cps[1] = { 0x1d101 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_092)
{
    // 1D102 ; [*10E6.0020.0002] 
    // MUSICAL SYMBOL FINAL BARLINE

    uint32_t const cps[1] = { 0x1d102 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_093)
{
    // 1D103 ; [*10E7.0020.0002] 
    // MUSICAL SYMBOL REVERSE FINAL BARLINE

    uint32_t const cps[1] = { 0x1d103 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_094)
{
    // 1D104 ; [*10E8.0020.0002] 
    // MUSICAL SYMBOL DASHED BARLINE

    uint32_t const cps[1] = { 0x1d104 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_095)
{
    // 1D105 ; [*10E9.0020.0002] 
    // MUSICAL SYMBOL SHORT BARLINE

    uint32_t const cps[1] = { 0x1d105 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10e9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_096)
{
    // 1D106 ; [*10EA.0020.0002] 
    // MUSICAL SYMBOL LEFT REPEAT SIGN

    uint32_t const cps[1] = { 0x1d106 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ea), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_097)
{
    // 1D107 ; [*10EB.0020.0002] 
    // MUSICAL SYMBOL RIGHT REPEAT SIGN

    uint32_t const cps[1] = { 0x1d107 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10eb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_098)
{
    // 1D108 ; [*10EC.0020.0002] 
    // MUSICAL SYMBOL REPEAT DOTS

    uint32_t const cps[1] = { 0x1d108 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ec), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_099)
{
    // 1D109 ; [*10ED.0020.0002] 
    // MUSICAL SYMBOL DAL SEGNO

    uint32_t const cps[1] = { 0x1d109 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ed), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_100)
{
    // 1D10A ; [*10EE.0020.0002] 
    // MUSICAL SYMBOL DA CAPO

    uint32_t const cps[1] = { 0x1d10a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ee), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_101)
{
    // 1D10B ; [*10EF.0020.0002] 
    // MUSICAL SYMBOL SEGNO

    uint32_t const cps[1] = { 0x1d10b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ef), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_102)
{
    // 1D10C ; [*10F0.0020.0002] 
    // MUSICAL SYMBOL CODA

    uint32_t const cps[1] = { 0x1d10c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_103)
{
    // 1D10D ; [*10F1.0020.0002] 
    // MUSICAL SYMBOL REPEATED FIGURE-1

    uint32_t const cps[1] = { 0x1d10d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_104)
{
    // 1D10E ; [*10F2.0020.0002] 
    // MUSICAL SYMBOL REPEATED FIGURE-2

    uint32_t const cps[1] = { 0x1d10e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_105)
{
    // 1D10F ; [*10F3.0020.0002] 
    // MUSICAL SYMBOL REPEATED FIGURE-3

    uint32_t const cps[1] = { 0x1d10f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_106)
{
    // 1D110 ; [*10F4.0020.0002] 
    // MUSICAL SYMBOL FERMATA

    uint32_t const cps[1] = { 0x1d110 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_107)
{
    // 1D111 ; [*10F5.0020.0002] 
    // MUSICAL SYMBOL FERMATA BELOW

    uint32_t const cps[1] = { 0x1d111 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_108)
{
    // 1D112 ; [*10F6.0020.0002] 
    // MUSICAL SYMBOL BREATH MARK

    uint32_t const cps[1] = { 0x1d112 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_109)
{
    // 1D113 ; [*10F7.0020.0002] 
    // MUSICAL SYMBOL CAESURA

    uint32_t const cps[1] = { 0x1d113 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_110)
{
    // 1D114 ; [*10F8.0020.0002] 
    // MUSICAL SYMBOL BRACE

    uint32_t const cps[1] = { 0x1d114 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_111)
{
    // 1D115 ; [*10F9.0020.0002] 
    // MUSICAL SYMBOL BRACKET

    uint32_t const cps[1] = { 0x1d115 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10f9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_112)
{
    // 1D116 ; [*10FA.0020.0002] 
    // MUSICAL SYMBOL ONE-LINE STAFF

    uint32_t const cps[1] = { 0x1d116 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10fa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_113)
{
    // 1D117 ; [*10FB.0020.0002] 
    // MUSICAL SYMBOL TWO-LINE STAFF

    uint32_t const cps[1] = { 0x1d117 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10fb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_114)
{
    // 1D118 ; [*10FC.0020.0002] 
    // MUSICAL SYMBOL THREE-LINE STAFF

    uint32_t const cps[1] = { 0x1d118 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10fc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_115)
{
    // 1D119 ; [*10FD.0020.0002] 
    // MUSICAL SYMBOL FOUR-LINE STAFF

    uint32_t const cps[1] = { 0x1d119 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10fd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_116)
{
    // 1D11A ; [*10FE.0020.0002] 
    // MUSICAL SYMBOL FIVE-LINE STAFF

    uint32_t const cps[1] = { 0x1d11a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10fe), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_117)
{
    // 1D11B ; [*10FF.0020.0002] 
    // MUSICAL SYMBOL SIX-LINE STAFF

    uint32_t const cps[1] = { 0x1d11b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x10ff), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_118)
{
    // 1D11C ; [*1100.0020.0002] 
    // MUSICAL SYMBOL SIX-STRING FRETBOARD

    uint32_t const cps[1] = { 0x1d11c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1100), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_119)
{
    // 1D11D ; [*1101.0020.0002] 
    // MUSICAL SYMBOL FOUR-STRING FRETBOARD

    uint32_t const cps[1] = { 0x1d11d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1101), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_120)
{
    // 1D11E ; [*1102.0020.0002] 
    // MUSICAL SYMBOL G CLEF

    uint32_t const cps[1] = { 0x1d11e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1102), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_121)
{
    // 1D11F ; [*1103.0020.0002] 
    // MUSICAL SYMBOL G CLEF OTTAVA ALTA

    uint32_t const cps[1] = { 0x1d11f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1103), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_122)
{
    // 1D120 ; [*1104.0020.0002] 
    // MUSICAL SYMBOL G CLEF OTTAVA BASSA

    uint32_t const cps[1] = { 0x1d120 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1104), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_123)
{
    // 1D121 ; [*1105.0020.0002] 
    // MUSICAL SYMBOL C CLEF

    uint32_t const cps[1] = { 0x1d121 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1105), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_124)
{
    // 1D122 ; [*1106.0020.0002] 
    // MUSICAL SYMBOL F CLEF

    uint32_t const cps[1] = { 0x1d122 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1106), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_125)
{
    // 1D123 ; [*1107.0020.0002] 
    // MUSICAL SYMBOL F CLEF OTTAVA ALTA

    uint32_t const cps[1] = { 0x1d123 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1107), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_126)
{
    // 1D124 ; [*1108.0020.0002] 
    // MUSICAL SYMBOL F CLEF OTTAVA BASSA

    uint32_t const cps[1] = { 0x1d124 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1108), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_127)
{
    // 1D125 ; [*1109.0020.0002] 
    // MUSICAL SYMBOL DRUM CLEF-1

    uint32_t const cps[1] = { 0x1d125 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1109), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_128)
{
    // 1D126 ; [*110A.0020.0002] 
    // MUSICAL SYMBOL DRUM CLEF-2

    uint32_t const cps[1] = { 0x1d126 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x110a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_129)
{
    // 1D129 ; [*111E.0020.0002] 
    // MUSICAL SYMBOL MULTIPLE MEASURE REST

    uint32_t const cps[1] = { 0x1d129 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x111e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_130)
{
    // 1D12A ; [*110E.0020.0002] 
    // MUSICAL SYMBOL DOUBLE SHARP

    uint32_t const cps[1] = { 0x1d12a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x110e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_131)
{
    // 1D12B ; [*110F.0020.0002] 
    // MUSICAL SYMBOL DOUBLE FLAT

    uint32_t const cps[1] = { 0x1d12b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x110f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_132)
{
    // 1D12C ; [*1110.0020.0002] 
    // MUSICAL SYMBOL FLAT UP

    uint32_t const cps[1] = { 0x1d12c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1110), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_133)
{
    // 1D12D ; [*1111.0020.0002] 
    // MUSICAL SYMBOL FLAT DOWN

    uint32_t const cps[1] = { 0x1d12d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1111), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_134)
{
    // 1D12E ; [*1112.0020.0002] 
    // MUSICAL SYMBOL NATURAL UP

    uint32_t const cps[1] = { 0x1d12e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1112), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_135)
{
    // 1D12F ; [*1113.0020.0002] 
    // MUSICAL SYMBOL NATURAL DOWN

    uint32_t const cps[1] = { 0x1d12f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1113), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_136)
{
    // 1D130 ; [*1114.0020.0002] 
    // MUSICAL SYMBOL SHARP UP

    uint32_t const cps[1] = { 0x1d130 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1114), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_137)
{
    // 1D131 ; [*1115.0020.0002] 
    // MUSICAL SYMBOL SHARP DOWN

    uint32_t const cps[1] = { 0x1d131 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1115), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_138)
{
    // 1D132 ; [*1116.0020.0002] 
    // MUSICAL SYMBOL QUARTER TONE SHARP

    uint32_t const cps[1] = { 0x1d132 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1116), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_139)
{
    // 1D133 ; [*1117.0020.0002] 
    // MUSICAL SYMBOL QUARTER TONE FLAT

    uint32_t const cps[1] = { 0x1d133 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1117), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_140)
{
    // 1D134 ; [*1118.0020.0002] 
    // MUSICAL SYMBOL COMMON TIME

    uint32_t const cps[1] = { 0x1d134 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1118), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_141)
{
    // 1D135 ; [*1119.0020.0002] 
    // MUSICAL SYMBOL CUT TIME

    uint32_t const cps[1] = { 0x1d135 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1119), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_142)
{
    // 1D136 ; [*111A.0020.0002] 
    // MUSICAL SYMBOL OTTAVA ALTA

    uint32_t const cps[1] = { 0x1d136 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x111a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_143)
{
    // 1D137 ; [*111B.0020.0002] 
    // MUSICAL SYMBOL OTTAVA BASSA

    uint32_t const cps[1] = { 0x1d137 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x111b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_144)
{
    // 1D138 ; [*111C.0020.0002] 
    // MUSICAL SYMBOL QUINDICESIMA ALTA

    uint32_t const cps[1] = { 0x1d138 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x111c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_145)
{
    // 1D139 ; [*111D.0020.0002] 
    // MUSICAL SYMBOL QUINDICESIMA BASSA

    uint32_t const cps[1] = { 0x1d139 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x111d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_146)
{
    // 1D13A ; [*111F.0020.0002] 
    // MUSICAL SYMBOL MULTI REST

    uint32_t const cps[1] = { 0x1d13a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x111f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_147)
{
    // 1D13B ; [*1120.0020.0002] 
    // MUSICAL SYMBOL WHOLE REST

    uint32_t const cps[1] = { 0x1d13b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1120), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_148)
{
    // 1D13C ; [*1121.0020.0002] 
    // MUSICAL SYMBOL HALF REST

    uint32_t const cps[1] = { 0x1d13c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1121), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_172_149)
{
    // 1D13D ; [*1122.0020.0002] 
    // MUSICAL SYMBOL QUARTER REST

    uint32_t const cps[1] = { 0x1d13d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x1122), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

