// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_149_000)
{
    // 12410 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE U

    uint32_t const cps[1] = { 0x12410 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_001)
{
    // 12411 ; [.1CA9.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SIX U

    uint32_t const cps[1] = { 0x12411 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_002)
{
    // 12412 ; [.1CAA.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SEVEN U

    uint32_t const cps[1] = { 0x12412 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1caa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_003)
{
    // 12413 ; [.1CAB.0020.0002] 
    // CUNEIFORM NUMERIC SIGN EIGHT U

    uint32_t const cps[1] = { 0x12413 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_004)
{
    // 12414 ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE U

    uint32_t const cps[1] = { 0x12414 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_005)
{
    // 12415 ; [.1CA4.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE GESH2

    uint32_t const cps[1] = { 0x12415 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_006)
{
    // 12416 ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO GESH2

    uint32_t const cps[1] = { 0x12416 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_007)
{
    // 12417 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE GESH2

    uint32_t const cps[1] = { 0x12417 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_008)
{
    // 12418 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR GESH2

    uint32_t const cps[1] = { 0x12418 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_009)
{
    // 12419 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE GESH2

    uint32_t const cps[1] = { 0x12419 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_010)
{
    // 1241A ; [.1CA9.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SIX GESH2

    uint32_t const cps[1] = { 0x1241a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_011)
{
    // 1241B ; [.1CAA.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SEVEN GESH2

    uint32_t const cps[1] = { 0x1241b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1caa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_012)
{
    // 1241C ; [.1CAB.0020.0002] 
    // CUNEIFORM NUMERIC SIGN EIGHT GESH2

    uint32_t const cps[1] = { 0x1241c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_013)
{
    // 1241D ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE GESH2

    uint32_t const cps[1] = { 0x1241d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_014)
{
    // 1241E ; [.1CA4.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE GESHU

    uint32_t const cps[1] = { 0x1241e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_015)
{
    // 1241F ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO GESHU

    uint32_t const cps[1] = { 0x1241f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_016)
{
    // 12420 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE GESHU

    uint32_t const cps[1] = { 0x12420 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_017)
{
    // 12421 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR GESHU

    uint32_t const cps[1] = { 0x12421 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_018)
{
    // 12422 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE GESHU

    uint32_t const cps[1] = { 0x12422 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_019)
{
    // 12423 ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO SHAR2

    uint32_t const cps[1] = { 0x12423 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_020)
{
    // 12424 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE SHAR2

    uint32_t const cps[1] = { 0x12424 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_021)
{
    // 12425 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE SHAR2 VARIANT FORM

    uint32_t const cps[1] = { 0x12425 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_022)
{
    // 12426 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR SHAR2

    uint32_t const cps[1] = { 0x12426 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_023)
{
    // 12427 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE SHAR2

    uint32_t const cps[1] = { 0x12427 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_024)
{
    // 12428 ; [.1CA9.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SIX SHAR2

    uint32_t const cps[1] = { 0x12428 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_025)
{
    // 12429 ; [.1CAA.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SEVEN SHAR2

    uint32_t const cps[1] = { 0x12429 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1caa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_026)
{
    // 1242A ; [.1CAB.0020.0002] 
    // CUNEIFORM NUMERIC SIGN EIGHT SHAR2

    uint32_t const cps[1] = { 0x1242a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_027)
{
    // 1242B ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE SHAR2

    uint32_t const cps[1] = { 0x1242b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_028)
{
    // 1242C ; [.1CA4.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE SHARU

    uint32_t const cps[1] = { 0x1242c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_029)
{
    // 1242D ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO SHARU

    uint32_t const cps[1] = { 0x1242d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_030)
{
    // 1242E ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE SHARU

    uint32_t const cps[1] = { 0x1242e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_031)
{
    // 1242F ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE SHARU VARIANT FORM

    uint32_t const cps[1] = { 0x1242f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_032)
{
    // 12430 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR SHARU

    uint32_t const cps[1] = { 0x12430 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_033)
{
    // 12431 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE SHARU

    uint32_t const cps[1] = { 0x12431 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_034)
{
    // 12432 ; [*1C42.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SHAR2 TIMES GAL PLUS DISH

    uint32_t const cps[1] = { 0x12432 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c42), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_035)
{
    // 12433 ; [*1C43.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SHAR2 TIMES GAL PLUS MIN

    uint32_t const cps[1] = { 0x12433 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c43), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_036)
{
    // 12434 ; [.1CA4.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE BURU

    uint32_t const cps[1] = { 0x12434 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_037)
{
    // 12435 ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO BURU

    uint32_t const cps[1] = { 0x12435 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_038)
{
    // 12436 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE BURU

    uint32_t const cps[1] = { 0x12436 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_039)
{
    // 12437 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE BURU VARIANT FORM

    uint32_t const cps[1] = { 0x12437 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_040)
{
    // 12438 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR BURU

    uint32_t const cps[1] = { 0x12438 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_041)
{
    // 12439 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE BURU

    uint32_t const cps[1] = { 0x12439 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_042)
{
    // 1243A ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE VARIANT FORM ESH16

    uint32_t const cps[1] = { 0x1243a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_043)
{
    // 1243B ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE VARIANT FORM ESH21

    uint32_t const cps[1] = { 0x1243b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_044)
{
    // 1243C ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR VARIANT FORM LIMMU

    uint32_t const cps[1] = { 0x1243c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_045)
{
    // 1243D ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR VARIANT FORM LIMMU4

    uint32_t const cps[1] = { 0x1243d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_046)
{
    // 1243E ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR VARIANT FORM LIMMU A

    uint32_t const cps[1] = { 0x1243e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_047)
{
    // 1243F ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR VARIANT FORM LIMMU B

    uint32_t const cps[1] = { 0x1243f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_048)
{
    // 12440 ; [.1CA9.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SIX VARIANT FORM ASH9

    uint32_t const cps[1] = { 0x12440 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_049)
{
    // 12441 ; [.1CAA.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SEVEN VARIANT FORM IMIN3

    uint32_t const cps[1] = { 0x12441 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1caa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_050)
{
    // 12442 ; [.1CAA.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SEVEN VARIANT FORM IMIN A

    uint32_t const cps[1] = { 0x12442 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1caa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_051)
{
    // 12443 ; [.1CAA.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SEVEN VARIANT FORM IMIN B

    uint32_t const cps[1] = { 0x12443 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1caa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_052)
{
    // 12444 ; [.1CAB.0020.0002] 
    // CUNEIFORM NUMERIC SIGN EIGHT VARIANT FORM USSU

    uint32_t const cps[1] = { 0x12444 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_053)
{
    // 12445 ; [.1CAB.0020.0002] 
    // CUNEIFORM NUMERIC SIGN EIGHT VARIANT FORM USSU3

    uint32_t const cps[1] = { 0x12445 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_054)
{
    // 12446 ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE VARIANT FORM ILIMMU

    uint32_t const cps[1] = { 0x12446 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_055)
{
    // 12447 ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE VARIANT FORM ILIMMU3

    uint32_t const cps[1] = { 0x12447 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_056)
{
    // 12448 ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE VARIANT FORM ILIMMU4

    uint32_t const cps[1] = { 0x12448 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_057)
{
    // 12449 ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE VARIANT FORM ILIMMU A

    uint32_t const cps[1] = { 0x12449 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_058)
{
    // 1244A ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO ASH TENU

    uint32_t const cps[1] = { 0x1244a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_059)
{
    // 1244B ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE ASH TENU

    uint32_t const cps[1] = { 0x1244b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_060)
{
    // 1244C ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR ASH TENU

    uint32_t const cps[1] = { 0x1244c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_061)
{
    // 1244D ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE ASH TENU

    uint32_t const cps[1] = { 0x1244d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_062)
{
    // 1244E ; [.1CA9.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SIX ASH TENU

    uint32_t const cps[1] = { 0x1244e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_063)
{
    // 1244F ; [.1CA4.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE BAN2

    uint32_t const cps[1] = { 0x1244f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_064)
{
    // 12450 ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO BAN2

    uint32_t const cps[1] = { 0x12450 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_065)
{
    // 12451 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN THREE BAN2

    uint32_t const cps[1] = { 0x12451 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_066)
{
    // 12452 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR BAN2

    uint32_t const cps[1] = { 0x12452 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_067)
{
    // 12453 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR BAN2 VARIANT FORM

    uint32_t const cps[1] = { 0x12453 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_068)
{
    // 12454 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE BAN2

    uint32_t const cps[1] = { 0x12454 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_069)
{
    // 12455 ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE BAN2 VARIANT FORM

    uint32_t const cps[1] = { 0x12455 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_070)
{
    // 12456 ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NIGIDAMIN

    uint32_t const cps[1] = { 0x12456 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_071)
{
    // 12457 ; [.1CA6.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NIGIDAESH

    uint32_t const cps[1] = { 0x12457 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_072)
{
    // 12458 ; [.1CA4.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE ESHE3

    uint32_t const cps[1] = { 0x12458 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_073)
{
    // 12459 ; [.1CA5.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO ESHE3

    uint32_t const cps[1] = { 0x12459 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_074)
{
    // 1245A ; [*1C44.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE THIRD DISH

    uint32_t const cps[1] = { 0x1245a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c44), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_075)
{
    // 1245B ; [*1C45.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO THIRDS DISH

    uint32_t const cps[1] = { 0x1245b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c45), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_076)
{
    // 1245C ; [*1C46.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE SIXTHS DISH

    uint32_t const cps[1] = { 0x1245c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c46), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_077)
{
    // 1245D ; [*1C47.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE THIRD VARIANT FORM A

    uint32_t const cps[1] = { 0x1245d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c47), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_078)
{
    // 1245E ; [*1C48.0020.0002] 
    // CUNEIFORM NUMERIC SIGN TWO THIRDS VARIANT FORM A

    uint32_t const cps[1] = { 0x1245e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c48), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_079)
{
    // 1245F ; [*1C49.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE EIGHTH ASH

    uint32_t const cps[1] = { 0x1245f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c49), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_080)
{
    // 12460 ; [*1C4A.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE QUARTER ASH

    uint32_t const cps[1] = { 0x12460 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c4a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_081)
{
    // 12461 ; [*1C4B.0020.0002] 
    // CUNEIFORM NUMERIC SIGN OLD ASSYRIAN ONE SIXTH

    uint32_t const cps[1] = { 0x12461 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c4b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_082)
{
    // 12462 ; [*1C4C.0020.0002] 
    // CUNEIFORM NUMERIC SIGN OLD ASSYRIAN ONE QUARTER

    uint32_t const cps[1] = { 0x12462 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c4c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_083)
{
    // 12463 ; [*1C4D.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE QUARTER GUR

    uint32_t const cps[1] = { 0x12463 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c4d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_084)
{
    // 12464 ; [*1C4E.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ONE HALF GUR

    uint32_t const cps[1] = { 0x12464 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c4e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_085)
{
    // 12465 ; [*1C4F.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ELAMITE ONE THIRD

    uint32_t const cps[1] = { 0x12465 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c4f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_086)
{
    // 12466 ; [*1C50.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ELAMITE TWO THIRDS

    uint32_t const cps[1] = { 0x12466 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c50), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_087)
{
    // 12467 ; [*1C51.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ELAMITE FORTY

    uint32_t const cps[1] = { 0x12467 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c51), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_088)
{
    // 12468 ; [*1C52.0020.0002] 
    // CUNEIFORM NUMERIC SIGN ELAMITE FIFTY

    uint32_t const cps[1] = { 0x12468 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1c52), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_089)
{
    // 12469 ; [.1CA7.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FOUR U VARIANT FORM

    uint32_t const cps[1] = { 0x12469 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_090)
{
    // 1246A ; [.1CA8.0020.0002] 
    // CUNEIFORM NUMERIC SIGN FIVE U VARIANT FORM

    uint32_t const cps[1] = { 0x1246a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_091)
{
    // 1246B ; [.1CA9.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SIX U VARIANT FORM

    uint32_t const cps[1] = { 0x1246b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1ca9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_092)
{
    // 1246C ; [.1CAA.0020.0002] 
    // CUNEIFORM NUMERIC SIGN SEVEN U VARIANT FORM

    uint32_t const cps[1] = { 0x1246c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1caa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_093)
{
    // 1246D ; [.1CAB.0020.0002] 
    // CUNEIFORM NUMERIC SIGN EIGHT U VARIANT FORM

    uint32_t const cps[1] = { 0x1246d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_094)
{
    // 1246E ; [.1CAC.0020.0002] 
    // CUNEIFORM NUMERIC SIGN NINE U VARIANT FORM

    uint32_t const cps[1] = { 0x1246e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x1cac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_095)
{
    // 12470 ; [*0301.0020.0002] 
    // CUNEIFORM PUNCTUATION SIGN OLD ASSYRIAN WORD DIVIDER

    uint32_t const cps[1] = { 0x12470 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x301), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_096)
{
    // 12471 ; [*0302.0020.0002] 
    // CUNEIFORM PUNCTUATION SIGN VERTICAL COLON

    uint32_t const cps[1] = { 0x12471 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x302), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_097)
{
    // 12472 ; [*0303.0020.0002] 
    // CUNEIFORM PUNCTUATION SIGN DIAGONAL COLON

    uint32_t const cps[1] = { 0x12472 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x303), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_098)
{
    // 12473 ; [*0304.0020.0002] 
    // CUNEIFORM PUNCTUATION SIGN DIAGONAL TRICOLON

    uint32_t const cps[1] = { 0x12473 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x304), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_099)
{
    // 12474 ; [*0305.0020.0002] 
    // CUNEIFORM PUNCTUATION SIGN DIAGONAL QUADCOLON

    uint32_t const cps[1] = { 0x12474 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x305), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_100)
{
    // 12480 ; [.4F86.0020.0002] 
    // CUNEIFORM SIGN AB TIMES NUN TENU

    uint32_t const cps[1] = { 0x12480 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f86), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_101)
{
    // 12481 ; [.4F87.0020.0002] 
    // CUNEIFORM SIGN AB TIMES SHU2

    uint32_t const cps[1] = { 0x12481 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f87), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_102)
{
    // 12482 ; [.4F88.0020.0002] 
    // CUNEIFORM SIGN AD TIMES ESH2

    uint32_t const cps[1] = { 0x12482 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f88), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_103)
{
    // 12483 ; [.4F89.0020.0002] 
    // CUNEIFORM SIGN BAD TIMES DISH TENU

    uint32_t const cps[1] = { 0x12483 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f89), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_104)
{
    // 12484 ; [.4F8A.0020.0002] 
    // CUNEIFORM SIGN BAHAR2 TIMES AB2

    uint32_t const cps[1] = { 0x12484 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f8a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_105)
{
    // 12485 ; [.4F8B.0020.0002] 
    // CUNEIFORM SIGN BAHAR2 TIMES NI

    uint32_t const cps[1] = { 0x12485 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f8b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_106)
{
    // 12486 ; [.4F8C.0020.0002] 
    // CUNEIFORM SIGN BAHAR2 TIMES ZA

    uint32_t const cps[1] = { 0x12486 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f8c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_107)
{
    // 12487 ; [.4F8D.0020.0002] 
    // CUNEIFORM SIGN BU OVER BU TIMES NA2

    uint32_t const cps[1] = { 0x12487 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f8d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_108)
{
    // 12488 ; [.4F8E.0020.0002] 
    // CUNEIFORM SIGN DA TIMES TAK4

    uint32_t const cps[1] = { 0x12488 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f8e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_109)
{
    // 12489 ; [.4F8F.0020.0002] 
    // CUNEIFORM SIGN DAG TIMES KUR

    uint32_t const cps[1] = { 0x12489 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f8f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_110)
{
    // 1248A ; [.4F90.0020.0002] 
    // CUNEIFORM SIGN DIM TIMES IGI

    uint32_t const cps[1] = { 0x1248a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f90), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_111)
{
    // 1248B ; [.4F91.0020.0002] 
    // CUNEIFORM SIGN DIM TIMES U U U

    uint32_t const cps[1] = { 0x1248b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f91), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_112)
{
    // 1248C ; [.4F92.0020.0002] 
    // CUNEIFORM SIGN DIM2 TIMES UD

    uint32_t const cps[1] = { 0x1248c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f92), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_113)
{
    // 1248D ; [.4F93.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES ANSHE

    uint32_t const cps[1] = { 0x1248d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f93), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_114)
{
    // 1248E ; [.4F94.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES ASH

    uint32_t const cps[1] = { 0x1248e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f94), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_115)
{
    // 1248F ; [.4F95.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES ASH AT LEFT

    uint32_t const cps[1] = { 0x1248f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f95), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_116)
{
    // 12490 ; [.4F96.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES DIN

    uint32_t const cps[1] = { 0x12490 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f96), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_117)
{
    // 12491 ; [.4F97.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES DUN

    uint32_t const cps[1] = { 0x12491 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f97), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_118)
{
    // 12492 ; [.4F98.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES ERIN2

    uint32_t const cps[1] = { 0x12492 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f98), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_119)
{
    // 12493 ; [.4F99.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES GA

    uint32_t const cps[1] = { 0x12493 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f99), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_120)
{
    // 12494 ; [.4F9A.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES GI

    uint32_t const cps[1] = { 0x12494 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f9a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_121)
{
    // 12495 ; [.4F9B.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES GIR2 GUNU

    uint32_t const cps[1] = { 0x12495 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f9b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_122)
{
    // 12496 ; [.4F9C.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES GISH

    uint32_t const cps[1] = { 0x12496 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f9c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_123)
{
    // 12497 ; [.4F9D.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES HA

    uint32_t const cps[1] = { 0x12497 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f9d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_124)
{
    // 12498 ; [.4F9E.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES HI

    uint32_t const cps[1] = { 0x12498 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f9e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_125)
{
    // 12499 ; [.4F9F.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES IGI GUNU

    uint32_t const cps[1] = { 0x12499 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4f9f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_126)
{
    // 1249A ; [.4FA0.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES KASKAL

    uint32_t const cps[1] = { 0x1249a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_127)
{
    // 1249B ; [.4FA1.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES KUR

    uint32_t const cps[1] = { 0x1249b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_128)
{
    // 1249C ; [.4FA2.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES KUSHU2

    uint32_t const cps[1] = { 0x1249c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_129)
{
    // 1249D ; [.4FA3.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES KUSHU2 PLUS KASKAL

    uint32_t const cps[1] = { 0x1249d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_130)
{
    // 1249E ; [.4FA4.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES LAK-020

    uint32_t const cps[1] = { 0x1249e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_131)
{
    // 1249F ; [.4FA5.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES LAM

    uint32_t const cps[1] = { 0x1249f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_132)
{
    // 124A0 ; [.4FA6.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES LAM TIMES KUR

    uint32_t const cps[1] = { 0x124a0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_133)
{
    // 124A1 ; [.4FA7.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES LUH PLUS GISH

    uint32_t const cps[1] = { 0x124a1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_134)
{
    // 124A2 ; [.4FA8.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES MASH

    uint32_t const cps[1] = { 0x124a2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_135)
{
    // 124A3 ; [.4FA9.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES MES

    uint32_t const cps[1] = { 0x124a3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fa9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_136)
{
    // 124A4 ; [.4FAA.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES MI

    uint32_t const cps[1] = { 0x124a4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4faa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_137)
{
    // 124A5 ; [.4FAB.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES NI

    uint32_t const cps[1] = { 0x124a5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_138)
{
    // 124A6 ; [.4FAC.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES PI

    uint32_t const cps[1] = { 0x124a6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_139)
{
    // 124A7 ; [.4FAD.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES SHE

    uint32_t const cps[1] = { 0x124a7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fad), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_140)
{
    // 124A8 ; [.4FAE.0020.0002] 
    // CUNEIFORM SIGN DUG TIMES SI GUNU

    uint32_t const cps[1] = { 0x124a8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fae), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_141)
{
    // 124A9 ; [.4FAF.0020.0002] 
    // CUNEIFORM SIGN E2 TIMES KUR

    uint32_t const cps[1] = { 0x124a9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4faf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_142)
{
    // 124AA ; [.4FB0.0020.0002] 
    // CUNEIFORM SIGN E2 TIMES PAP

    uint32_t const cps[1] = { 0x124aa };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_143)
{
    // 124AB ; [.4FB1.0020.0002] 
    // CUNEIFORM SIGN ERIN2 X

    uint32_t const cps[1] = { 0x124ab };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_144)
{
    // 124AC ; [.4FB2.0020.0002] 
    // CUNEIFORM SIGN ESH2 CROSSING ESH2

    uint32_t const cps[1] = { 0x124ac };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_145)
{
    // 124AD ; [.4FB3.0020.0002] 
    // CUNEIFORM SIGN EZEN SHESHIG TIMES ASH

    uint32_t const cps[1] = { 0x124ad };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_146)
{
    // 124AE ; [.4FB4.0020.0002] 
    // CUNEIFORM SIGN EZEN SHESHIG TIMES HI

    uint32_t const cps[1] = { 0x124ae };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_147)
{
    // 124AF ; [.4FB5.0020.0002] 
    // CUNEIFORM SIGN EZEN SHESHIG TIMES IGI GUNU

    uint32_t const cps[1] = { 0x124af };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_148)
{
    // 124B0 ; [.4FB6.0020.0002] 
    // CUNEIFORM SIGN EZEN SHESHIG TIMES LA

    uint32_t const cps[1] = { 0x124b0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_149_149)
{
    // 124B1 ; [.4FB7.0020.0002] 
    // CUNEIFORM SIGN EZEN SHESHIG TIMES LAL

    uint32_t const cps[1] = { 0x124b1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4fb7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

