// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_158_000)
{
    // 1341E ; [.5468.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA016

    uint32_t const cps[1] = { 0x1341e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5468), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_001)
{
    // 1341F ; [.5469.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA017

    uint32_t const cps[1] = { 0x1341f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5469), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_002)
{
    // 13420 ; [.546A.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA018

    uint32_t const cps[1] = { 0x13420 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x546a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_003)
{
    // 13421 ; [.546B.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA019

    uint32_t const cps[1] = { 0x13421 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x546b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_004)
{
    // 13422 ; [.546C.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA020

    uint32_t const cps[1] = { 0x13422 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x546c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_005)
{
    // 13423 ; [.546D.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA021

    uint32_t const cps[1] = { 0x13423 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x546d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_006)
{
    // 13424 ; [.546E.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA022

    uint32_t const cps[1] = { 0x13424 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x546e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_007)
{
    // 13425 ; [.546F.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA023

    uint32_t const cps[1] = { 0x13425 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x546f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_008)
{
    // 13426 ; [.5470.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA024

    uint32_t const cps[1] = { 0x13426 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5470), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_009)
{
    // 13427 ; [.5471.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA025

    uint32_t const cps[1] = { 0x13427 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5471), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_010)
{
    // 13428 ; [.5472.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA026

    uint32_t const cps[1] = { 0x13428 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5472), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_011)
{
    // 13429 ; [.5473.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA027

    uint32_t const cps[1] = { 0x13429 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5473), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_012)
{
    // 1342A ; [.5474.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA028

    uint32_t const cps[1] = { 0x1342a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5474), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_013)
{
    // 1342B ; [.5475.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA029

    uint32_t const cps[1] = { 0x1342b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5475), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_014)
{
    // 1342C ; [.5476.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA030

    uint32_t const cps[1] = { 0x1342c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5476), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_015)
{
    // 1342D ; [.5477.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA031

    uint32_t const cps[1] = { 0x1342d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5477), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_016)
{
    // 1342E ; [.5478.0020.0002] 
    // EGYPTIAN HIEROGLYPH AA032

    uint32_t const cps[1] = { 0x1342e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5478), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_017)
{
    // 14400 ; [.5494.0020.0002] 
    // ANATOLIAN HIEROGLYPH A001

    uint32_t const cps[1] = { 0x14400 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5494), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_018)
{
    // 14401 ; [.5495.0020.0002] 
    // ANATOLIAN HIEROGLYPH A002

    uint32_t const cps[1] = { 0x14401 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5495), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_019)
{
    // 14402 ; [.5496.0020.0002] 
    // ANATOLIAN HIEROGLYPH A003

    uint32_t const cps[1] = { 0x14402 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5496), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_020)
{
    // 14403 ; [.5497.0020.0002] 
    // ANATOLIAN HIEROGLYPH A004

    uint32_t const cps[1] = { 0x14403 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5497), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_021)
{
    // 14404 ; [.5498.0020.0002] 
    // ANATOLIAN HIEROGLYPH A005

    uint32_t const cps[1] = { 0x14404 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5498), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_022)
{
    // 14405 ; [.5499.0020.0002] 
    // ANATOLIAN HIEROGLYPH A006

    uint32_t const cps[1] = { 0x14405 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5499), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_023)
{
    // 14406 ; [.549A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A007

    uint32_t const cps[1] = { 0x14406 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x549a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_024)
{
    // 14407 ; [.549B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A008

    uint32_t const cps[1] = { 0x14407 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x549b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_025)
{
    // 14408 ; [.549C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A009

    uint32_t const cps[1] = { 0x14408 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x549c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_026)
{
    // 14409 ; [.549D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A010

    uint32_t const cps[1] = { 0x14409 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x549d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_027)
{
    // 1440A ; [.549E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A010A

    uint32_t const cps[1] = { 0x1440a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x549e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_028)
{
    // 1440B ; [.549F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A011

    uint32_t const cps[1] = { 0x1440b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x549f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_029)
{
    // 1440C ; [.54A0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A012

    uint32_t const cps[1] = { 0x1440c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_030)
{
    // 1440D ; [.54A1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A013

    uint32_t const cps[1] = { 0x1440d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_031)
{
    // 1440E ; [.54A2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A014

    uint32_t const cps[1] = { 0x1440e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_032)
{
    // 1440F ; [.54A3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A015

    uint32_t const cps[1] = { 0x1440f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_033)
{
    // 14410 ; [.54A4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A016

    uint32_t const cps[1] = { 0x14410 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_034)
{
    // 14411 ; [.54A5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A017

    uint32_t const cps[1] = { 0x14411 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_035)
{
    // 14412 ; [.54A6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A018

    uint32_t const cps[1] = { 0x14412 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_036)
{
    // 14413 ; [.54A7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A019

    uint32_t const cps[1] = { 0x14413 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_037)
{
    // 14414 ; [.54A8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A020

    uint32_t const cps[1] = { 0x14414 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_038)
{
    // 14415 ; [.54A9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A021

    uint32_t const cps[1] = { 0x14415 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54a9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_039)
{
    // 14416 ; [.54AA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A022

    uint32_t const cps[1] = { 0x14416 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54aa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_040)
{
    // 14417 ; [.54AB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A023

    uint32_t const cps[1] = { 0x14417 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_041)
{
    // 14418 ; [.54AC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A024

    uint32_t const cps[1] = { 0x14418 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_042)
{
    // 14419 ; [.54AD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A025

    uint32_t const cps[1] = { 0x14419 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ad), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_043)
{
    // 1441A ; [.54AE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A026

    uint32_t const cps[1] = { 0x1441a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ae), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_044)
{
    // 1441B ; [.54AF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A026A

    uint32_t const cps[1] = { 0x1441b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54af), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_045)
{
    // 1441C ; [.54B0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A027

    uint32_t const cps[1] = { 0x1441c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_046)
{
    // 1441D ; [.54B1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A028

    uint32_t const cps[1] = { 0x1441d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_047)
{
    // 1441E ; [.54B2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A029

    uint32_t const cps[1] = { 0x1441e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_048)
{
    // 1441F ; [.54B3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A030

    uint32_t const cps[1] = { 0x1441f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_049)
{
    // 14420 ; [.54B4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A031

    uint32_t const cps[1] = { 0x14420 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_050)
{
    // 14421 ; [.54B5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A032

    uint32_t const cps[1] = { 0x14421 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_051)
{
    // 14422 ; [.54B6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A033

    uint32_t const cps[1] = { 0x14422 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_052)
{
    // 14423 ; [.54B7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A034

    uint32_t const cps[1] = { 0x14423 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_053)
{
    // 14424 ; [.54B8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A035

    uint32_t const cps[1] = { 0x14424 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_054)
{
    // 14425 ; [.54B9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A036

    uint32_t const cps[1] = { 0x14425 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54b9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_055)
{
    // 14426 ; [.54BA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A037

    uint32_t const cps[1] = { 0x14426 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ba), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_056)
{
    // 14427 ; [.54BB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A038

    uint32_t const cps[1] = { 0x14427 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54bb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_057)
{
    // 14428 ; [.54BC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A039

    uint32_t const cps[1] = { 0x14428 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54bc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_058)
{
    // 14429 ; [.54BD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A039A

    uint32_t const cps[1] = { 0x14429 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54bd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_059)
{
    // 1442A ; [.54BE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A040

    uint32_t const cps[1] = { 0x1442a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54be), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_060)
{
    // 1442B ; [.54BF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A041

    uint32_t const cps[1] = { 0x1442b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54bf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_061)
{
    // 1442C ; [.54C0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A041A

    uint32_t const cps[1] = { 0x1442c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_062)
{
    // 1442D ; [.54C1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A042

    uint32_t const cps[1] = { 0x1442d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_063)
{
    // 1442E ; [.54C2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A043

    uint32_t const cps[1] = { 0x1442e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_064)
{
    // 1442F ; [.54C3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A044

    uint32_t const cps[1] = { 0x1442f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_065)
{
    // 14430 ; [.54C4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A045

    uint32_t const cps[1] = { 0x14430 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_066)
{
    // 14431 ; [.54C5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A045A

    uint32_t const cps[1] = { 0x14431 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_067)
{
    // 14432 ; [.54C6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A046

    uint32_t const cps[1] = { 0x14432 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_068)
{
    // 14433 ; [.54C7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A046A

    uint32_t const cps[1] = { 0x14433 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_069)
{
    // 14434 ; [.54C8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A046B

    uint32_t const cps[1] = { 0x14434 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_070)
{
    // 14435 ; [.54C9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A047

    uint32_t const cps[1] = { 0x14435 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54c9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_071)
{
    // 14436 ; [.54CA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A048

    uint32_t const cps[1] = { 0x14436 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ca), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_072)
{
    // 14437 ; [.54CB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A049

    uint32_t const cps[1] = { 0x14437 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54cb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_073)
{
    // 14438 ; [.54CC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A050

    uint32_t const cps[1] = { 0x14438 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54cc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_074)
{
    // 14439 ; [.54CD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A051

    uint32_t const cps[1] = { 0x14439 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54cd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_075)
{
    // 1443A ; [.54CE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A052

    uint32_t const cps[1] = { 0x1443a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ce), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_076)
{
    // 1443B ; [.54CF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A053

    uint32_t const cps[1] = { 0x1443b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54cf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_077)
{
    // 1443C ; [.54D0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A054

    uint32_t const cps[1] = { 0x1443c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_078)
{
    // 1443D ; [.54D1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A055

    uint32_t const cps[1] = { 0x1443d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_079)
{
    // 1443E ; [.54D2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A056

    uint32_t const cps[1] = { 0x1443e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_080)
{
    // 1443F ; [.54D3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A057

    uint32_t const cps[1] = { 0x1443f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_081)
{
    // 14440 ; [.54D4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A058

    uint32_t const cps[1] = { 0x14440 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_082)
{
    // 14441 ; [.54D5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A059

    uint32_t const cps[1] = { 0x14441 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_083)
{
    // 14442 ; [.54D6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A060

    uint32_t const cps[1] = { 0x14442 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_084)
{
    // 14443 ; [.54D7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A061

    uint32_t const cps[1] = { 0x14443 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_085)
{
    // 14444 ; [.54D8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A062

    uint32_t const cps[1] = { 0x14444 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_086)
{
    // 14445 ; [.54D9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A063

    uint32_t const cps[1] = { 0x14445 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54d9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_087)
{
    // 14446 ; [.54DA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A064

    uint32_t const cps[1] = { 0x14446 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54da), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_088)
{
    // 14447 ; [.54DB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A065

    uint32_t const cps[1] = { 0x14447 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54db), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_089)
{
    // 14448 ; [.54DC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A066

    uint32_t const cps[1] = { 0x14448 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54dc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_090)
{
    // 14449 ; [.54DD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A066A

    uint32_t const cps[1] = { 0x14449 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54dd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_091)
{
    // 1444A ; [.54DE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A066B

    uint32_t const cps[1] = { 0x1444a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54de), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_092)
{
    // 1444B ; [.54DF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A066C

    uint32_t const cps[1] = { 0x1444b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54df), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_093)
{
    // 1444C ; [.54E0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A067

    uint32_t const cps[1] = { 0x1444c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_094)
{
    // 1444D ; [.54E1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A068

    uint32_t const cps[1] = { 0x1444d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_095)
{
    // 1444E ; [.54E2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A069

    uint32_t const cps[1] = { 0x1444e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_096)
{
    // 1444F ; [.54E3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A070

    uint32_t const cps[1] = { 0x1444f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_097)
{
    // 14450 ; [.54E4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A071

    uint32_t const cps[1] = { 0x14450 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_098)
{
    // 14451 ; [.54E5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A072

    uint32_t const cps[1] = { 0x14451 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_099)
{
    // 14452 ; [.54E6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A073

    uint32_t const cps[1] = { 0x14452 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_100)
{
    // 14453 ; [.54E7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A074

    uint32_t const cps[1] = { 0x14453 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_101)
{
    // 14454 ; [.54E8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A075

    uint32_t const cps[1] = { 0x14454 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_102)
{
    // 14455 ; [.54E9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A076

    uint32_t const cps[1] = { 0x14455 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54e9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_103)
{
    // 14456 ; [.54EA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A077

    uint32_t const cps[1] = { 0x14456 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ea), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_104)
{
    // 14457 ; [.54EB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A078

    uint32_t const cps[1] = { 0x14457 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54eb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_105)
{
    // 14458 ; [.54EC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A079

    uint32_t const cps[1] = { 0x14458 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ec), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_106)
{
    // 14459 ; [.54ED.0020.0002] 
    // ANATOLIAN HIEROGLYPH A080

    uint32_t const cps[1] = { 0x14459 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ed), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_107)
{
    // 1445A ; [.54EE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A081

    uint32_t const cps[1] = { 0x1445a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ee), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_108)
{
    // 1445B ; [.54EF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A082

    uint32_t const cps[1] = { 0x1445b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ef), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_109)
{
    // 1445C ; [.54F0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A083

    uint32_t const cps[1] = { 0x1445c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_110)
{
    // 1445D ; [.54F1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A084

    uint32_t const cps[1] = { 0x1445d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_111)
{
    // 1445E ; [.54F2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A085

    uint32_t const cps[1] = { 0x1445e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_112)
{
    // 1445F ; [.54F3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A086

    uint32_t const cps[1] = { 0x1445f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_113)
{
    // 14460 ; [.54F4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A087

    uint32_t const cps[1] = { 0x14460 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_114)
{
    // 14461 ; [.54F5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A088

    uint32_t const cps[1] = { 0x14461 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_115)
{
    // 14462 ; [.54F6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A089

    uint32_t const cps[1] = { 0x14462 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_116)
{
    // 14463 ; [.54F7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A090

    uint32_t const cps[1] = { 0x14463 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_117)
{
    // 14464 ; [.54F8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A091

    uint32_t const cps[1] = { 0x14464 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_118)
{
    // 14465 ; [.54F9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A092

    uint32_t const cps[1] = { 0x14465 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54f9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_119)
{
    // 14466 ; [.54FA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A093

    uint32_t const cps[1] = { 0x14466 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54fa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_120)
{
    // 14467 ; [.54FB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A094

    uint32_t const cps[1] = { 0x14467 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54fb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_121)
{
    // 14468 ; [.54FC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A095

    uint32_t const cps[1] = { 0x14468 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54fc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_122)
{
    // 14469 ; [.54FD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A096

    uint32_t const cps[1] = { 0x14469 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54fd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_123)
{
    // 1446A ; [.54FE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A097

    uint32_t const cps[1] = { 0x1446a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54fe), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_124)
{
    // 1446B ; [.54FF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A097A

    uint32_t const cps[1] = { 0x1446b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x54ff), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_125)
{
    // 1446C ; [.5500.0020.0002] 
    // ANATOLIAN HIEROGLYPH A098

    uint32_t const cps[1] = { 0x1446c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5500), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_126)
{
    // 1446D ; [.5501.0020.0002] 
    // ANATOLIAN HIEROGLYPH A098A

    uint32_t const cps[1] = { 0x1446d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5501), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_127)
{
    // 1446E ; [.5502.0020.0002] 
    // ANATOLIAN HIEROGLYPH A099

    uint32_t const cps[1] = { 0x1446e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5502), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_128)
{
    // 1446F ; [.5503.0020.0002] 
    // ANATOLIAN HIEROGLYPH A100

    uint32_t const cps[1] = { 0x1446f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5503), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_129)
{
    // 14470 ; [.5504.0020.0002] 
    // ANATOLIAN HIEROGLYPH A100A

    uint32_t const cps[1] = { 0x14470 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5504), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_130)
{
    // 14471 ; [.5505.0020.0002] 
    // ANATOLIAN HIEROGLYPH A101

    uint32_t const cps[1] = { 0x14471 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5505), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_131)
{
    // 14472 ; [.5506.0020.0002] 
    // ANATOLIAN HIEROGLYPH A101A

    uint32_t const cps[1] = { 0x14472 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5506), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_132)
{
    // 14473 ; [.5507.0020.0002] 
    // ANATOLIAN HIEROGLYPH A102

    uint32_t const cps[1] = { 0x14473 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5507), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_133)
{
    // 14474 ; [.5508.0020.0002] 
    // ANATOLIAN HIEROGLYPH A102A

    uint32_t const cps[1] = { 0x14474 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5508), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_134)
{
    // 14475 ; [.5509.0020.0002] 
    // ANATOLIAN HIEROGLYPH A103

    uint32_t const cps[1] = { 0x14475 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5509), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_135)
{
    // 14476 ; [.550A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A104

    uint32_t const cps[1] = { 0x14476 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x550a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_136)
{
    // 14477 ; [.550B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A104A

    uint32_t const cps[1] = { 0x14477 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x550b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_137)
{
    // 14478 ; [.550C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A104B

    uint32_t const cps[1] = { 0x14478 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x550c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_138)
{
    // 14479 ; [.550D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A104C

    uint32_t const cps[1] = { 0x14479 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x550d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_139)
{
    // 1447A ; [.550E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A105

    uint32_t const cps[1] = { 0x1447a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x550e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_140)
{
    // 1447B ; [.550F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A105A

    uint32_t const cps[1] = { 0x1447b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x550f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_141)
{
    // 1447C ; [.5510.0020.0002] 
    // ANATOLIAN HIEROGLYPH A105B

    uint32_t const cps[1] = { 0x1447c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5510), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_142)
{
    // 1447D ; [.5511.0020.0002] 
    // ANATOLIAN HIEROGLYPH A106

    uint32_t const cps[1] = { 0x1447d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5511), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_143)
{
    // 1447E ; [.5512.0020.0002] 
    // ANATOLIAN HIEROGLYPH A107

    uint32_t const cps[1] = { 0x1447e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5512), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_144)
{
    // 1447F ; [.5513.0020.0002] 
    // ANATOLIAN HIEROGLYPH A107A

    uint32_t const cps[1] = { 0x1447f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5513), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_145)
{
    // 14480 ; [.5514.0020.0002] 
    // ANATOLIAN HIEROGLYPH A107B

    uint32_t const cps[1] = { 0x14480 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5514), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_146)
{
    // 14481 ; [.5515.0020.0002] 
    // ANATOLIAN HIEROGLYPH A107C

    uint32_t const cps[1] = { 0x14481 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5515), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_147)
{
    // 14482 ; [.5516.0020.0002] 
    // ANATOLIAN HIEROGLYPH A108

    uint32_t const cps[1] = { 0x14482 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5516), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_148)
{
    // 14483 ; [.5517.0020.0002] 
    // ANATOLIAN HIEROGLYPH A109

    uint32_t const cps[1] = { 0x14483 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5517), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_158_149)
{
    // 14484 ; [.5518.0020.0002] 
    // ANATOLIAN HIEROGLYPH A110

    uint32_t const cps[1] = { 0x14484 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5518), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

