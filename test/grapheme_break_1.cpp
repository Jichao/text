// Warning! This file is autogenerated.
#include <boost/text/grapheme_break.hpp>

#include <gtest/gtest.h>

#include <algorithm>


TEST(grapheme, breaks_1)
{
    // ÷ 0300 ÷ 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0300 × 0308 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0300 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0300 × 0308 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0308 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0308 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0308 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0600 × 0308 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0600 × 0308 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0903 × 0308 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0903 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0903 × 0308 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0903 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0903 × 0308 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 0903 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 0903 × 0308 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 0308 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 0308 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 0308 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 0308 ÷ 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 0308 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 0308 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 × 0308 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1100 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1100 × 0308 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 × 0308 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 × 0308 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 × 0308 ÷ 1160 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 × 0308 ÷ 11A8 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ AC00 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC00);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ AC01 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xAC01);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 1F1E6 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F1E6);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 261D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x261D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 1F3FB ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F3FB);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 × 0308 × 200D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x200D);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 1160 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 2640 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x2640);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 1F466 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1F466);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ 0378 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0378);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 1160 × 0308 ÷ D800 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1160);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0xD800);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0308 ÷ 0020 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0020);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0308 ÷ 000D ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000D);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0308 ÷ 000A ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x000A);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0308 ÷ 0001 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0001);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 11A8 × 0308 × 0300 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0300);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 11A8 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0308 ÷ 0600 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0600);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 11A8 × 0308 × 0903 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0903);
        EXPECT_EQ(prev_break.break_, false);
    }

    // ÷ 11A8 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

    // ÷ 11A8 × 0308 ÷ 1100 ÷	
    {
        boost::text::grapheme_break_t prev_break;

        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x11A8);
        EXPECT_EQ(prev_break.break_, true);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x0308);
        EXPECT_EQ(prev_break.break_, false);
        prev_break = boost::text::grapheme_break(prev_break.prop_, 0x1100);
        EXPECT_EQ(prev_break.break_, true);
    }

}
