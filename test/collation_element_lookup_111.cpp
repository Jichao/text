// Warning! This file is autogenerated.
#include <boost/text/detail/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_111_000)
{
    // FC91  ; [.242C.0020.0019][.23AC.0020.0019] 
    // ARABIC LIGATURE YEH WITH REH FINAL FORM

    uint32_t const cps[1] = { 0xfc91 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x23ac), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_001)
{
    // FC92  ; [.242C.0020.0019][.23AD.0020.0019] 
    // ARABIC LIGATURE YEH WITH ZAIN FINAL FORM

    uint32_t const cps[1] = { 0xfc92 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x23ad), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_002)
{
    // FC93  ; [.242C.0020.0019][.2409.0020.0019] 
    // ARABIC LIGATURE YEH WITH MEEM FINAL FORM

    uint32_t const cps[1] = { 0xfc93 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_003)
{
    // FC94  ; [.242C.0020.0019][.240D.0020.0019] 
    // ARABIC LIGATURE YEH WITH NOON FINAL FORM

    uint32_t const cps[1] = { 0xfc94 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_004)
{
    // FC95  ; [.242C.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE YEH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfc95 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_005)
{
    // FC96  ; [.242C.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE YEH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfc96 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_006)
{
    // FC97  ; [.236D.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfc97 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_007)
{
    // FC98  ; [.236D.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfc98 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_008)
{
    // FC99  ; [.236D.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfc99 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_009)
{
    // FC9A  ; [.236D.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfc9a };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_010)
{
    // FC9B  ; [.236D.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfc9b };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_011)
{
    // FC9C  ; [.2373.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE BEH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfc9c };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_012)
{
    // FC9D  ; [.2373.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE BEH WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfc9d };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_013)
{
    // FC9E  ; [.2373.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE BEH WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfc9e };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_014)
{
    // FC9F  ; [.2373.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE BEH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfc9f };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_015)
{
    // FCA0  ; [.2373.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE BEH WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfca0 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_016)
{
    // FCA1  ; [.2383.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE TEH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfca1 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_017)
{
    // FCA2  ; [.2383.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE TEH WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfca2 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_018)
{
    // FCA3  ; [.2383.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE TEH WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfca3 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_019)
{
    // FCA4  ; [.2383.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE TEH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfca4 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_020)
{
    // FCA5  ; [.2383.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE TEH WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfca5 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_021)
{
    // FCA6  ; [.2384.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE THEH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfca6 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_022)
{
    // FCA7  ; [.238B.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE JEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfca7 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_023)
{
    // FCA8  ; [.238B.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE JEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfca8 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_024)
{
    // FCA9  ; [.2392.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE HAH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfca9 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_025)
{
    // FCAA  ; [.2392.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE HAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcaa };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_026)
{
    // FCAB  ; [.2393.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE KHAH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcab };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_027)
{
    // FCAC  ; [.2393.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE KHAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcac };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_028)
{
    // FCAD  ; [.23BF.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE SEEN WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcad };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_029)
{
    // FCAE  ; [.23BF.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE SEEN WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcae };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_030)
{
    // FCAF  ; [.23BF.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE SEEN WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcaf };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_031)
{
    // FCB0  ; [.23BF.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE SEEN WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcb0 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_032)
{
    // FCB1  ; [.23CA.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE SAD WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcb1 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_033)
{
    // FCB2  ; [.23CA.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE SAD WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcb2 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_034)
{
    // FCB3  ; [.23CA.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE SAD WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcb3 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_035)
{
    // FCB4  ; [.23CB.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE DAD WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcb4 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_036)
{
    // FCB5  ; [.23CB.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE DAD WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcb5 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_037)
{
    // FCB6  ; [.23CB.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE DAD WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcb6 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_038)
{
    // FCB7  ; [.23CB.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE DAD WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcb7 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_039)
{
    // FCB8  ; [.23D0.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE TAH WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcb8 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_040)
{
    // FCB9  ; [.23D1.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE ZAH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcb9 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d1), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_041)
{
    // FCBA  ; [.23D4.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE AIN WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcba };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_042)
{
    // FCBB  ; [.23D4.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE AIN WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcbb };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_043)
{
    // FCBC  ; [.23D5.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE GHAIN WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcbc };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_044)
{
    // FCBD  ; [.23D5.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE GHAIN WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcbd };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_045)
{
    // FCBE  ; [.23DC.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE FEH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcbe };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_046)
{
    // FCBF  ; [.23DC.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE FEH WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcbf };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_047)
{
    // FCC0  ; [.23DC.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE FEH WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcc0 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_048)
{
    // FCC1  ; [.23DC.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE FEH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcc1 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23dc), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_049)
{
    // FCC2  ; [.23E8.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE QAF WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcc2 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_050)
{
    // FCC3  ; [.23E8.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE QAF WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcc3 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23e8), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_051)
{
    // FCC4  ; [.23ED.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE KAF WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcc4 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_052)
{
    // FCC5  ; [.23ED.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE KAF WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcc5 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_053)
{
    // FCC6  ; [.23ED.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE KAF WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcc6 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_054)
{
    // FCC7  ; [.23ED.0020.0017][.2402.0020.0017] 
    // ARABIC LIGATURE KAF WITH LAM INITIAL FORM

    uint32_t const cps[1] = { 0xfcc7 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_055)
{
    // FCC8  ; [.23ED.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE KAF WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcc8 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_056)
{
    // FCC9  ; [.2402.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE LAM WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcc9 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_057)
{
    // FCCA  ; [.2402.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE LAM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcca };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_058)
{
    // FCCB  ; [.2402.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE LAM WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfccb };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_059)
{
    // FCCC  ; [.2402.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE LAM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfccc };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_060)
{
    // FCCD  ; [.2402.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE LAM WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfccd };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_061)
{
    // FCCE  ; [.2409.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE MEEM WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcce };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_062)
{
    // FCCF  ; [.2409.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE MEEM WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfccf };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_063)
{
    // FCD0  ; [.2409.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE MEEM WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcd0 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_064)
{
    // FCD1  ; [.2409.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE MEEM WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcd1 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_065)
{
    // FCD2  ; [.240D.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE NOON WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcd2 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_066)
{
    // FCD3  ; [.240D.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE NOON WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcd3 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_067)
{
    // FCD4  ; [.240D.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE NOON WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcd4 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_068)
{
    // FCD5  ; [.240D.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE NOON WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcd5 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_069)
{
    // FCD6  ; [.240D.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE NOON WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfcd6 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_070)
{
    // FCD7  ; [.2417.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE HEH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcd7 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_071)
{
    // FCD8  ; [.2417.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE HEH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcd8 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_072)
{
    // FCD9  ; [.2417.0020.0017][.0000.0098.0017] 
    // ARABIC LIGATURE HEH WITH SUPERSCRIPT ALEF INITIAL FORM

    uint32_t const cps[1] = { 0xfcd9 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x0), uint8_t(0x79), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_073)
{
    // FCDA  ; [.242C.0020.0017][.238B.0020.0017] 
    // ARABIC LIGATURE YEH WITH JEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcda };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_074)
{
    // FCDB  ; [.242C.0020.0017][.2392.0020.0017] 
    // ARABIC LIGATURE YEH WITH HAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcdb };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_075)
{
    // FCDC  ; [.242C.0020.0017][.2393.0020.0017] 
    // ARABIC LIGATURE YEH WITH KHAH INITIAL FORM

    uint32_t const cps[1] = { 0xfcdc };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_076)
{
    // FCDD  ; [.242C.0020.0017][.2409.0020.0017] 
    // ARABIC LIGATURE YEH WITH MEEM INITIAL FORM

    uint32_t const cps[1] = { 0xfcdd };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_077)
{
    // FCDE  ; [.242C.0020.0017][.2417.0020.0017] 
    // ARABIC LIGATURE YEH WITH HEH INITIAL FORM

    uint32_t const cps[1] = { 0xfcde };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x17)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x17)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_078)
{
    // FCDF  ; [.236D.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfcdf };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_079)
{
    // FCE0  ; [.236D.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfce0 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x236d), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_080)
{
    // FCE1  ; [.2373.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE BEH WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfce1 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_081)
{
    // FCE2  ; [.2373.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE BEH WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfce2 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2373), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_082)
{
    // FCE3  ; [.2383.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE TEH WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfce3 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_083)
{
    // FCE4  ; [.2383.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE TEH WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfce4 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2383), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_084)
{
    // FCE5  ; [.2384.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE THEH WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfce5 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_085)
{
    // FCE6  ; [.2384.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE THEH WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfce6 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2384), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_086)
{
    // FCE7  ; [.23BF.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE SEEN WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfce7 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_087)
{
    // FCE8  ; [.23BF.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE SEEN WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfce8 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_088)
{
    // FCE9  ; [.23C0.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE SHEEN WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfce9 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_089)
{
    // FCEA  ; [.23C0.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE SHEEN WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfcea };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_090)
{
    // FCEB  ; [.23ED.0020.0018][.2402.0020.0018] 
    // ARABIC LIGATURE KAF WITH LAM MEDIAL FORM

    uint32_t const cps[1] = { 0xfceb };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_091)
{
    // FCEC  ; [.23ED.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE KAF WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfcec };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ed), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_092)
{
    // FCED  ; [.2402.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE LAM WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfced };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2402), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_093)
{
    // FCEE  ; [.240D.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE NOON WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfcee };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_094)
{
    // FCEF  ; [.240D.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE NOON WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfcef };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x240d), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_095)
{
    // FCF0  ; [.242C.0020.0018][.2409.0020.0018] 
    // ARABIC LIGATURE YEH WITH MEEM MEDIAL FORM

    uint32_t const cps[1] = { 0xfcf0 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_096)
{
    // FCF1  ; [.242C.0020.0018][.2417.0020.0018] 
    // ARABIC LIGATURE YEH WITH HEH MEDIAL FORM

    uint32_t const cps[1] = { 0xfcf1 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x18)}, {uint16_t(0x2417), uint8_t(0x1), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_097)
{
    // FCF2  ; [.0000.0076.0018][.0000.0080.0018] 
    // ARABIC LIGATURE SHADDA WITH FATHA MEDIAL FORM

    uint32_t const cps[1] = { 0xfcf2 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x57), uint8_t(0x18)}, {uint16_t(0x0), uint8_t(0x61), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_098)
{
    // FCF3  ; [.0000.007A.0018][.0000.0080.0018] 
    // ARABIC LIGATURE SHADDA WITH DAMMA MEDIAL FORM

    uint32_t const cps[1] = { 0xfcf3 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x5b), uint8_t(0x18)}, {uint16_t(0x0), uint8_t(0x61), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_099)
{
    // FCF4  ; [.0000.007D.0018][.0000.0080.0018] 
    // ARABIC LIGATURE SHADDA WITH KASRA MEDIAL FORM

    uint32_t const cps[1] = { 0xfcf4 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x0), uint8_t(0x5e), uint8_t(0x18)}, {uint16_t(0x0), uint8_t(0x61), uint8_t(0x18)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_100)
{
    // FCF5  ; [.23D0.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE TAH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfcf5 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_101)
{
    // FCF6  ; [.23D0.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE TAH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfcf6 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_102)
{
    // FCF7  ; [.23D4.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE AIN WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfcf7 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_103)
{
    // FCF8  ; [.23D4.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE AIN WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfcf8 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_104)
{
    // FCF9  ; [.23D5.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE GHAIN WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfcf9 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_105)
{
    // FCFA  ; [.23D5.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE GHAIN WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfcfa };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_106)
{
    // FCFB  ; [.23BF.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE SEEN WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfcfb };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_107)
{
    // FCFC  ; [.23BF.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE SEEN WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfcfc };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_108)
{
    // FCFD  ; [.23C0.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE SHEEN WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfcfd };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_109)
{
    // FCFE  ; [.23C0.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE SHEEN WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfcfe };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_110)
{
    // FCFF  ; [.2392.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE HAH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfcff };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_111)
{
    // FD00  ; [.2392.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE HAH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd00 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_112)
{
    // FD01  ; [.238B.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE JEEM WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfd01 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_113)
{
    // FD02  ; [.238B.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE JEEM WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd02 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_114)
{
    // FD03  ; [.2393.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE KHAH WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfd03 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_115)
{
    // FD04  ; [.2393.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE KHAH WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd04 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_116)
{
    // FD05  ; [.23CA.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE SAD WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfd05 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_117)
{
    // FD06  ; [.23CA.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE SAD WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd06 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_118)
{
    // FD07  ; [.23CB.0020.001A][.242B.0020.001A] 
    // ARABIC LIGATURE DAD WITH ALEF MAKSURA ISOLATED FORM

    uint32_t const cps[1] = { 0xfd07 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_119)
{
    // FD08  ; [.23CB.0020.001A][.242C.0020.001A] 
    // ARABIC LIGATURE DAD WITH YEH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd08 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_120)
{
    // FD09  ; [.23C0.0020.001A][.238B.0020.001A] 
    // ARABIC LIGATURE SHEEN WITH JEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfd09 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_121)
{
    // FD0A  ; [.23C0.0020.001A][.2392.0020.001A] 
    // ARABIC LIGATURE SHEEN WITH HAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd0a };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_122)
{
    // FD0B  ; [.23C0.0020.001A][.2393.0020.001A] 
    // ARABIC LIGATURE SHEEN WITH KHAH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd0b };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_123)
{
    // FD0C  ; [.23C0.0020.001A][.2409.0020.001A] 
    // ARABIC LIGATURE SHEEN WITH MEEM ISOLATED FORM

    uint32_t const cps[1] = { 0xfd0c };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x2409), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_124)
{
    // FD0D  ; [.23C0.0020.001A][.23AC.0020.001A] 
    // ARABIC LIGATURE SHEEN WITH REH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd0d };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x23ac), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_125)
{
    // FD0E  ; [.23BF.0020.001A][.23AC.0020.001A] 
    // ARABIC LIGATURE SEEN WITH REH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd0e };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x23ac), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_126)
{
    // FD0F  ; [.23CA.0020.001A][.23AC.0020.001A] 
    // ARABIC LIGATURE SAD WITH REH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd0f };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x23ac), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_127)
{
    // FD10  ; [.23CB.0020.001A][.23AC.0020.001A] 
    // ARABIC LIGATURE DAD WITH REH ISOLATED FORM

    uint32_t const cps[1] = { 0xfd10 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x1a)}, {uint16_t(0x23ac), uint8_t(0x1), uint8_t(0x1a)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_128)
{
    // FD11  ; [.23D0.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE TAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd11 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_129)
{
    // FD12  ; [.23D0.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE TAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd12 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d0), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_130)
{
    // FD13  ; [.23D4.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE AIN WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd13 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_131)
{
    // FD14  ; [.23D4.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE AIN WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd14 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d4), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_132)
{
    // FD15  ; [.23D5.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE GHAIN WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd15 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_133)
{
    // FD16  ; [.23D5.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE GHAIN WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd16 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23d5), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_134)
{
    // FD17  ; [.23BF.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE SEEN WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd17 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_135)
{
    // FD18  ; [.23BF.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE SEEN WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd18 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23bf), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_136)
{
    // FD19  ; [.23C0.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd19 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_137)
{
    // FD1A  ; [.23C0.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd1a };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_138)
{
    // FD1B  ; [.2392.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE HAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd1b };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_139)
{
    // FD1C  ; [.2392.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE HAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd1c };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_140)
{
    // FD1D  ; [.238B.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE JEEM WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd1d };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_141)
{
    // FD1E  ; [.238B.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE JEEM WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd1e };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_142)
{
    // FD1F  ; [.2393.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE KHAH WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd1f };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_143)
{
    // FD20  ; [.2393.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE KHAH WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd20 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x2393), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_144)
{
    // FD21  ; [.23CA.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE SAD WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd21 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_145)
{
    // FD22  ; [.23CA.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE SAD WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd22 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23ca), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_146)
{
    // FD23  ; [.23CB.0020.0019][.242B.0020.0019] 
    // ARABIC LIGATURE DAD WITH ALEF MAKSURA FINAL FORM

    uint32_t const cps[1] = { 0xfd23 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_147)
{
    // FD24  ; [.23CB.0020.0019][.242C.0020.0019] 
    // ARABIC LIGATURE DAD WITH YEH FINAL FORM

    uint32_t const cps[1] = { 0xfd24 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23cb), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x242c), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_148)
{
    // FD25  ; [.23C0.0020.0019][.238B.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH JEEM FINAL FORM

    uint32_t const cps[1] = { 0xfd25 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x238b), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

TEST(collation, table_lookup_111_149)
{
    // FD26  ; [.23C0.0020.0019][.2392.0020.0019] 
    // ARABIC LIGATURE SHEEN WITH HAH FINAL FORM

    uint32_t const cps[1] = { 0xfd26 };
    // biased L2 weight
    boost::text::detail::compressed_collation_element const ces[2] = { {uint16_t(0x23c0), uint8_t(0x1), uint8_t(0x19)}, {uint16_t(0x2392), uint8_t(0x1), uint8_t(0x19)} };

    auto const coll = boost::text::detail::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 2));
}

