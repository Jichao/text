// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_124_000)
{
    // 10689 ; [.497A.0020.0002] 
    // LINEAR A SIGN A349

    uint32_t const cps[1] = { 0x10689 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x497a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_001)
{
    // 1068A ; [.497B.0020.0002] 
    // LINEAR A SIGN A350

    uint32_t const cps[1] = { 0x1068a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x497b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_002)
{
    // 1068B ; [.497C.0020.0002] 
    // LINEAR A SIGN A351

    uint32_t const cps[1] = { 0x1068b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x497c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_003)
{
    // 1068C ; [.497D.0020.0002] 
    // LINEAR A SIGN A352

    uint32_t const cps[1] = { 0x1068c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x497d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_004)
{
    // 1068D ; [.497E.0020.0002] 
    // LINEAR A SIGN A353

    uint32_t const cps[1] = { 0x1068d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x497e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_005)
{
    // 1068E ; [.497F.0020.0002] 
    // LINEAR A SIGN A354

    uint32_t const cps[1] = { 0x1068e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x497f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_006)
{
    // 1068F ; [.4980.0020.0002] 
    // LINEAR A SIGN A355

    uint32_t const cps[1] = { 0x1068f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4980), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_007)
{
    // 10690 ; [.4981.0020.0002] 
    // LINEAR A SIGN A356

    uint32_t const cps[1] = { 0x10690 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4981), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_008)
{
    // 10691 ; [.4982.0020.0002] 
    // LINEAR A SIGN A357

    uint32_t const cps[1] = { 0x10691 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4982), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_009)
{
    // 10692 ; [.4983.0020.0002] 
    // LINEAR A SIGN A358

    uint32_t const cps[1] = { 0x10692 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4983), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_010)
{
    // 10693 ; [.4984.0020.0002] 
    // LINEAR A SIGN A359

    uint32_t const cps[1] = { 0x10693 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4984), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_011)
{
    // 10694 ; [.4985.0020.0002] 
    // LINEAR A SIGN A360

    uint32_t const cps[1] = { 0x10694 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4985), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_012)
{
    // 10695 ; [.4986.0020.0002] 
    // LINEAR A SIGN A361

    uint32_t const cps[1] = { 0x10695 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4986), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_013)
{
    // 10696 ; [.4987.0020.0002] 
    // LINEAR A SIGN A362

    uint32_t const cps[1] = { 0x10696 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4987), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_014)
{
    // 10697 ; [.4988.0020.0002] 
    // LINEAR A SIGN A363

    uint32_t const cps[1] = { 0x10697 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4988), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_015)
{
    // 10698 ; [.4989.0020.0002] 
    // LINEAR A SIGN A364

    uint32_t const cps[1] = { 0x10698 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4989), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_016)
{
    // 10699 ; [.498A.0020.0002] 
    // LINEAR A SIGN A365

    uint32_t const cps[1] = { 0x10699 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x498a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_017)
{
    // 1069A ; [.498B.0020.0002] 
    // LINEAR A SIGN A366

    uint32_t const cps[1] = { 0x1069a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x498b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_018)
{
    // 1069B ; [.498C.0020.0002] 
    // LINEAR A SIGN A367

    uint32_t const cps[1] = { 0x1069b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x498c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_019)
{
    // 1069C ; [.498D.0020.0002] 
    // LINEAR A SIGN A368

    uint32_t const cps[1] = { 0x1069c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x498d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_020)
{
    // 1069D ; [.498E.0020.0002] 
    // LINEAR A SIGN A369

    uint32_t const cps[1] = { 0x1069d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x498e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_021)
{
    // 1069E ; [.498F.0020.0002] 
    // LINEAR A SIGN A370

    uint32_t const cps[1] = { 0x1069e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x498f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_022)
{
    // 1069F ; [.4990.0020.0002] 
    // LINEAR A SIGN A371

    uint32_t const cps[1] = { 0x1069f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4990), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_023)
{
    // 106A0 ; [.4991.0020.0002] 
    // LINEAR A SIGN A400-VAS

    uint32_t const cps[1] = { 0x106a0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4991), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_024)
{
    // 106A1 ; [.4992.0020.0002] 
    // LINEAR A SIGN A401-VAS

    uint32_t const cps[1] = { 0x106a1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4992), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_025)
{
    // 106A2 ; [.4993.0020.0002] 
    // LINEAR A SIGN A402-VAS

    uint32_t const cps[1] = { 0x106a2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4993), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_026)
{
    // 106A3 ; [.4994.0020.0002] 
    // LINEAR A SIGN A403-VAS

    uint32_t const cps[1] = { 0x106a3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4994), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_027)
{
    // 106A4 ; [.4995.0020.0002] 
    // LINEAR A SIGN A404-VAS

    uint32_t const cps[1] = { 0x106a4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4995), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_028)
{
    // 106A5 ; [.4996.0020.0002] 
    // LINEAR A SIGN A405-VAS

    uint32_t const cps[1] = { 0x106a5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4996), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_029)
{
    // 106A6 ; [.4997.0020.0002] 
    // LINEAR A SIGN A406-VAS

    uint32_t const cps[1] = { 0x106a6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4997), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_030)
{
    // 106A7 ; [.4998.0020.0002] 
    // LINEAR A SIGN A407-VAS

    uint32_t const cps[1] = { 0x106a7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4998), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_031)
{
    // 106A8 ; [.4999.0020.0002] 
    // LINEAR A SIGN A408-VAS

    uint32_t const cps[1] = { 0x106a8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4999), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_032)
{
    // 106A9 ; [.499A.0020.0002] 
    // LINEAR A SIGN A409-VAS

    uint32_t const cps[1] = { 0x106a9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x499a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_033)
{
    // 106AA ; [.499B.0020.0002] 
    // LINEAR A SIGN A410-VAS

    uint32_t const cps[1] = { 0x106aa };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x499b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_034)
{
    // 106AB ; [.499C.0020.0002] 
    // LINEAR A SIGN A411-VAS

    uint32_t const cps[1] = { 0x106ab };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x499c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_035)
{
    // 106AC ; [.499D.0020.0002] 
    // LINEAR A SIGN A412-VAS

    uint32_t const cps[1] = { 0x106ac };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x499d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_036)
{
    // 106AD ; [.499E.0020.0002] 
    // LINEAR A SIGN A413-VAS

    uint32_t const cps[1] = { 0x106ad };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x499e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_037)
{
    // 106AE ; [.499F.0020.0002] 
    // LINEAR A SIGN A414-VAS

    uint32_t const cps[1] = { 0x106ae };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x499f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_038)
{
    // 106AF ; [.49A0.0020.0002] 
    // LINEAR A SIGN A415-VAS

    uint32_t const cps[1] = { 0x106af };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_039)
{
    // 106B0 ; [.49A1.0020.0002] 
    // LINEAR A SIGN A416-VAS

    uint32_t const cps[1] = { 0x106b0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_040)
{
    // 106B1 ; [.49A2.0020.0002] 
    // LINEAR A SIGN A417-VAS

    uint32_t const cps[1] = { 0x106b1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_041)
{
    // 106B2 ; [.49A3.0020.0002] 
    // LINEAR A SIGN A418-VAS

    uint32_t const cps[1] = { 0x106b2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_042)
{
    // 106B3 ; [.49A4.0020.0002] 
    // LINEAR A SIGN A501

    uint32_t const cps[1] = { 0x106b3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_043)
{
    // 106B4 ; [.49A5.0020.0002] 
    // LINEAR A SIGN A502

    uint32_t const cps[1] = { 0x106b4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_044)
{
    // 106B5 ; [.49A6.0020.0002] 
    // LINEAR A SIGN A503

    uint32_t const cps[1] = { 0x106b5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_045)
{
    // 106B6 ; [.49A7.0020.0002] 
    // LINEAR A SIGN A504

    uint32_t const cps[1] = { 0x106b6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_046)
{
    // 106B7 ; [.49A8.0020.0002] 
    // LINEAR A SIGN A505

    uint32_t const cps[1] = { 0x106b7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_047)
{
    // 106B8 ; [.49A9.0020.0002] 
    // LINEAR A SIGN A506

    uint32_t const cps[1] = { 0x106b8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49a9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_048)
{
    // 106B9 ; [.49AA.0020.0002] 
    // LINEAR A SIGN A508

    uint32_t const cps[1] = { 0x106b9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49aa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_049)
{
    // 106BA ; [.49AB.0020.0002] 
    // LINEAR A SIGN A509

    uint32_t const cps[1] = { 0x106ba };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_050)
{
    // 106BB ; [.49AC.0020.0002] 
    // LINEAR A SIGN A510

    uint32_t const cps[1] = { 0x106bb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_051)
{
    // 106BC ; [.49AD.0020.0002] 
    // LINEAR A SIGN A511

    uint32_t const cps[1] = { 0x106bc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ad), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_052)
{
    // 106BD ; [.49AE.0020.0002] 
    // LINEAR A SIGN A512

    uint32_t const cps[1] = { 0x106bd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ae), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_053)
{
    // 106BE ; [.49AF.0020.0002] 
    // LINEAR A SIGN A513

    uint32_t const cps[1] = { 0x106be };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49af), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_054)
{
    // 106BF ; [.49B0.0020.0002] 
    // LINEAR A SIGN A515

    uint32_t const cps[1] = { 0x106bf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_055)
{
    // 106C0 ; [.49B1.0020.0002] 
    // LINEAR A SIGN A516

    uint32_t const cps[1] = { 0x106c0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_056)
{
    // 106C1 ; [.49B2.0020.0002] 
    // LINEAR A SIGN A520

    uint32_t const cps[1] = { 0x106c1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_057)
{
    // 106C2 ; [.49B3.0020.0002] 
    // LINEAR A SIGN A521

    uint32_t const cps[1] = { 0x106c2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_058)
{
    // 106C3 ; [.49B4.0020.0002] 
    // LINEAR A SIGN A523

    uint32_t const cps[1] = { 0x106c3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_059)
{
    // 106C4 ; [.49B5.0020.0002] 
    // LINEAR A SIGN A524

    uint32_t const cps[1] = { 0x106c4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_060)
{
    // 106C5 ; [.49B6.0020.0002] 
    // LINEAR A SIGN A525

    uint32_t const cps[1] = { 0x106c5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_061)
{
    // 106C6 ; [.49B7.0020.0002] 
    // LINEAR A SIGN A526

    uint32_t const cps[1] = { 0x106c6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_062)
{
    // 106C7 ; [.49B8.0020.0002] 
    // LINEAR A SIGN A527

    uint32_t const cps[1] = { 0x106c7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_063)
{
    // 106C8 ; [.49B9.0020.0002] 
    // LINEAR A SIGN A528

    uint32_t const cps[1] = { 0x106c8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49b9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_064)
{
    // 106C9 ; [.49BA.0020.0002] 
    // LINEAR A SIGN A529

    uint32_t const cps[1] = { 0x106c9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ba), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_065)
{
    // 106CA ; [.49BB.0020.0002] 
    // LINEAR A SIGN A530

    uint32_t const cps[1] = { 0x106ca };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49bb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_066)
{
    // 106CB ; [.49BC.0020.0002] 
    // LINEAR A SIGN A531

    uint32_t const cps[1] = { 0x106cb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49bc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_067)
{
    // 106CC ; [.49BD.0020.0002] 
    // LINEAR A SIGN A532

    uint32_t const cps[1] = { 0x106cc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49bd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_068)
{
    // 106CD ; [.49BE.0020.0002] 
    // LINEAR A SIGN A534

    uint32_t const cps[1] = { 0x106cd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49be), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_069)
{
    // 106CE ; [.49BF.0020.0002] 
    // LINEAR A SIGN A535

    uint32_t const cps[1] = { 0x106ce };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49bf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_070)
{
    // 106CF ; [.49C0.0020.0002] 
    // LINEAR A SIGN A536

    uint32_t const cps[1] = { 0x106cf };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_071)
{
    // 106D0 ; [.49C1.0020.0002] 
    // LINEAR A SIGN A537

    uint32_t const cps[1] = { 0x106d0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_072)
{
    // 106D1 ; [.49C2.0020.0002] 
    // LINEAR A SIGN A538

    uint32_t const cps[1] = { 0x106d1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_073)
{
    // 106D2 ; [.49C3.0020.0002] 
    // LINEAR A SIGN A539

    uint32_t const cps[1] = { 0x106d2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_074)
{
    // 106D3 ; [.49C4.0020.0002] 
    // LINEAR A SIGN A540

    uint32_t const cps[1] = { 0x106d3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_075)
{
    // 106D4 ; [.49C5.0020.0002] 
    // LINEAR A SIGN A541

    uint32_t const cps[1] = { 0x106d4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_076)
{
    // 106D5 ; [.49C6.0020.0002] 
    // LINEAR A SIGN A542

    uint32_t const cps[1] = { 0x106d5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_077)
{
    // 106D6 ; [.49C7.0020.0002] 
    // LINEAR A SIGN A545

    uint32_t const cps[1] = { 0x106d6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_078)
{
    // 106D7 ; [.49C8.0020.0002] 
    // LINEAR A SIGN A547

    uint32_t const cps[1] = { 0x106d7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_079)
{
    // 106D8 ; [.49C9.0020.0002] 
    // LINEAR A SIGN A548

    uint32_t const cps[1] = { 0x106d8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49c9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_080)
{
    // 106D9 ; [.49CA.0020.0002] 
    // LINEAR A SIGN A549

    uint32_t const cps[1] = { 0x106d9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ca), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_081)
{
    // 106DA ; [.49CB.0020.0002] 
    // LINEAR A SIGN A550

    uint32_t const cps[1] = { 0x106da };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49cb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_082)
{
    // 106DB ; [.49CC.0020.0002] 
    // LINEAR A SIGN A551

    uint32_t const cps[1] = { 0x106db };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49cc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_083)
{
    // 106DC ; [.49CD.0020.0002] 
    // LINEAR A SIGN A552

    uint32_t const cps[1] = { 0x106dc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49cd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_084)
{
    // 106DD ; [.49CE.0020.0002] 
    // LINEAR A SIGN A553

    uint32_t const cps[1] = { 0x106dd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ce), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_085)
{
    // 106DE ; [.49CF.0020.0002] 
    // LINEAR A SIGN A554

    uint32_t const cps[1] = { 0x106de };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49cf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_086)
{
    // 106DF ; [.49D0.0020.0002] 
    // LINEAR A SIGN A555

    uint32_t const cps[1] = { 0x106df };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_087)
{
    // 106E0 ; [.49D1.0020.0002] 
    // LINEAR A SIGN A556

    uint32_t const cps[1] = { 0x106e0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_088)
{
    // 106E1 ; [.49D2.0020.0002] 
    // LINEAR A SIGN A557

    uint32_t const cps[1] = { 0x106e1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_089)
{
    // 106E2 ; [.49D3.0020.0002] 
    // LINEAR A SIGN A559

    uint32_t const cps[1] = { 0x106e2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_090)
{
    // 106E3 ; [.49D4.0020.0002] 
    // LINEAR A SIGN A563

    uint32_t const cps[1] = { 0x106e3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_091)
{
    // 106E4 ; [.49D5.0020.0002] 
    // LINEAR A SIGN A564

    uint32_t const cps[1] = { 0x106e4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_092)
{
    // 106E5 ; [.49D6.0020.0002] 
    // LINEAR A SIGN A565

    uint32_t const cps[1] = { 0x106e5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_093)
{
    // 106E6 ; [.49D7.0020.0002] 
    // LINEAR A SIGN A566

    uint32_t const cps[1] = { 0x106e6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_094)
{
    // 106E7 ; [.49D8.0020.0002] 
    // LINEAR A SIGN A568

    uint32_t const cps[1] = { 0x106e7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_095)
{
    // 106E8 ; [.49D9.0020.0002] 
    // LINEAR A SIGN A569

    uint32_t const cps[1] = { 0x106e8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49d9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_096)
{
    // 106E9 ; [.49DA.0020.0002] 
    // LINEAR A SIGN A570

    uint32_t const cps[1] = { 0x106e9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49da), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_097)
{
    // 106EA ; [.49DB.0020.0002] 
    // LINEAR A SIGN A571

    uint32_t const cps[1] = { 0x106ea };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49db), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_098)
{
    // 106EB ; [.49DC.0020.0002] 
    // LINEAR A SIGN A572

    uint32_t const cps[1] = { 0x106eb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49dc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_099)
{
    // 106EC ; [.49DD.0020.0002] 
    // LINEAR A SIGN A573

    uint32_t const cps[1] = { 0x106ec };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49dd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_100)
{
    // 106ED ; [.49DE.0020.0002] 
    // LINEAR A SIGN A574

    uint32_t const cps[1] = { 0x106ed };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49de), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_101)
{
    // 106EE ; [.49DF.0020.0002] 
    // LINEAR A SIGN A575

    uint32_t const cps[1] = { 0x106ee };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49df), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_102)
{
    // 106EF ; [.49E0.0020.0002] 
    // LINEAR A SIGN A576

    uint32_t const cps[1] = { 0x106ef };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_103)
{
    // 106F0 ; [.49E1.0020.0002] 
    // LINEAR A SIGN A577

    uint32_t const cps[1] = { 0x106f0 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_104)
{
    // 106F1 ; [.49E2.0020.0002] 
    // LINEAR A SIGN A578

    uint32_t const cps[1] = { 0x106f1 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_105)
{
    // 106F2 ; [.49E3.0020.0002] 
    // LINEAR A SIGN A579

    uint32_t const cps[1] = { 0x106f2 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_106)
{
    // 106F3 ; [.49E4.0020.0002] 
    // LINEAR A SIGN A580

    uint32_t const cps[1] = { 0x106f3 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_107)
{
    // 106F4 ; [.49E5.0020.0002] 
    // LINEAR A SIGN A581

    uint32_t const cps[1] = { 0x106f4 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_108)
{
    // 106F5 ; [.49E6.0020.0002] 
    // LINEAR A SIGN A582

    uint32_t const cps[1] = { 0x106f5 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_109)
{
    // 106F6 ; [.49E7.0020.0002] 
    // LINEAR A SIGN A583

    uint32_t const cps[1] = { 0x106f6 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_110)
{
    // 106F7 ; [.49E8.0020.0002] 
    // LINEAR A SIGN A584

    uint32_t const cps[1] = { 0x106f7 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_111)
{
    // 106F8 ; [.49E9.0020.0002] 
    // LINEAR A SIGN A585

    uint32_t const cps[1] = { 0x106f8 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49e9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_112)
{
    // 106F9 ; [.49EA.0020.0002] 
    // LINEAR A SIGN A586

    uint32_t const cps[1] = { 0x106f9 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ea), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_113)
{
    // 106FA ; [.49EB.0020.0002] 
    // LINEAR A SIGN A587

    uint32_t const cps[1] = { 0x106fa };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49eb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_114)
{
    // 106FB ; [.49EC.0020.0002] 
    // LINEAR A SIGN A588

    uint32_t const cps[1] = { 0x106fb };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ec), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_115)
{
    // 106FC ; [.49ED.0020.0002] 
    // LINEAR A SIGN A589

    uint32_t const cps[1] = { 0x106fc };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ed), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_116)
{
    // 106FD ; [.49EE.0020.0002] 
    // LINEAR A SIGN A591

    uint32_t const cps[1] = { 0x106fd };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ee), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_117)
{
    // 106FE ; [.49EF.0020.0002] 
    // LINEAR A SIGN A592

    uint32_t const cps[1] = { 0x106fe };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ef), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_118)
{
    // 106FF ; [.49F0.0020.0002] 
    // LINEAR A SIGN A594

    uint32_t const cps[1] = { 0x106ff };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_119)
{
    // 10700 ; [.49F1.0020.0002] 
    // LINEAR A SIGN A595

    uint32_t const cps[1] = { 0x10700 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_120)
{
    // 10701 ; [.49F2.0020.0002] 
    // LINEAR A SIGN A596

    uint32_t const cps[1] = { 0x10701 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_121)
{
    // 10702 ; [.49F3.0020.0002] 
    // LINEAR A SIGN A598

    uint32_t const cps[1] = { 0x10702 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_122)
{
    // 10703 ; [.49F4.0020.0002] 
    // LINEAR A SIGN A600

    uint32_t const cps[1] = { 0x10703 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_123)
{
    // 10704 ; [.49F5.0020.0002] 
    // LINEAR A SIGN A601

    uint32_t const cps[1] = { 0x10704 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_124)
{
    // 10705 ; [.49F6.0020.0002] 
    // LINEAR A SIGN A602

    uint32_t const cps[1] = { 0x10705 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_125)
{
    // 10706 ; [.49F7.0020.0002] 
    // LINEAR A SIGN A603

    uint32_t const cps[1] = { 0x10706 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_126)
{
    // 10707 ; [.49F8.0020.0002] 
    // LINEAR A SIGN A604

    uint32_t const cps[1] = { 0x10707 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_127)
{
    // 10708 ; [.49F9.0020.0002] 
    // LINEAR A SIGN A606

    uint32_t const cps[1] = { 0x10708 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49f9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_128)
{
    // 10709 ; [.49FA.0020.0002] 
    // LINEAR A SIGN A608

    uint32_t const cps[1] = { 0x10709 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49fa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_129)
{
    // 1070A ; [.49FB.0020.0002] 
    // LINEAR A SIGN A609

    uint32_t const cps[1] = { 0x1070a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49fb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_130)
{
    // 1070B ; [.49FC.0020.0002] 
    // LINEAR A SIGN A610

    uint32_t const cps[1] = { 0x1070b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49fc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_131)
{
    // 1070C ; [.49FD.0020.0002] 
    // LINEAR A SIGN A611

    uint32_t const cps[1] = { 0x1070c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49fd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_132)
{
    // 1070D ; [.49FE.0020.0002] 
    // LINEAR A SIGN A612

    uint32_t const cps[1] = { 0x1070d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49fe), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_133)
{
    // 1070E ; [.49FF.0020.0002] 
    // LINEAR A SIGN A613

    uint32_t const cps[1] = { 0x1070e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x49ff), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_134)
{
    // 1070F ; [.4A00.0020.0002] 
    // LINEAR A SIGN A614

    uint32_t const cps[1] = { 0x1070f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a00), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_135)
{
    // 10710 ; [.4A01.0020.0002] 
    // LINEAR A SIGN A615

    uint32_t const cps[1] = { 0x10710 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a01), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_136)
{
    // 10711 ; [.4A02.0020.0002] 
    // LINEAR A SIGN A616

    uint32_t const cps[1] = { 0x10711 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a02), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_137)
{
    // 10712 ; [.4A03.0020.0002] 
    // LINEAR A SIGN A617

    uint32_t const cps[1] = { 0x10712 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a03), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_138)
{
    // 10713 ; [.4A04.0020.0002] 
    // LINEAR A SIGN A618

    uint32_t const cps[1] = { 0x10713 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a04), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_139)
{
    // 10714 ; [.4A05.0020.0002] 
    // LINEAR A SIGN A619

    uint32_t const cps[1] = { 0x10714 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a05), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_140)
{
    // 10715 ; [.4A06.0020.0002] 
    // LINEAR A SIGN A620

    uint32_t const cps[1] = { 0x10715 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a06), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_141)
{
    // 10716 ; [.4A07.0020.0002] 
    // LINEAR A SIGN A621

    uint32_t const cps[1] = { 0x10716 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a07), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_142)
{
    // 10717 ; [.4A08.0020.0002] 
    // LINEAR A SIGN A622

    uint32_t const cps[1] = { 0x10717 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a08), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_143)
{
    // 10718 ; [.4A09.0020.0002] 
    // LINEAR A SIGN A623

    uint32_t const cps[1] = { 0x10718 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a09), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_144)
{
    // 10719 ; [.4A0A.0020.0002] 
    // LINEAR A SIGN A624

    uint32_t const cps[1] = { 0x10719 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a0a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_145)
{
    // 1071A ; [.4A0B.0020.0002] 
    // LINEAR A SIGN A626

    uint32_t const cps[1] = { 0x1071a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a0b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_146)
{
    // 1071B ; [.4A0C.0020.0002] 
    // LINEAR A SIGN A627

    uint32_t const cps[1] = { 0x1071b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a0c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_147)
{
    // 1071C ; [.4A0D.0020.0002] 
    // LINEAR A SIGN A628

    uint32_t const cps[1] = { 0x1071c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a0d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_148)
{
    // 1071D ; [.4A0E.0020.0002] 
    // LINEAR A SIGN A629

    uint32_t const cps[1] = { 0x1071d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a0e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_124_149)
{
    // 1071E ; [.4A0F.0020.0002] 
    // LINEAR A SIGN A634

    uint32_t const cps[1] = { 0x1071e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4a0f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

