// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_161_000)
{
    // 145B1 ; [.5645.0020.0002] 
    // ANATOLIAN HIEROGLYPH A383 RA OR RI

    uint32_t const cps[1] = { 0x145b1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5645), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_001)
{
    // 145B2 ; [.5646.0020.0002] 
    // ANATOLIAN HIEROGLYPH A383A

    uint32_t const cps[1] = { 0x145b2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5646), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_002)
{
    // 145B3 ; [.5647.0020.0002] 
    // ANATOLIAN HIEROGLYPH A384

    uint32_t const cps[1] = { 0x145b3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5647), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_003)
{
    // 145B4 ; [.5648.0020.0002] 
    // ANATOLIAN HIEROGLYPH A385

    uint32_t const cps[1] = { 0x145b4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5648), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_004)
{
    // 145B5 ; [.5649.0020.0002] 
    // ANATOLIAN HIEROGLYPH A386

    uint32_t const cps[1] = { 0x145b5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5649), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_005)
{
    // 145B6 ; [.564A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A386A

    uint32_t const cps[1] = { 0x145b6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x564a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_006)
{
    // 145B7 ; [.564B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A387

    uint32_t const cps[1] = { 0x145b7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x564b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_007)
{
    // 145B8 ; [.564C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A388

    uint32_t const cps[1] = { 0x145b8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x564c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_008)
{
    // 145B9 ; [.564D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A389

    uint32_t const cps[1] = { 0x145b9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x564d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_009)
{
    // 145BA ; [.564E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A390

    uint32_t const cps[1] = { 0x145ba };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x564e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_010)
{
    // 145BB ; [.564F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A391

    uint32_t const cps[1] = { 0x145bb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x564f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_011)
{
    // 145BC ; [.5650.0020.0002] 
    // ANATOLIAN HIEROGLYPH A392

    uint32_t const cps[1] = { 0x145bc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5650), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_012)
{
    // 145BD ; [.5651.0020.0002] 
    // ANATOLIAN HIEROGLYPH A393 EIGHT

    uint32_t const cps[1] = { 0x145bd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5651), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_013)
{
    // 145BE ; [.5652.0020.0002] 
    // ANATOLIAN HIEROGLYPH A394

    uint32_t const cps[1] = { 0x145be };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5652), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_014)
{
    // 145BF ; [.5653.0020.0002] 
    // ANATOLIAN HIEROGLYPH A395

    uint32_t const cps[1] = { 0x145bf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5653), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_015)
{
    // 145C0 ; [.5654.0020.0002] 
    // ANATOLIAN HIEROGLYPH A396

    uint32_t const cps[1] = { 0x145c0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5654), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_016)
{
    // 145C1 ; [.5655.0020.0002] 
    // ANATOLIAN HIEROGLYPH A397

    uint32_t const cps[1] = { 0x145c1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5655), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_017)
{
    // 145C2 ; [.5656.0020.0002] 
    // ANATOLIAN HIEROGLYPH A398

    uint32_t const cps[1] = { 0x145c2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5656), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_018)
{
    // 145C3 ; [.5657.0020.0002] 
    // ANATOLIAN HIEROGLYPH A399

    uint32_t const cps[1] = { 0x145c3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5657), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_019)
{
    // 145C4 ; [.5658.0020.0002] 
    // ANATOLIAN HIEROGLYPH A400

    uint32_t const cps[1] = { 0x145c4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5658), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_020)
{
    // 145C5 ; [.5659.0020.0002] 
    // ANATOLIAN HIEROGLYPH A401

    uint32_t const cps[1] = { 0x145c5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5659), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_021)
{
    // 145C6 ; [.565A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A402

    uint32_t const cps[1] = { 0x145c6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x565a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_022)
{
    // 145C7 ; [.565B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A403

    uint32_t const cps[1] = { 0x145c7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x565b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_023)
{
    // 145C8 ; [.565C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A404

    uint32_t const cps[1] = { 0x145c8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x565c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_024)
{
    // 145C9 ; [.565D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A405

    uint32_t const cps[1] = { 0x145c9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x565d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_025)
{
    // 145CA ; [.565E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A406

    uint32_t const cps[1] = { 0x145ca };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x565e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_026)
{
    // 145CB ; [.565F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A407

    uint32_t const cps[1] = { 0x145cb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x565f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_027)
{
    // 145CC ; [.5660.0020.0002] 
    // ANATOLIAN HIEROGLYPH A408

    uint32_t const cps[1] = { 0x145cc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5660), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_028)
{
    // 145CD ; [.5661.0020.0002] 
    // ANATOLIAN HIEROGLYPH A409

    uint32_t const cps[1] = { 0x145cd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5661), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_029)
{
    // 145CE ; [.5662.0020.0002] 
    // ANATOLIAN HIEROGLYPH A410 BEGIN LOGOGRAM MARK

    uint32_t const cps[1] = { 0x145ce };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5662), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_030)
{
    // 145CF ; [.5663.0020.0002] 
    // ANATOLIAN HIEROGLYPH A410A END LOGOGRAM MARK

    uint32_t const cps[1] = { 0x145cf };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5663), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_031)
{
    // 145D0 ; [.5664.0020.0002] 
    // ANATOLIAN HIEROGLYPH A411

    uint32_t const cps[1] = { 0x145d0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5664), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_032)
{
    // 145D1 ; [.5665.0020.0002] 
    // ANATOLIAN HIEROGLYPH A412

    uint32_t const cps[1] = { 0x145d1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5665), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_033)
{
    // 145D2 ; [.5666.0020.0002] 
    // ANATOLIAN HIEROGLYPH A413

    uint32_t const cps[1] = { 0x145d2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5666), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_034)
{
    // 145D3 ; [.5667.0020.0002] 
    // ANATOLIAN HIEROGLYPH A414

    uint32_t const cps[1] = { 0x145d3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5667), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_035)
{
    // 145D4 ; [.5668.0020.0002] 
    // ANATOLIAN HIEROGLYPH A415

    uint32_t const cps[1] = { 0x145d4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5668), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_036)
{
    // 145D5 ; [.5669.0020.0002] 
    // ANATOLIAN HIEROGLYPH A416

    uint32_t const cps[1] = { 0x145d5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5669), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_037)
{
    // 145D6 ; [.566A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A417

    uint32_t const cps[1] = { 0x145d6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x566a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_038)
{
    // 145D7 ; [.566B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A418

    uint32_t const cps[1] = { 0x145d7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x566b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_039)
{
    // 145D8 ; [.566C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A419

    uint32_t const cps[1] = { 0x145d8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x566c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_040)
{
    // 145D9 ; [.566D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A420

    uint32_t const cps[1] = { 0x145d9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x566d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_041)
{
    // 145DA ; [.566E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A421

    uint32_t const cps[1] = { 0x145da };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x566e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_042)
{
    // 145DB ; [.566F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A422

    uint32_t const cps[1] = { 0x145db };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x566f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_043)
{
    // 145DC ; [.5670.0020.0002] 
    // ANATOLIAN HIEROGLYPH A423

    uint32_t const cps[1] = { 0x145dc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5670), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_044)
{
    // 145DD ; [.5671.0020.0002] 
    // ANATOLIAN HIEROGLYPH A424

    uint32_t const cps[1] = { 0x145dd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5671), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_045)
{
    // 145DE ; [.5672.0020.0002] 
    // ANATOLIAN HIEROGLYPH A425

    uint32_t const cps[1] = { 0x145de };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5672), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_046)
{
    // 145DF ; [.5673.0020.0002] 
    // ANATOLIAN HIEROGLYPH A426

    uint32_t const cps[1] = { 0x145df };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5673), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_047)
{
    // 145E0 ; [.5674.0020.0002] 
    // ANATOLIAN HIEROGLYPH A427

    uint32_t const cps[1] = { 0x145e0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5674), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_048)
{
    // 145E1 ; [.5675.0020.0002] 
    // ANATOLIAN HIEROGLYPH A428

    uint32_t const cps[1] = { 0x145e1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5675), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_049)
{
    // 145E2 ; [.5676.0020.0002] 
    // ANATOLIAN HIEROGLYPH A429

    uint32_t const cps[1] = { 0x145e2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5676), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_050)
{
    // 145E3 ; [.5677.0020.0002] 
    // ANATOLIAN HIEROGLYPH A430

    uint32_t const cps[1] = { 0x145e3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5677), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_051)
{
    // 145E4 ; [.5678.0020.0002] 
    // ANATOLIAN HIEROGLYPH A431

    uint32_t const cps[1] = { 0x145e4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5678), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_052)
{
    // 145E5 ; [.5679.0020.0002] 
    // ANATOLIAN HIEROGLYPH A432

    uint32_t const cps[1] = { 0x145e5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5679), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_053)
{
    // 145E6 ; [.567A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A433

    uint32_t const cps[1] = { 0x145e6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x567a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_054)
{
    // 145E7 ; [.567B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A434

    uint32_t const cps[1] = { 0x145e7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x567b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_055)
{
    // 145E8 ; [.567C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A435

    uint32_t const cps[1] = { 0x145e8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x567c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_056)
{
    // 145E9 ; [.567D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A436

    uint32_t const cps[1] = { 0x145e9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x567d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_057)
{
    // 145EA ; [.567E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A437

    uint32_t const cps[1] = { 0x145ea };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x567e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_058)
{
    // 145EB ; [.567F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A438

    uint32_t const cps[1] = { 0x145eb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x567f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_059)
{
    // 145EC ; [.5680.0020.0002] 
    // ANATOLIAN HIEROGLYPH A439

    uint32_t const cps[1] = { 0x145ec };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5680), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_060)
{
    // 145ED ; [.5681.0020.0002] 
    // ANATOLIAN HIEROGLYPH A440

    uint32_t const cps[1] = { 0x145ed };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5681), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_061)
{
    // 145EE ; [.5682.0020.0002] 
    // ANATOLIAN HIEROGLYPH A441

    uint32_t const cps[1] = { 0x145ee };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5682), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_062)
{
    // 145EF ; [.5683.0020.0002] 
    // ANATOLIAN HIEROGLYPH A442

    uint32_t const cps[1] = { 0x145ef };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5683), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_063)
{
    // 145F0 ; [.5684.0020.0002] 
    // ANATOLIAN HIEROGLYPH A443

    uint32_t const cps[1] = { 0x145f0 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5684), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_064)
{
    // 145F1 ; [.5685.0020.0002] 
    // ANATOLIAN HIEROGLYPH A444

    uint32_t const cps[1] = { 0x145f1 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5685), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_065)
{
    // 145F2 ; [.5686.0020.0002] 
    // ANATOLIAN HIEROGLYPH A445

    uint32_t const cps[1] = { 0x145f2 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5686), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_066)
{
    // 145F3 ; [.5687.0020.0002] 
    // ANATOLIAN HIEROGLYPH A446

    uint32_t const cps[1] = { 0x145f3 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5687), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_067)
{
    // 145F4 ; [.5688.0020.0002] 
    // ANATOLIAN HIEROGLYPH A447

    uint32_t const cps[1] = { 0x145f4 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5688), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_068)
{
    // 145F5 ; [.5689.0020.0002] 
    // ANATOLIAN HIEROGLYPH A448

    uint32_t const cps[1] = { 0x145f5 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5689), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_069)
{
    // 145F6 ; [.568A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A449

    uint32_t const cps[1] = { 0x145f6 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x568a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_070)
{
    // 145F7 ; [.568B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A450

    uint32_t const cps[1] = { 0x145f7 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x568b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_071)
{
    // 145F8 ; [.568C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A450A

    uint32_t const cps[1] = { 0x145f8 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x568c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_072)
{
    // 145F9 ; [.568D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A451

    uint32_t const cps[1] = { 0x145f9 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x568d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_073)
{
    // 145FA ; [.568E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A452

    uint32_t const cps[1] = { 0x145fa };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x568e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_074)
{
    // 145FB ; [.568F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A453

    uint32_t const cps[1] = { 0x145fb };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x568f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_075)
{
    // 145FC ; [.5690.0020.0002] 
    // ANATOLIAN HIEROGLYPH A454

    uint32_t const cps[1] = { 0x145fc };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5690), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_076)
{
    // 145FD ; [.5691.0020.0002] 
    // ANATOLIAN HIEROGLYPH A455

    uint32_t const cps[1] = { 0x145fd };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5691), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_077)
{
    // 145FE ; [.5692.0020.0002] 
    // ANATOLIAN HIEROGLYPH A456

    uint32_t const cps[1] = { 0x145fe };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5692), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_078)
{
    // 145FF ; [.5693.0020.0002] 
    // ANATOLIAN HIEROGLYPH A457

    uint32_t const cps[1] = { 0x145ff };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5693), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_079)
{
    // 14600 ; [.5694.0020.0002] 
    // ANATOLIAN HIEROGLYPH A457A

    uint32_t const cps[1] = { 0x14600 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5694), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_080)
{
    // 14601 ; [.5695.0020.0002] 
    // ANATOLIAN HIEROGLYPH A458

    uint32_t const cps[1] = { 0x14601 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5695), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_081)
{
    // 14602 ; [.5696.0020.0002] 
    // ANATOLIAN HIEROGLYPH A459

    uint32_t const cps[1] = { 0x14602 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5696), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_082)
{
    // 14603 ; [.5697.0020.0002] 
    // ANATOLIAN HIEROGLYPH A460

    uint32_t const cps[1] = { 0x14603 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5697), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_083)
{
    // 14604 ; [.5698.0020.0002] 
    // ANATOLIAN HIEROGLYPH A461

    uint32_t const cps[1] = { 0x14604 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5698), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_084)
{
    // 14605 ; [.5699.0020.0002] 
    // ANATOLIAN HIEROGLYPH A462

    uint32_t const cps[1] = { 0x14605 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x5699), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_085)
{
    // 14606 ; [.569A.0020.0002] 
    // ANATOLIAN HIEROGLYPH A463

    uint32_t const cps[1] = { 0x14606 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x569a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_086)
{
    // 14607 ; [.569B.0020.0002] 
    // ANATOLIAN HIEROGLYPH A464

    uint32_t const cps[1] = { 0x14607 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x569b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_087)
{
    // 14608 ; [.569C.0020.0002] 
    // ANATOLIAN HIEROGLYPH A465

    uint32_t const cps[1] = { 0x14608 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x569c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_088)
{
    // 14609 ; [.569D.0020.0002] 
    // ANATOLIAN HIEROGLYPH A466

    uint32_t const cps[1] = { 0x14609 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x569d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_089)
{
    // 1460A ; [.569E.0020.0002] 
    // ANATOLIAN HIEROGLYPH A467

    uint32_t const cps[1] = { 0x1460a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x569e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_090)
{
    // 1460B ; [.569F.0020.0002] 
    // ANATOLIAN HIEROGLYPH A468

    uint32_t const cps[1] = { 0x1460b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x569f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_091)
{
    // 1460C ; [.56A0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A469

    uint32_t const cps[1] = { 0x1460c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_092)
{
    // 1460D ; [.56A1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A470

    uint32_t const cps[1] = { 0x1460d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_093)
{
    // 1460E ; [.56A2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A471

    uint32_t const cps[1] = { 0x1460e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_094)
{
    // 1460F ; [.56A3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A472

    uint32_t const cps[1] = { 0x1460f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_095)
{
    // 14610 ; [.56A4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A473

    uint32_t const cps[1] = { 0x14610 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_096)
{
    // 14611 ; [.56A5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A474

    uint32_t const cps[1] = { 0x14611 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_097)
{
    // 14612 ; [.56A6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A475

    uint32_t const cps[1] = { 0x14612 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_098)
{
    // 14613 ; [.56A7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A476

    uint32_t const cps[1] = { 0x14613 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_099)
{
    // 14614 ; [.56A8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A477

    uint32_t const cps[1] = { 0x14614 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_100)
{
    // 14615 ; [.56A9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A478

    uint32_t const cps[1] = { 0x14615 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56a9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_101)
{
    // 14616 ; [.56AA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A479

    uint32_t const cps[1] = { 0x14616 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56aa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_102)
{
    // 14617 ; [.56AB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A480

    uint32_t const cps[1] = { 0x14617 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56ab), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_103)
{
    // 14618 ; [.56AC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A481

    uint32_t const cps[1] = { 0x14618 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56ac), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_104)
{
    // 14619 ; [.56AD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A482

    uint32_t const cps[1] = { 0x14619 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56ad), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_105)
{
    // 1461A ; [.56AE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A483

    uint32_t const cps[1] = { 0x1461a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56ae), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_106)
{
    // 1461B ; [.56AF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A484

    uint32_t const cps[1] = { 0x1461b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56af), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_107)
{
    // 1461C ; [.56B0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A485

    uint32_t const cps[1] = { 0x1461c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_108)
{
    // 1461D ; [.56B1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A486

    uint32_t const cps[1] = { 0x1461d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_109)
{
    // 1461E ; [.56B2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A487

    uint32_t const cps[1] = { 0x1461e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_110)
{
    // 1461F ; [.56B3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A488

    uint32_t const cps[1] = { 0x1461f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_111)
{
    // 14620 ; [.56B4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A489

    uint32_t const cps[1] = { 0x14620 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_112)
{
    // 14621 ; [.56B5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A490

    uint32_t const cps[1] = { 0x14621 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_113)
{
    // 14622 ; [.56B6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A491

    uint32_t const cps[1] = { 0x14622 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_114)
{
    // 14623 ; [.56B7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A492

    uint32_t const cps[1] = { 0x14623 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_115)
{
    // 14624 ; [.56B8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A493

    uint32_t const cps[1] = { 0x14624 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_116)
{
    // 14625 ; [.56B9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A494

    uint32_t const cps[1] = { 0x14625 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56b9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_117)
{
    // 14626 ; [.56BA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A495

    uint32_t const cps[1] = { 0x14626 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56ba), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_118)
{
    // 14627 ; [.56BB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A496

    uint32_t const cps[1] = { 0x14627 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56bb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_119)
{
    // 14628 ; [.56BC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A497

    uint32_t const cps[1] = { 0x14628 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56bc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_120)
{
    // 14629 ; [.56BD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A501

    uint32_t const cps[1] = { 0x14629 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56bd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_121)
{
    // 1462A ; [.56BE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A502

    uint32_t const cps[1] = { 0x1462a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56be), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_122)
{
    // 1462B ; [.56BF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A503

    uint32_t const cps[1] = { 0x1462b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56bf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_123)
{
    // 1462C ; [.56C0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A504

    uint32_t const cps[1] = { 0x1462c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_124)
{
    // 1462D ; [.56C1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A505

    uint32_t const cps[1] = { 0x1462d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_125)
{
    // 1462E ; [.56C2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A506

    uint32_t const cps[1] = { 0x1462e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_126)
{
    // 1462F ; [.56C3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A507

    uint32_t const cps[1] = { 0x1462f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_127)
{
    // 14630 ; [.56C4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A508

    uint32_t const cps[1] = { 0x14630 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_128)
{
    // 14631 ; [.56C5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A509

    uint32_t const cps[1] = { 0x14631 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_129)
{
    // 14632 ; [.56C6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A510

    uint32_t const cps[1] = { 0x14632 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_130)
{
    // 14633 ; [.56C7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A511

    uint32_t const cps[1] = { 0x14633 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_131)
{
    // 14634 ; [.56C8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A512

    uint32_t const cps[1] = { 0x14634 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_132)
{
    // 14635 ; [.56C9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A513

    uint32_t const cps[1] = { 0x14635 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56c9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_133)
{
    // 14636 ; [.56CA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A514

    uint32_t const cps[1] = { 0x14636 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56ca), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_134)
{
    // 14637 ; [.56CB.0020.0002] 
    // ANATOLIAN HIEROGLYPH A515

    uint32_t const cps[1] = { 0x14637 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56cb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_135)
{
    // 14638 ; [.56CC.0020.0002] 
    // ANATOLIAN HIEROGLYPH A516

    uint32_t const cps[1] = { 0x14638 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56cc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_136)
{
    // 14639 ; [.56CD.0020.0002] 
    // ANATOLIAN HIEROGLYPH A517

    uint32_t const cps[1] = { 0x14639 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56cd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_137)
{
    // 1463A ; [.56CE.0020.0002] 
    // ANATOLIAN HIEROGLYPH A518

    uint32_t const cps[1] = { 0x1463a };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56ce), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_138)
{
    // 1463B ; [.56CF.0020.0002] 
    // ANATOLIAN HIEROGLYPH A519

    uint32_t const cps[1] = { 0x1463b };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56cf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_139)
{
    // 1463C ; [.56D0.0020.0002] 
    // ANATOLIAN HIEROGLYPH A520

    uint32_t const cps[1] = { 0x1463c };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_140)
{
    // 1463D ; [.56D1.0020.0002] 
    // ANATOLIAN HIEROGLYPH A521

    uint32_t const cps[1] = { 0x1463d };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_141)
{
    // 1463E ; [.56D2.0020.0002] 
    // ANATOLIAN HIEROGLYPH A522

    uint32_t const cps[1] = { 0x1463e };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_142)
{
    // 1463F ; [.56D3.0020.0002] 
    // ANATOLIAN HIEROGLYPH A523

    uint32_t const cps[1] = { 0x1463f };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_143)
{
    // 14640 ; [.56D4.0020.0002] 
    // ANATOLIAN HIEROGLYPH A524

    uint32_t const cps[1] = { 0x14640 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_144)
{
    // 14641 ; [.56D5.0020.0002] 
    // ANATOLIAN HIEROGLYPH A525

    uint32_t const cps[1] = { 0x14641 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_145)
{
    // 14642 ; [.56D6.0020.0002] 
    // ANATOLIAN HIEROGLYPH A526

    uint32_t const cps[1] = { 0x14642 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_146)
{
    // 14643 ; [.56D7.0020.0002] 
    // ANATOLIAN HIEROGLYPH A527

    uint32_t const cps[1] = { 0x14643 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_147)
{
    // 14644 ; [.56D8.0020.0002] 
    // ANATOLIAN HIEROGLYPH A528

    uint32_t const cps[1] = { 0x14644 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_148)
{
    // 14645 ; [.56D9.0020.0002] 
    // ANATOLIAN HIEROGLYPH A529

    uint32_t const cps[1] = { 0x14645 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56d9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_161_149)
{
    // 14646 ; [.56DA.0020.0002] 
    // ANATOLIAN HIEROGLYPH A530

    uint32_t const cps[1] = { 0x14646 };
    // biased L2 weight
    boost::text::compressed_collation_element const ces[1] = { {uint16_t(0x56da), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

