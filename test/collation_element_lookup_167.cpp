// Warning! This file is autogenerated.
#include <boost/text/collation_data.hpp>

#include <boost/algorithm/cxx14/equal.hpp>

#include <gtest/gtest.h>



TEST(collation, table_lookup_167_000)
{
    // 16B72 ; [.45CA.0020.0002] 
    // PAHAWH HMONG SIGN CIM HAIS LUS NTOG NTOG

    uint32_t const cps[1] = { 0x16b72 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45ca), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_001)
{
    // 16B73 ; [.45CB.0020.0002] 
    // PAHAWH HMONG SIGN CIM CUAM TSHOOJ

    uint32_t const cps[1] = { 0x16b73 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45cb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_002)
{
    // 16B74 ; [.45CC.0020.0002] 
    // PAHAWH HMONG SIGN CIM TXWV

    uint32_t const cps[1] = { 0x16b74 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45cc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_003)
{
    // 16B75 ; [.45CD.0020.0002] 
    // PAHAWH HMONG SIGN CIM TXWV CHWV

    uint32_t const cps[1] = { 0x16b75 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45cd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_004)
{
    // 16B76 ; [.45CE.0020.0002] 
    // PAHAWH HMONG SIGN CIM PUB DAWB

    uint32_t const cps[1] = { 0x16b76 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45ce), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_005)
{
    // 16B77 ; [.45CF.0020.0002] 
    // PAHAWH HMONG SIGN CIM NRES TOS

    uint32_t const cps[1] = { 0x16b77 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45cf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_006)
{
    // 16B7D ; [.45D0.0020.0002] 
    // PAHAWH HMONG CLAN SIGN TSHEEJ

    uint32_t const cps[1] = { 0x16b7d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_007)
{
    // 16B7E ; [.45D1.0020.0002] 
    // PAHAWH HMONG CLAN SIGN YEEG

    uint32_t const cps[1] = { 0x16b7e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_008)
{
    // 16B7F ; [.45D2.0020.0002] 
    // PAHAWH HMONG CLAN SIGN LIS

    uint32_t const cps[1] = { 0x16b7f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_009)
{
    // 16B80 ; [.45D3.0020.0002] 
    // PAHAWH HMONG CLAN SIGN LAUJ

    uint32_t const cps[1] = { 0x16b80 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_010)
{
    // 16B81 ; [.45D4.0020.0002] 
    // PAHAWH HMONG CLAN SIGN XYOOJ

    uint32_t const cps[1] = { 0x16b81 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_011)
{
    // 16B82 ; [.45D5.0020.0002] 
    // PAHAWH HMONG CLAN SIGN KOO

    uint32_t const cps[1] = { 0x16b82 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_012)
{
    // 16B83 ; [.45D6.0020.0002] 
    // PAHAWH HMONG CLAN SIGN HAWJ

    uint32_t const cps[1] = { 0x16b83 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_013)
{
    // 16B84 ; [.45D7.0020.0002] 
    // PAHAWH HMONG CLAN SIGN MUAS

    uint32_t const cps[1] = { 0x16b84 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_014)
{
    // 16B85 ; [.45D8.0020.0002] 
    // PAHAWH HMONG CLAN SIGN THOJ

    uint32_t const cps[1] = { 0x16b85 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_015)
{
    // 16B86 ; [.45D9.0020.0002] 
    // PAHAWH HMONG CLAN SIGN TSAB

    uint32_t const cps[1] = { 0x16b86 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45d9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_016)
{
    // 16B87 ; [.45DA.0020.0002] 
    // PAHAWH HMONG CLAN SIGN PHAB

    uint32_t const cps[1] = { 0x16b87 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45da), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_017)
{
    // 16B88 ; [.45DB.0020.0002] 
    // PAHAWH HMONG CLAN SIGN KHAB

    uint32_t const cps[1] = { 0x16b88 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45db), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_018)
{
    // 16B89 ; [.45DC.0020.0002] 
    // PAHAWH HMONG CLAN SIGN HAM

    uint32_t const cps[1] = { 0x16b89 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45dc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_019)
{
    // 16B8A ; [.45DD.0020.0002] 
    // PAHAWH HMONG CLAN SIGN VAJ

    uint32_t const cps[1] = { 0x16b8a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45dd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_020)
{
    // 16B8B ; [.45DE.0020.0002] 
    // PAHAWH HMONG CLAN SIGN FAJ

    uint32_t const cps[1] = { 0x16b8b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45de), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_021)
{
    // 16B8C ; [.45DF.0020.0002] 
    // PAHAWH HMONG CLAN SIGN YAJ

    uint32_t const cps[1] = { 0x16b8c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45df), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_022)
{
    // 16B8D ; [.45E0.0020.0002] 
    // PAHAWH HMONG CLAN SIGN TSWB

    uint32_t const cps[1] = { 0x16b8d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45e0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_023)
{
    // 16B8E ; [.45E1.0020.0002] 
    // PAHAWH HMONG CLAN SIGN KWM

    uint32_t const cps[1] = { 0x16b8e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45e1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_024)
{
    // 16B8F ; [.45E2.0020.0002] 
    // PAHAWH HMONG CLAN SIGN VWJ

    uint32_t const cps[1] = { 0x16b8f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x45e2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_025)
{
    // 16F00 ; [.44AE.0020.0002] 
    // MIAO LETTER PA

    uint32_t const cps[1] = { 0x16f00 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ae), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_026)
{
    // 16F01 ; [.44AF.0020.0002] 
    // MIAO LETTER BA

    uint32_t const cps[1] = { 0x16f01 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44af), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_027)
{
    // 16F02 ; [.44B0.0020.0002] 
    // MIAO LETTER YI PA

    uint32_t const cps[1] = { 0x16f02 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_028)
{
    // 16F03 ; [.44B1.0020.0002] 
    // MIAO LETTER PLA

    uint32_t const cps[1] = { 0x16f03 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_029)
{
    // 16F04 ; [.44B2.0020.0002] 
    // MIAO LETTER MA

    uint32_t const cps[1] = { 0x16f04 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_030)
{
    // 16F05 ; [.44B3.0020.0002] 
    // MIAO LETTER MHA

    uint32_t const cps[1] = { 0x16f05 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_031)
{
    // 16F06 ; [.44B2.0020.0004] 
    // MIAO LETTER ARCHAIC MA

    uint32_t const cps[1] = { 0x16f06 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b2), uint8_t(0x0), uint8_t(0x4)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_032)
{
    // 16F07 ; [.44B4.0020.0002] 
    // MIAO LETTER FA

    uint32_t const cps[1] = { 0x16f07 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_033)
{
    // 16F08 ; [.44B5.0020.0002] 
    // MIAO LETTER VA

    uint32_t const cps[1] = { 0x16f08 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_034)
{
    // 16F09 ; [.44B6.0020.0002] 
    // MIAO LETTER VFA

    uint32_t const cps[1] = { 0x16f09 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_035)
{
    // 16F0A ; [.44B7.0020.0002] 
    // MIAO LETTER TA

    uint32_t const cps[1] = { 0x16f0a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_036)
{
    // 16F0B ; [.44B8.0020.0002] 
    // MIAO LETTER DA

    uint32_t const cps[1] = { 0x16f0b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_037)
{
    // 16F0C ; [.44B9.0020.0002] 
    // MIAO LETTER YI TTA

    uint32_t const cps[1] = { 0x16f0c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44b9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_038)
{
    // 16F0D ; [.44BA.0020.0002] 
    // MIAO LETTER YI TA

    uint32_t const cps[1] = { 0x16f0d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ba), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_039)
{
    // 16F0E ; [.44BB.0020.0002] 
    // MIAO LETTER TTA

    uint32_t const cps[1] = { 0x16f0e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44bb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_040)
{
    // 16F0F ; [.44BC.0020.0002] 
    // MIAO LETTER DDA

    uint32_t const cps[1] = { 0x16f0f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44bc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_041)
{
    // 16F10 ; [.44BD.0020.0002] 
    // MIAO LETTER NA

    uint32_t const cps[1] = { 0x16f10 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44bd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_042)
{
    // 16F11 ; [.44BE.0020.0002] 
    // MIAO LETTER NHA

    uint32_t const cps[1] = { 0x16f11 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44be), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_043)
{
    // 16F12 ; [.44BF.0020.0002] 
    // MIAO LETTER YI NNA

    uint32_t const cps[1] = { 0x16f12 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44bf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_044)
{
    // 16F13 ; [.44BD.0020.0004] 
    // MIAO LETTER ARCHAIC NA

    uint32_t const cps[1] = { 0x16f13 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44bd), uint8_t(0x0), uint8_t(0x4)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_045)
{
    // 16F14 ; [.44C0.0020.0002] 
    // MIAO LETTER NNA

    uint32_t const cps[1] = { 0x16f14 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_046)
{
    // 16F15 ; [.44C1.0020.0002] 
    // MIAO LETTER NNHA

    uint32_t const cps[1] = { 0x16f15 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_047)
{
    // 16F16 ; [.44C2.0020.0002] 
    // MIAO LETTER LA

    uint32_t const cps[1] = { 0x16f16 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_048)
{
    // 16F17 ; [.44C3.0020.0002] 
    // MIAO LETTER LYA

    uint32_t const cps[1] = { 0x16f17 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_049)
{
    // 16F18 ; [.44C4.0020.0002] 
    // MIAO LETTER LHA

    uint32_t const cps[1] = { 0x16f18 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_050)
{
    // 16F19 ; [.44C5.0020.0002] 
    // MIAO LETTER LHYA

    uint32_t const cps[1] = { 0x16f19 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_051)
{
    // 16F1A ; [.44C6.0020.0002] 
    // MIAO LETTER TLHA

    uint32_t const cps[1] = { 0x16f1a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_052)
{
    // 16F1B ; [.44C7.0020.0002] 
    // MIAO LETTER DLHA

    uint32_t const cps[1] = { 0x16f1b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_053)
{
    // 16F1C ; [.44C8.0020.0002] 
    // MIAO LETTER TLHYA

    uint32_t const cps[1] = { 0x16f1c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_054)
{
    // 16F1D ; [.44C9.0020.0002] 
    // MIAO LETTER DLHYA

    uint32_t const cps[1] = { 0x16f1d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44c9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_055)
{
    // 16F1E ; [.44CA.0020.0002] 
    // MIAO LETTER KA

    uint32_t const cps[1] = { 0x16f1e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ca), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_056)
{
    // 16F1F ; [.44CB.0020.0002] 
    // MIAO LETTER GA

    uint32_t const cps[1] = { 0x16f1f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44cb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_057)
{
    // 16F20 ; [.44CC.0020.0002] 
    // MIAO LETTER YI KA

    uint32_t const cps[1] = { 0x16f20 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44cc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_058)
{
    // 16F21 ; [.44CD.0020.0002] 
    // MIAO LETTER QA

    uint32_t const cps[1] = { 0x16f21 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44cd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_059)
{
    // 16F22 ; [.44CE.0020.0002] 
    // MIAO LETTER QGA

    uint32_t const cps[1] = { 0x16f22 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ce), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_060)
{
    // 16F23 ; [.44CF.0020.0002] 
    // MIAO LETTER NGA

    uint32_t const cps[1] = { 0x16f23 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44cf), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_061)
{
    // 16F24 ; [.44D0.0020.0002] 
    // MIAO LETTER NGHA

    uint32_t const cps[1] = { 0x16f24 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_062)
{
    // 16F25 ; [.44CF.0020.0004] 
    // MIAO LETTER ARCHAIC NGA

    uint32_t const cps[1] = { 0x16f25 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44cf), uint8_t(0x0), uint8_t(0x4)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_063)
{
    // 16F26 ; [.44D1.0020.0002] 
    // MIAO LETTER HA

    uint32_t const cps[1] = { 0x16f26 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_064)
{
    // 16F27 ; [.44D2.0020.0002] 
    // MIAO LETTER XA

    uint32_t const cps[1] = { 0x16f27 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_065)
{
    // 16F28 ; [.44D3.0020.0002] 
    // MIAO LETTER GHA

    uint32_t const cps[1] = { 0x16f28 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_066)
{
    // 16F29 ; [.44D4.0020.0002] 
    // MIAO LETTER GHHA

    uint32_t const cps[1] = { 0x16f29 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_067)
{
    // 16F2A ; [.44D5.0020.0002] 
    // MIAO LETTER TSSA

    uint32_t const cps[1] = { 0x16f2a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_068)
{
    // 16F2B ; [.44D6.0020.0002] 
    // MIAO LETTER DZZA

    uint32_t const cps[1] = { 0x16f2b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_069)
{
    // 16F2C ; [.44D7.0020.0002] 
    // MIAO LETTER NYA

    uint32_t const cps[1] = { 0x16f2c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_070)
{
    // 16F2D ; [.44D8.0020.0002] 
    // MIAO LETTER NYHA

    uint32_t const cps[1] = { 0x16f2d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_071)
{
    // 16F2E ; [.44D9.0020.0002] 
    // MIAO LETTER TSHA

    uint32_t const cps[1] = { 0x16f2e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44d9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_072)
{
    // 16F2F ; [.44DA.0020.0002] 
    // MIAO LETTER DZHA

    uint32_t const cps[1] = { 0x16f2f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44da), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_073)
{
    // 16F30 ; [.44DB.0020.0002] 
    // MIAO LETTER YI TSHA

    uint32_t const cps[1] = { 0x16f30 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44db), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_074)
{
    // 16F31 ; [.44DC.0020.0002] 
    // MIAO LETTER YI DZHA

    uint32_t const cps[1] = { 0x16f31 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44dc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_075)
{
    // 16F32 ; [.44DD.0020.0002] 
    // MIAO LETTER REFORMED TSHA

    uint32_t const cps[1] = { 0x16f32 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44dd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_076)
{
    // 16F33 ; [.44DE.0020.0002] 
    // MIAO LETTER SHA

    uint32_t const cps[1] = { 0x16f33 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44de), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_077)
{
    // 16F34 ; [.44DF.0020.0002] 
    // MIAO LETTER SSA

    uint32_t const cps[1] = { 0x16f34 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44df), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_078)
{
    // 16F35 ; [.44E0.0020.0002] 
    // MIAO LETTER ZHA

    uint32_t const cps[1] = { 0x16f35 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_079)
{
    // 16F36 ; [.44E1.0020.0002] 
    // MIAO LETTER ZSHA

    uint32_t const cps[1] = { 0x16f36 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_080)
{
    // 16F37 ; [.44E2.0020.0002] 
    // MIAO LETTER TSA

    uint32_t const cps[1] = { 0x16f37 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_081)
{
    // 16F38 ; [.44E3.0020.0002] 
    // MIAO LETTER DZA

    uint32_t const cps[1] = { 0x16f38 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_082)
{
    // 16F39 ; [.44E4.0020.0002] 
    // MIAO LETTER YI TSA

    uint32_t const cps[1] = { 0x16f39 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_083)
{
    // 16F3A ; [.44E5.0020.0002] 
    // MIAO LETTER SA

    uint32_t const cps[1] = { 0x16f3a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_084)
{
    // 16F3B ; [.44E6.0020.0002] 
    // MIAO LETTER ZA

    uint32_t const cps[1] = { 0x16f3b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_085)
{
    // 16F3C ; [.44E7.0020.0002] 
    // MIAO LETTER ZSA

    uint32_t const cps[1] = { 0x16f3c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_086)
{
    // 16F3D ; [.44E8.0020.0002] 
    // MIAO LETTER ZZA

    uint32_t const cps[1] = { 0x16f3d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_087)
{
    // 16F3E ; [.44E9.0020.0002] 
    // MIAO LETTER ZZSA

    uint32_t const cps[1] = { 0x16f3e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_088)
{
    // 16F3F ; [.44E8.0020.0004] 
    // MIAO LETTER ARCHAIC ZZA

    uint32_t const cps[1] = { 0x16f3f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44e8), uint8_t(0x0), uint8_t(0x4)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_089)
{
    // 16F40 ; [.44EA.0020.0002] 
    // MIAO LETTER ZZYA

    uint32_t const cps[1] = { 0x16f40 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ea), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_090)
{
    // 16F41 ; [.44EB.0020.0002] 
    // MIAO LETTER ZZSYA

    uint32_t const cps[1] = { 0x16f41 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44eb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_091)
{
    // 16F42 ; [.44EC.0020.0002] 
    // MIAO LETTER WA

    uint32_t const cps[1] = { 0x16f42 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ec), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_092)
{
    // 16F43 ; [.44ED.0020.0002] 
    // MIAO LETTER AH

    uint32_t const cps[1] = { 0x16f43 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ed), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_093)
{
    // 16F44 ; [.44EE.0020.0002] 
    // MIAO LETTER HHA

    uint32_t const cps[1] = { 0x16f44 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ee), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_094)
{
    // 16F50 ; [.44EF.0020.0002] 
    // MIAO LETTER NASALIZATION

    uint32_t const cps[1] = { 0x16f50 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ef), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_095)
{
    // 16F51 ; [.44F0.0020.0002] 
    // MIAO SIGN ASPIRATION

    uint32_t const cps[1] = { 0x16f51 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f0), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_096)
{
    // 16F52 ; [.44F1.0020.0002] 
    // MIAO SIGN REFORMED VOICING

    uint32_t const cps[1] = { 0x16f52 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f1), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_097)
{
    // 16F53 ; [.44F2.0020.0002] 
    // MIAO SIGN REFORMED ASPIRATION

    uint32_t const cps[1] = { 0x16f53 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f2), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_098)
{
    // 16F54 ; [.44F3.0020.0002] 
    // MIAO VOWEL SIGN A

    uint32_t const cps[1] = { 0x16f54 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f3), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_099)
{
    // 16F55 ; [.44F4.0020.0002] 
    // MIAO VOWEL SIGN AA

    uint32_t const cps[1] = { 0x16f55 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f4), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_100)
{
    // 16F56 ; [.44F5.0020.0002] 
    // MIAO VOWEL SIGN AHH

    uint32_t const cps[1] = { 0x16f56 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f5), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_101)
{
    // 16F57 ; [.44F6.0020.0002] 
    // MIAO VOWEL SIGN AN

    uint32_t const cps[1] = { 0x16f57 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f6), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_102)
{
    // 16F58 ; [.44F7.0020.0002] 
    // MIAO VOWEL SIGN ANG

    uint32_t const cps[1] = { 0x16f58 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f7), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_103)
{
    // 16F59 ; [.44F8.0020.0002] 
    // MIAO VOWEL SIGN O

    uint32_t const cps[1] = { 0x16f59 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f8), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_104)
{
    // 16F5A ; [.44F9.0020.0002] 
    // MIAO VOWEL SIGN OO

    uint32_t const cps[1] = { 0x16f5a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44f9), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_105)
{
    // 16F5B ; [.44FA.0020.0002] 
    // MIAO VOWEL SIGN WO

    uint32_t const cps[1] = { 0x16f5b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44fa), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_106)
{
    // 16F5C ; [.44FB.0020.0002] 
    // MIAO VOWEL SIGN W

    uint32_t const cps[1] = { 0x16f5c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44fb), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_107)
{
    // 16F5D ; [.44FC.0020.0002] 
    // MIAO VOWEL SIGN E

    uint32_t const cps[1] = { 0x16f5d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44fc), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_108)
{
    // 16F5E ; [.44FD.0020.0002] 
    // MIAO VOWEL SIGN EN

    uint32_t const cps[1] = { 0x16f5e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44fd), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_109)
{
    // 16F5F ; [.44FE.0020.0002] 
    // MIAO VOWEL SIGN ENG

    uint32_t const cps[1] = { 0x16f5f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44fe), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_110)
{
    // 16F60 ; [.44FF.0020.0002] 
    // MIAO VOWEL SIGN OEY

    uint32_t const cps[1] = { 0x16f60 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x44ff), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_111)
{
    // 16F61 ; [.4500.0020.0002] 
    // MIAO VOWEL SIGN I

    uint32_t const cps[1] = { 0x16f61 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4500), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_112)
{
    // 16F62 ; [.4501.0020.0002] 
    // MIAO VOWEL SIGN IA

    uint32_t const cps[1] = { 0x16f62 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4501), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_113)
{
    // 16F63 ; [.4502.0020.0002] 
    // MIAO VOWEL SIGN IAN

    uint32_t const cps[1] = { 0x16f63 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4502), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_114)
{
    // 16F64 ; [.4503.0020.0002] 
    // MIAO VOWEL SIGN IANG

    uint32_t const cps[1] = { 0x16f64 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4503), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_115)
{
    // 16F65 ; [.4504.0020.0002] 
    // MIAO VOWEL SIGN IO

    uint32_t const cps[1] = { 0x16f65 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4504), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_116)
{
    // 16F66 ; [.4505.0020.0002] 
    // MIAO VOWEL SIGN IE

    uint32_t const cps[1] = { 0x16f66 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4505), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_117)
{
    // 16F67 ; [.4506.0020.0002] 
    // MIAO VOWEL SIGN II

    uint32_t const cps[1] = { 0x16f67 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4506), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_118)
{
    // 16F68 ; [.4507.0020.0002] 
    // MIAO VOWEL SIGN IU

    uint32_t const cps[1] = { 0x16f68 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4507), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_119)
{
    // 16F69 ; [.4508.0020.0002] 
    // MIAO VOWEL SIGN ING

    uint32_t const cps[1] = { 0x16f69 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4508), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_120)
{
    // 16F6A ; [.4509.0020.0002] 
    // MIAO VOWEL SIGN U

    uint32_t const cps[1] = { 0x16f6a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4509), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_121)
{
    // 16F6B ; [.450A.0020.0002] 
    // MIAO VOWEL SIGN UA

    uint32_t const cps[1] = { 0x16f6b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x450a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_122)
{
    // 16F6C ; [.450B.0020.0002] 
    // MIAO VOWEL SIGN UAN

    uint32_t const cps[1] = { 0x16f6c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x450b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_123)
{
    // 16F6D ; [.450C.0020.0002] 
    // MIAO VOWEL SIGN UANG

    uint32_t const cps[1] = { 0x16f6d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x450c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_124)
{
    // 16F6E ; [.450D.0020.0002] 
    // MIAO VOWEL SIGN UU

    uint32_t const cps[1] = { 0x16f6e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x450d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_125)
{
    // 16F6F ; [.450E.0020.0002] 
    // MIAO VOWEL SIGN UEI

    uint32_t const cps[1] = { 0x16f6f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x450e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_126)
{
    // 16F70 ; [.450F.0020.0002] 
    // MIAO VOWEL SIGN UNG

    uint32_t const cps[1] = { 0x16f70 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x450f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_127)
{
    // 16F71 ; [.4510.0020.0002] 
    // MIAO VOWEL SIGN Y

    uint32_t const cps[1] = { 0x16f71 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4510), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_128)
{
    // 16F72 ; [.4511.0020.0002] 
    // MIAO VOWEL SIGN YI

    uint32_t const cps[1] = { 0x16f72 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4511), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_129)
{
    // 16F73 ; [.4512.0020.0002] 
    // MIAO VOWEL SIGN AE

    uint32_t const cps[1] = { 0x16f73 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4512), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_130)
{
    // 16F74 ; [.4513.0020.0002] 
    // MIAO VOWEL SIGN AEE

    uint32_t const cps[1] = { 0x16f74 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4513), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_131)
{
    // 16F75 ; [.4514.0020.0002] 
    // MIAO VOWEL SIGN ERR

    uint32_t const cps[1] = { 0x16f75 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4514), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_132)
{
    // 16F76 ; [.4515.0020.0002] 
    // MIAO VOWEL SIGN ROUNDED ERR

    uint32_t const cps[1] = { 0x16f76 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4515), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_133)
{
    // 16F77 ; [.4516.0020.0002] 
    // MIAO VOWEL SIGN ER

    uint32_t const cps[1] = { 0x16f77 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4516), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_134)
{
    // 16F78 ; [.4517.0020.0002] 
    // MIAO VOWEL SIGN ROUNDED ER

    uint32_t const cps[1] = { 0x16f78 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4517), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_135)
{
    // 16F79 ; [.4518.0020.0002] 
    // MIAO VOWEL SIGN AI

    uint32_t const cps[1] = { 0x16f79 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4518), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_136)
{
    // 16F7A ; [.4519.0020.0002] 
    // MIAO VOWEL SIGN EI

    uint32_t const cps[1] = { 0x16f7a };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4519), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_137)
{
    // 16F7B ; [.451A.0020.0002] 
    // MIAO VOWEL SIGN AU

    uint32_t const cps[1] = { 0x16f7b };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x451a), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_138)
{
    // 16F7C ; [.451B.0020.0002] 
    // MIAO VOWEL SIGN OU

    uint32_t const cps[1] = { 0x16f7c };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x451b), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_139)
{
    // 16F7D ; [.451C.0020.0002] 
    // MIAO VOWEL SIGN N

    uint32_t const cps[1] = { 0x16f7d };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x451c), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_140)
{
    // 16F7E ; [.451D.0020.0002] 
    // MIAO VOWEL SIGN NG

    uint32_t const cps[1] = { 0x16f7e };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x451d), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_141)
{
    // 16F8F ; [.451E.0020.0002] 
    // MIAO TONE RIGHT

    uint32_t const cps[1] = { 0x16f8f };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x451e), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_142)
{
    // 16F90 ; [.451F.0020.0002] 
    // MIAO TONE TOP RIGHT

    uint32_t const cps[1] = { 0x16f90 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x451f), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_143)
{
    // 16F91 ; [.4520.0020.0002] 
    // MIAO TONE ABOVE

    uint32_t const cps[1] = { 0x16f91 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4520), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_144)
{
    // 16F92 ; [.4521.0020.0002] 
    // MIAO TONE BELOW

    uint32_t const cps[1] = { 0x16f92 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4521), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_145)
{
    // 16F93 ; [.4522.0020.0002] 
    // MIAO LETTER TONE-2

    uint32_t const cps[1] = { 0x16f93 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4522), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_146)
{
    // 16F94 ; [.4523.0020.0002] 
    // MIAO LETTER TONE-3

    uint32_t const cps[1] = { 0x16f94 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4523), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_147)
{
    // 16F95 ; [.4524.0020.0002] 
    // MIAO LETTER TONE-4

    uint32_t const cps[1] = { 0x16f95 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4524), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_148)
{
    // 16F96 ; [.4525.0020.0002] 
    // MIAO LETTER TONE-5

    uint32_t const cps[1] = { 0x16f96 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4525), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

TEST(collation, table_lookup_167_149)
{
    // 16F97 ; [.4526.0020.0002] 
    // MIAO LETTER TONE-6

    uint32_t const cps[1] = { 0x16f97 };
    // biased L2 weight
    boost::text::collation_element const ces[1] = { {uint16_t(0x4526), uint8_t(0x0), uint8_t(0x2)} };

    auto const coll = boost::text::longest_collation(cps, cps + 1);

    EXPECT_TRUE(coll.node_.collation_elements_);
    EXPECT_EQ(coll.match_length_, 1);
    EXPECT_TRUE(boost::algorithm::equal(coll.node_.collation_elements_.begin(), coll.node_.collation_elements_.end(), ces, ces + 1));
}

